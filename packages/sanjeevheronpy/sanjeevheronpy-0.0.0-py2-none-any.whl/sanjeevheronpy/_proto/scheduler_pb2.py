# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scheduler.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import common_pb2
import packing_plan_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='scheduler.proto',
  package='heronpy._proto.scheduler',
  serialized_pb='\n\x0fscheduler.proto\x12\x15heronpy._proto.scheduler\x1a\x0c\x63ommon.proto\x1a\x12packing_plan.proto\"X\n\x11SchedulerLocation\x12\x15\n\rtopology_name\x18\x01 \x02(\t\x12\x15\n\rhttp_endpoint\x18\x02 \x02(\t\x12\x15\n\rjob_page_link\x18\x03 \x03(\t\",\n\x13KillTopologyRequest\x12\x15\n\rtopology_name\x18\x01 \x02(\t\"H\n\x16RestartTopologyRequest\x12\x15\n\rtopology_name\x18\x01 \x02(\t\x12\x17\n\x0f\x63ontainer_index\x18\x02 \x02(\x05\"\x92\x01\n\x15UpdateTopologyRequest\x12;\n\x12\x63urrentPackingPlan\x18\x01 \x02(\x0b\x32\x1f.heronpy._proto.system.PackingPlan\x12<\n\x13proposedPackingPlan\x18\x02 \x02(\x0b\x32\x1f.heronpy._proto.system.PackingPlan\"?\n\x11SchedulerResponse\x12*\n\x06status\x18\x01 \x02(\x0b\x32\x1a.heronpy._proto.system.StatusB.\n!com.twitter.heronpy._proto.schedulerB\tScheduler')




_SCHEDULERLOCATION = _descriptor.Descriptor(
  name='SchedulerLocation',
  full_name='heronpy._proto.scheduler.SchedulerLocation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topology_name', full_name='heronpy._proto.scheduler.SchedulerLocation.topology_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='http_endpoint', full_name='heronpy._proto.scheduler.SchedulerLocation.http_endpoint', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='job_page_link', full_name='heronpy._proto.scheduler.SchedulerLocation.job_page_link', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=76,
  serialized_end=164,
)


_KILLTOPOLOGYREQUEST = _descriptor.Descriptor(
  name='KillTopologyRequest',
  full_name='heronpy._proto.scheduler.KillTopologyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topology_name', full_name='heronpy._proto.scheduler.KillTopologyRequest.topology_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=166,
  serialized_end=210,
)


_RESTARTTOPOLOGYREQUEST = _descriptor.Descriptor(
  name='RestartTopologyRequest',
  full_name='heronpy._proto.scheduler.RestartTopologyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topology_name', full_name='heronpy._proto.scheduler.RestartTopologyRequest.topology_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='container_index', full_name='heronpy._proto.scheduler.RestartTopologyRequest.container_index', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=212,
  serialized_end=284,
)


_UPDATETOPOLOGYREQUEST = _descriptor.Descriptor(
  name='UpdateTopologyRequest',
  full_name='heronpy._proto.scheduler.UpdateTopologyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='currentPackingPlan', full_name='heronpy._proto.scheduler.UpdateTopologyRequest.currentPackingPlan', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proposedPackingPlan', full_name='heronpy._proto.scheduler.UpdateTopologyRequest.proposedPackingPlan', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=287,
  serialized_end=433,
)


_SCHEDULERRESPONSE = _descriptor.Descriptor(
  name='SchedulerResponse',
  full_name='heronpy._proto.scheduler.SchedulerResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='heronpy._proto.scheduler.SchedulerResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=435,
  serialized_end=498,
)

_UPDATETOPOLOGYREQUEST.fields_by_name['currentPackingPlan'].message_type = packing_plan_pb2._PACKINGPLAN
_UPDATETOPOLOGYREQUEST.fields_by_name['proposedPackingPlan'].message_type = packing_plan_pb2._PACKINGPLAN
_SCHEDULERRESPONSE.fields_by_name['status'].message_type = common_pb2._STATUS
DESCRIPTOR.message_types_by_name['SchedulerLocation'] = _SCHEDULERLOCATION
DESCRIPTOR.message_types_by_name['KillTopologyRequest'] = _KILLTOPOLOGYREQUEST
DESCRIPTOR.message_types_by_name['RestartTopologyRequest'] = _RESTARTTOPOLOGYREQUEST
DESCRIPTOR.message_types_by_name['UpdateTopologyRequest'] = _UPDATETOPOLOGYREQUEST
DESCRIPTOR.message_types_by_name['SchedulerResponse'] = _SCHEDULERRESPONSE

class SchedulerLocation(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SCHEDULERLOCATION

  # @@protoc_insertion_point(class_scope:heronpy._proto.scheduler.SchedulerLocation)

class KillTopologyRequest(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _KILLTOPOLOGYREQUEST

  # @@protoc_insertion_point(class_scope:heronpy._proto.scheduler.KillTopologyRequest)

class RestartTopologyRequest(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _RESTARTTOPOLOGYREQUEST

  # @@protoc_insertion_point(class_scope:heronpy._proto.scheduler.RestartTopologyRequest)

class UpdateTopologyRequest(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _UPDATETOPOLOGYREQUEST

  # @@protoc_insertion_point(class_scope:heronpy._proto.scheduler.UpdateTopologyRequest)

class SchedulerResponse(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SCHEDULERRESPONSE

  # @@protoc_insertion_point(class_scope:heronpy._proto.scheduler.SchedulerResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), '\n!com.twitter.heronpy._proto.schedulerB\tScheduler')
# @@protoc_insertion_point(module_scope)
