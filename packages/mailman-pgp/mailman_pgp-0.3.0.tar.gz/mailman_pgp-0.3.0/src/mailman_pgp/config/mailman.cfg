# Copyright (C) 2017 Jan Jancar
#
# This file is a part of the Mailman PGP plugin.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.

# Example additions to mailman.cfg to enable mailman-pgp.

# Setup the mailman-pgp plugin under the `pgp` name. To use the django-pgpmailman
# web UI. The `MAILMAN_PGP_PLUGIN_NAME` in its project settings.py must be set
# to the name of the plugin, as thats where Mailman roots the plugins REST api
# endpoint.
[plugin.pgp]
class: mailman_pgp.plugin.PGPMailman
path: mailman_pgp
enable: yes
configuration: python:mailman_pgp.config.mailman_pgp

# Use the custom PGP enabled deliver callable, performs the signing and encryption
# on PGP enabled lists which are configured to do so.
[mta]
outgoing: mailman_pgp.mta.deliver.deliver

# Use the custom PGP enabled runner on the default `in` queue.
[runner.in]
class: mailman_pgp.runners.incoming.PGPIncomingRunner

# This runners name needs to be the same as the `[queues].in` config option in
# the mailman-pgp config file. It runs the default IncomingRunner on a queue
# of a different name, so that messages come into the mailman-pgp incoming runner
# and can be then passed to the default incoming runner, defined here.
[runner.in_default]
class: mailman.runners.incoming.IncomingRunner
