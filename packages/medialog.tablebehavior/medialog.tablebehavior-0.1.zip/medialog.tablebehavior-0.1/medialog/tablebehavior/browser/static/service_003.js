;(function($,d,f,g){var h='1.0.0';var i='dialog';function Plugin(a,b){this.$element=$(a);this._init(b);if(this.settings.openOnInit){this._activate()}};Plugin.prototype={_activate:function(){this.$element.addClass('dialogOpen');var a=$('body');if(this.settings.modal){a.addClass('dialogModal');if(this.settings.modalWithOverlay){a.addClass('dialogOverlay')}a.append('<div class="dialogBlockPage"></div>')}else{this.$element.addClass('dialogNonModal')}if(this.settings.closeByEscape){var b=this;a.on('keyup.dialog',function(e){if(e.keyCode===27){b._deactivate()}})}this.state='open';this.settings.onOpen()},_deactivate:function(){this.settings.onClose();var a=$('body');if(this.settings.closeByEscape){a.off('.dialog')}this.$element.removeClass('dialogOpen');if(this.settings.modal){$('.dialogBlockPage').remove();if(this.settings.modalWithOverlay){a.removeClass('dialogOverlay')}a.removeClass('dialogModal')}else{this.$element.removeClass('dialogNonModal')}this.state='closed'},_init:function(a){var b=this;var c={openOnInit:true,closeByEscape:true,modal:true,modalWithOverlay:true,onOpen:function(){},onClose:function(){}};this.settings=$.extend(c,a||{});this.state='closed'},open:function(a){this._activate()},close:function(a){this._deactivate()},isopen:function(a){return(this.state=='open')}};$.fn[i]=function(a){var b=$(this).data(i);if(b&&a&&typeof a!='object'&&a.indexOf('_')!=0){return b[a](Array.prototype.slice.call(arguments,1))}if(typeof a==='object'||!a){b=new Plugin(this,a);$(this).data(i,b);return this}$.error('Wrong call to '+i);return this}})(jQuery);