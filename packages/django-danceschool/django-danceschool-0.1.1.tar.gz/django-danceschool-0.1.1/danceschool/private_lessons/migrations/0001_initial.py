# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-18 16:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0004_auto_20170517_1145'),
    ]

    operations = [
        migrations.CreateModel(
            name='InstructorAvailabilityRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(verbose_name='Start date')),
                ('endDate', models.DateField(verbose_name='End date')),
                ('weekdays', multiselectfield.db.fields.MultiSelectField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=13, verbose_name='Limit to days of the week')),
                ('startTime', models.TimeField(verbose_name='Start time')),
                ('endTime', models.TimeField(verbose_name='End time')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Instructor')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Location', verbose_name='Location')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorAvailabilitySlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField(verbose_name='Start time')),
                ('duration', models.PositiveSmallIntegerField(default=30, verbose_name='Slot duration (minutes)')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Instructor', verbose_name='Instructor')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Location', verbose_name='Location')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorPrivateLessonDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defaultRate', models.FloatField(blank=True, null=True)),
                ('instructor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Instructor')),
                ('roles', models.ManyToManyField(blank=True, null=True, to='core.DanceRole')),
            ],
        ),
        migrations.CreateModel(
            name='PrivateLessonEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Event')),
                ('comments', models.TextField(blank=True, help_text='Enter any additional comments or important information relating to this private lesson.', null=True, verbose_name='Comments')),
                ('danceType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.DanceType')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.DanceRole')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.event',),
        ),
    ]
