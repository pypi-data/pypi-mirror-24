{"name": "CVE-2010-4312", "public_date": "2010-11-22T00:00:00", "package_state": [{"fix_state": "Affected", "product_name": "Red Hat JBoss EWS 1", "package_name": "tomcat6", "cpe": "cpe:/a:redhat:jboss_enterprise_web_server:1"}, {"fix_state": "Affected", "product_name": "Red Hat Enterprise Linux 6", "package_name": "tomcat6", "cpe": "cpe:/o:redhat:enterprise_linux:6"}], "document_distribution": "Copyright \u00a9 2016 Red Hat, Inc. All rights reserved.", "threat_severity": "Moderate", "bugzilla": {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=658267", "description": "\nCVE-2010-4312 tomcat6: does not use HTTPOnly for session cookies by default\n    ", "id": "658267"}, "details": ["\nThe default configuration of Apache Tomcat 6.x does not include the HTTPOnly flag in a Set-Cookie header, which makes it easier for remote attackers to hijack a session via script access to a cookie.\n    "], "statement": "\nThis issue is only a defense-in-depth measure, and we currently have no plans to fix this flaw in Red Hat Enterprise Linux 6. The use of the useHttpOnly setting in Tomcat only prohibits client scripts from accessing cookies when it is correctly implemented in the user's web browser. The use of httpOnly does not guarantee XSS protection; it is only a defense-in-depth measure. Additionally, implementing this as a default setting could have negative impact on existing expected behavior in client scripts. As a result, the Red Hat Security Response Team has determined that this issue is not a security flaw, but a proactive hardening measure and the risk associated with implementing it by default and possibly breaking expected behaviour is greater than any benefits it provides. Users who wish to take advantage of this hardening measure can enable useHttpOnly by adding '<Context useHttpOnly=\"true\">' to the default context.xml or a specific web-application context.\n    ", "cvss": {"cvss_scoring_vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "status": "draft", "cvss_base_score": "4.3"}}