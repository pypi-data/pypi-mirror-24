{"name": "CVE-2015-4165", "public_date": "2015-06-09T00:00:00", "package_state": [{"fix_state": "Will not fix", "product_name": "Red Hat Satellite 6", "package_name": "elasticsearch", "cpe": "cpe:/a:redhat:network_satellite:6"}, {"fix_state": "Will not fix", "product_name": "Red Hat Subscription Asset Manager 1", "package_name": "elasticsearch", "cpe": "cpe:/a:redhat:rhel_sam:1"}], "document_distribution": "Copyright \u00a9 2016 Red Hat, Inc. All rights reserved.", "upstream_fix": "Elasticsearch 1.6.0", "threat_severity": "Low", "bugzilla": {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1230761", "description": "\nCVE-2015-4165 elasticsearch: unspecified arbitrary files modification vulnerability\n    ", "id": "1230761"}, "mitigation": "\nFor Satellite 6.x and Sam 1.x you can simply firewall elasticsearch to trusted users only (e.g. root, katello, foreman). For instructions on this please see:\n\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Satellite/6.0/html-single/Installation_Guide/index.html#sect-Red_Hat_Satellite-Installation_Guide-Red_Hat_Satellite_Installation-Configuring_Red_Hat_Satellite_Manually\n    ", "references": ["\nhttps://www.elastic.co/community/security/\n    "], "details": ["\nThe snapshot API in Elasticsearch before 1.6.0 when another application exists on the system that can read Lucene files and execute code from them, is accessible by the attacker, and the Java VM on which Elasticsearch is running can write to a location that the other application can read and execute from, allows remote authenticated users to write to and create arbitrary snapshot metadata files, and potentially execute arbitrary code.\n    "], "statement": "\nThis issue affects the versions of elasticsearch as shipped with Red Hat Satellite 6.x and Subscription Asset Manager 1.x. Red Hat Product Security has rated this issue as having Low security impact. A future update may address this issue. For additional information, refer to the Issue Severity Classification: https://access.redhat.com/security/updates/classification/.\n    ", "cvss": {"cvss_scoring_vector": "AV:L/AC:M/Au:N/C:P/I:P/A:N", "status": "draft", "cvss_base_score": "3.3"}}