{"name": "CVE-2016-5259", "affected_release": [{"advisory": "RHSA-2016:1551", "release_date": "2016-08-03T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:5", "product_name": "Red Hat Enterprise Linux 5", "package": "firefox-45.3.0-1.el5_11"}, {"advisory": "RHSA-2016:1551", "release_date": "2016-08-03T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:6", "product_name": "Red Hat Enterprise Linux 6", "package": "firefox-45.3.0-1.el6_8"}, {"advisory": "RHSA-2016:1551", "release_date": "2016-08-03T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:7", "product_name": "Red Hat Enterprise Linux 7", "package": "firefox-45.3.0-1.el7_2"}], "public_date": "2016-08-02T00:00:00", "package_state": [{"fix_state": "Not affected", "product_name": "Red Hat Enterprise Linux 5", "package_name": "thunderbird", "cpe": "cpe:/o:redhat:enterprise_linux:5"}, {"fix_state": "Not affected", "product_name": "Red Hat Enterprise Linux 6", "package_name": "thunderbird", "cpe": "cpe:/o:redhat:enterprise_linux:6"}, {"fix_state": "Not affected", "product_name": "Red Hat Enterprise Linux 7", "package_name": "thunderbird", "cpe": "cpe:/o:redhat:enterprise_linux:7"}], "acknowledgement": "\nRed Hat would like to thank the Mozilla project for reporting this issue. Upstream acknowledges Looben Yang as the original reporter.\n    ", "document_distribution": "Copyright \u00a9 2016 Red Hat, Inc. All rights reserved.", "cvss3": {"status": "verified", "cvss3_scoring_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "cvss3_base_score": "7.3"}, "threat_severity": "Critical", "bugzilla": {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1361984", "description": "\nCVE-2016-5259 Mozilla: Use-after-free in service workers with nested sync events (MFSA 2016-73)\n    ", "id": "1361984"}, "references": ["\nhttps://www.mozilla.org/security/announce/2016/mfsa2016-73.html\n    "], "details": ["\nUse-after-free vulnerability in the CanonicalizeXPCOMParticipant function in Mozilla Firefox before 48.0 and Firefox ESR 45.x before 45.3 allows remote attackers to execute arbitrary code via a script that closes its own Service Worker within a nested sync event loop.\n    "], "cvss": {"cvss_scoring_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "status": "verified", "cvss_base_score": "6.8"}}