{"document_distribution": "Copyright \u00a9 2016 Red Hat, Inc. All rights reserved.", "name": "CVE-2015-8779", "affected_release": [{"advisory": "RHSA-2017:0680", "release_date": "2017-03-21T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:6", "product_name": "Red Hat Enterprise Linux 6", "package": "glibc-2.12-1.209.el6"}, {"advisory": "RHSA-2017:1916", "release_date": "2017-08-01T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:7", "product_name": "Red Hat Enterprise Linux 7", "package": "glibc-2.17-196.el7"}], "public_date": "2015-01-29T00:00:00", "package_state": [{"fix_state": "Will not fix", "product_name": "Red Hat Enterprise Linux 5", "package_name": "compat-glibc", "cpe": "cpe:/o:redhat:enterprise_linux:5"}, {"fix_state": "Will not fix", "product_name": "Red Hat Enterprise Linux 5", "package_name": "glibc", "cpe": "cpe:/o:redhat:enterprise_linux:5"}, {"fix_state": "Will not fix", "product_name": "Red Hat Enterprise Linux 6", "package_name": "compat-glibc", "cpe": "cpe:/o:redhat:enterprise_linux:6"}, {"fix_state": "Will not fix", "product_name": "Red Hat Enterprise Linux 7", "package_name": "compat-glibc", "cpe": "cpe:/o:redhat:enterprise_linux:7"}], "iava": "2016-A-0053", "upstream_fix": "glibc 2.23", "threat_severity": "Moderate", "bugzilla": {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1300312", "description": "\nCVE-2015-8779 glibc: Unbounded stack allocation in catopen function\n    ", "id": "1300312"}, "mitigation": "\nDo not use applications which call catopen with unbounded strings.  The catopen function is rarely used.  Typical application usage involves passing a short, constant string to catopen, so most applications are not affect even if they call catopen.\n    ", "details": ["\nStack-based buffer overflow in the catopen function in the GNU C Library (aka glibc or libc6) before 2.23 allows context-dependent attackers to cause a denial of service (application crash) or possibly execute arbitrary code via a long catalog name.\n    ", "\nA stack based buffer overflow vulnerability was found in the catopen() function. An excessively long string passed to the function could cause it to crash or, potentially, execute arbitrary code.\n    "], "cvss": {"cvss_scoring_vector": "AV:N/AC:H/Au:N/C:P/I:P/A:P", "status": "verified", "cvss_base_score": "5.1"}}