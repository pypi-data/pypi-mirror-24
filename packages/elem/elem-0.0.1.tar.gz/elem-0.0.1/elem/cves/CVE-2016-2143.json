{"name": "CVE-2016-2143", "affected_release": [{"advisory": "RHSA-2016:2766", "release_date": "2016-11-15T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:6", "product_name": "Red Hat Enterprise Linux 6", "package": "kernel-2.6.32-642.11.1.el6"}, {"advisory": "RHSA-2016:1539", "release_date": "2016-08-02T00:00:00", "cpe": "cpe:/o:redhat:enterprise_linux:7", "product_name": "Red Hat Enterprise Linux 7", "package": "kernel-3.10.0-327.28.2.el7"}], "public_date": "2016-06-01T00:00:00", "package_state": [{"fix_state": "Not affected", "product_name": "Red Hat Enterprise MRG 2", "package_name": "realtime-kernel", "cpe": "cpe:/a:redhat:enterprise_mrg:2"}, {"fix_state": "Not affected", "product_name": "Red Hat Enterprise Linux 5", "package_name": "kernel", "cpe": "cpe:/o:redhat:enterprise_linux:5"}, {"fix_state": "Not affected", "product_name": "Red Hat Enterprise Linux 7", "package_name": "kernel-rt", "cpe": "cpe:/o:redhat:enterprise_linux:7"}], "document_distribution": "Copyright \u00a9 2016 Red Hat, Inc. All rights reserved.", "cvss3": {"status": "verified", "cvss3_scoring_vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "cvss3_base_score": "7.8"}, "threat_severity": "Moderate", "bugzilla": {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1308908", "description": "\nCVE-2016-2143 kernel: Fork of large process causes memory corruption\n    ", "id": "1308908"}, "details": ["\nThe fork implementation in the Linux kernel before 4.5 on s390 platforms mishandles the case of four page-table levels, which allows local users to cause a denial of service (system crash) or possibly have unspecified other impact via a crafted application, related to arch/s390/include/asm/mmu_context.h and arch/s390/include/asm/pgalloc.h.\n    ", "\nIt was reported that on s390x, the fork of a process with four page table levels will cause memory corruption with a variety of symptoms. All processes are created with three level page table and a limit of 4TB for the address space. If the parent process has four page table levels with a limit of 8PB, the function that duplicates the address space will try to copy memory areas outside of the address space limit for the child process.\n    "], "cwe": "CWE-119", "cvss": {"cvss_scoring_vector": "AV:L/AC:H/Au:N/C:C/I:C/A:C", "status": "verified", "cvss_base_score": "6.2"}}