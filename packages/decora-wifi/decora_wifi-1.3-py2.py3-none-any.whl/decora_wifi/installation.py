# Leviton Cloud Services API model Installation.
# Auto-generated by api_scraper.py.
#
# Copyright 2017 Tim Lyakhovetskiy <tlyakhov@gmail.com>
#
# This code is released under the terms of the MIT license. See the LICENSE
# file for more details.
from decora_wifi.base_model import BaseModel


class Installation(BaseModel):
    def __init__(self, session):
        super(Installation, self).__init__(session)

    def get(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_location(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/location".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_controller(self, controllers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers/{1}".format(self._id, controllers)
        self._session.call_api(api, attribs, 'get')

    def delete_controller(self, controllers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers/{1}".format(self._id, controllers)
        self._session.call_api(api, attribs, 'delete')

    def put_controller(self, controllers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers/{1}".format(self._id, controllers)
        self._session.call_api(api, attribs, 'put')

    def get_thermostat(self, thermostats, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostats/{1}".format(self._id, thermostats)
        self._session.call_api(api, attribs, 'get')

    def delete_thermostat(self, thermostats, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostats/{1}".format(self._id, thermostats)
        self._session.call_api(api, attribs, 'delete')

    def put_thermostat(self, thermostats, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostats/{1}".format(self._id, thermostats)
        self._session.call_api(api, attribs, 'put')

    def get_area(self, areas, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas/{1}".format(self._id, areas)
        self._session.call_api(api, attribs, 'get')

    def delete_area(self, areas, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas/{1}".format(self._id, areas)
        self._session.call_api(api, attribs, 'delete')

    def put_area(self, areas, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas/{1}".format(self._id, areas)
        self._session.call_api(api, attribs, 'put')

    def get_load(self, loads, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loads/{1}".format(self._id, loads)
        self._session.call_api(api, attribs, 'get')

    def delete_load(self, loads, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loads/{1}".format(self._id, loads)
        self._session.call_api(api, attribs, 'delete')

    def put_load(self, loads, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loads/{1}".format(self._id, loads)
        self._session.call_api(api, attribs, 'put')

    def get_shade(self, shades, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/shades/{1}".format(self._id, shades)
        self._session.call_api(api, attribs, 'get')

    def delete_shade(self, shades, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/shades/{1}".format(self._id, shades)
        self._session.call_api(api, attribs, 'delete')

    def put_shade(self, shades, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/shades/{1}".format(self._id, shades)
        self._session.call_api(api, attribs, 'put')

    def get_sensor(self, sensors, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensors/{1}".format(self._id, sensors)
        self._session.call_api(api, attribs, 'get')

    def delete_sensor(self, sensors, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensors/{1}".format(self._id, sensors)
        self._session.call_api(api, attribs, 'delete')

    def put_sensor(self, sensors, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensors/{1}".format(self._id, sensors)
        self._session.call_api(api, attribs, 'put')

    def get_schedule(self, schedules, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/schedules/{1}".format(self._id, schedules)
        self._session.call_api(api, attribs, 'get')

    def delete_schedule(self, schedules, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/schedules/{1}".format(self._id, schedules)
        self._session.call_api(api, attribs, 'delete')

    def put_schedule(self, schedules, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/schedules/{1}".format(self._id, schedules)
        self._session.call_api(api, attribs, 'put')

    def get_feed_item(self, feed_items, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/feedItems/{1}".format(self._id, feed_items)
        self._session.call_api(api, attribs, 'get')

    def get_activitie(self, activities, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activities/{1}".format(self._id, activities)
        self._session.call_api(api, attribs, 'get')

    def delete_activitie(self, activities, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activities/{1}".format(self._id, activities)
        self._session.call_api(api, attribs, 'delete')

    def put_activitie(self, activities, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activities/{1}".format(self._id, activities)
        self._session.call_api(api, attribs, 'put')

    def get_activity_trigger(self, activity_triggers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activityTriggers/{1}".format(self._id, activity_triggers)
        self._session.call_api(api, attribs, 'get')

    def delete_activity_trigger(self, activity_triggers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activityTriggers/{1}".format(self._id, activity_triggers)
        self._session.call_api(api, attribs, 'delete')

    def put_activity_trigger(self, activity_triggers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activityTriggers/{1}".format(self._id, activity_triggers)
        self._session.call_api(api, attribs, 'put')

    def get_action_block(self, action_blocks, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actionBlocks/{1}".format(self._id, action_blocks)
        self._session.call_api(api, attribs, 'get')

    def delete_action_block(self, action_blocks, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actionBlocks/{1}".format(self._id, action_blocks)
        self._session.call_api(api, attribs, 'delete')

    def put_action_block(self, action_blocks, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actionBlocks/{1}".format(self._id, action_blocks)
        self._session.call_api(api, attribs, 'put')

    def get_action(self, actions, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actions/{1}".format(self._id, actions)
        self._session.call_api(api, attribs, 'get')

    def delete_action(self, actions, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actions/{1}".format(self._id, actions)
        self._session.call_api(api, attribs, 'delete')

    def put_action(self, actions, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actions/{1}".format(self._id, actions)
        self._session.call_api(api, attribs, 'put')

    def get_touchscreen(self, touchscreens, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/touchscreens/{1}".format(self._id, touchscreens)
        self._session.call_api(api, attribs, 'get')

    def delete_touchscreen(self, touchscreens, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/touchscreens/{1}".format(self._id, touchscreens)
        self._session.call_api(api, attribs, 'delete')

    def put_touchscreen(self, touchscreens, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/touchscreens/{1}".format(self._id, touchscreens)
        self._session.call_api(api, attribs, 'put')

    def get_thermostat_snapshot(self, thermostat_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostatSnapshots/{1}".format(self._id, thermostat_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_thermostat_snapshot(self, thermostat_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostatSnapshots/{1}".format(self._id, thermostat_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_thermostat_snapshot(self, thermostat_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostatSnapshots/{1}".format(self._id, thermostat_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_load_snapshot(self, load_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loadSnapshots/{1}".format(self._id, load_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_load_snapshot(self, load_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loadSnapshots/{1}".format(self._id, load_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_load_snapshot(self, load_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loadSnapshots/{1}".format(self._id, load_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_sensor_snapshot(self, sensor_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensorSnapshots/{1}".format(self._id, sensor_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_sensor_snapshot(self, sensor_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensorSnapshots/{1}".format(self._id, sensor_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_sensor_snapshot(self, sensor_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensorSnapshots/{1}".format(self._id, sensor_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_area_snapshot(self, area_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areaSnapshots/{1}".format(self._id, area_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_area_snapshot(self, area_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areaSnapshots/{1}".format(self._id, area_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_area_snapshot(self, area_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areaSnapshots/{1}".format(self._id, area_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_controllers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_controllers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_controllers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_count(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/controllers/count".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_thermostats(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostats".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_thermostats(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostats".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_thermostats(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostats".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_areas(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_areas(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_areas(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_loads(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loads".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_loads(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loads".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_loads(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loads".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_shades(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/shades".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_shades(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/shades".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_shades(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/shades".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_sensors(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensors".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_sensors(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensors".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_sensors(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensors".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_schedules(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/schedules".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_schedules(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/schedules".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_schedules(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/schedules".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_feed_items(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/feedItems".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activities".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activities".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activities".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_activity_triggers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activityTriggers".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_activity_triggers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activityTriggers".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_activity_triggers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/activityTriggers".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_action_blocks(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actionBlocks".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_action_blocks(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actionBlocks".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_action_blocks(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actionBlocks".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_actions(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actions".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_actions(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actions".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_actions(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/actions".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_touchscreens(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/touchscreens".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_touchscreens(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/touchscreens".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_touchscreens(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/touchscreens".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_thermostat_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostatSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_thermostat_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostatSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_thermostat_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/thermostatSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_load_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loadSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_load_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loadSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_load_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/loadSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_sensor_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensorSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_sensor_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensorSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_sensor_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/sensorSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_area_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areaSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_area_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areaSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_area_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areaSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    @staticmethod
    def create(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations"
        session.call_api(api, attribs, 'post')

    @staticmethod
    def update(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations"
        session.call_api(api, attribs, 'put')

    @staticmethod
    def post_replace_or_create(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/replaceOrCreate"
        session.call_api(api, attribs, 'post')

    @staticmethod
    def post_upsert_with_where(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/upsertWithWhere"
        session.call_api(api, attribs, 'post')

    def get_exists(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/exists".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_replace(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/replace".format(self._id)
        self._session.call_api(api, attribs, 'post')

    @staticmethod
    def get(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations"
        session.call_api(api, attribs, 'get')

    @staticmethod
    def get_find_one(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/findOne"
        session.call_api(api, attribs, 'get')

    def delete(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    @staticmethod
    def get_count(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/count"
        session.call_api(api, attribs, 'get')

    def update(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}".format(self._id)
        self._session.call_api(api, attribs, 'put')

    def post_register_controller(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/registerController".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def get_installation(self, installations, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Locations/{0}/installations/{1}".format(self._id, installations)
        self._session.call_api(api, attribs, 'get')

    def delete_installation(self, installations, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Locations/{0}/installations/{1}".format(self._id, installations)
        self._session.call_api(api, attribs, 'delete')

    def put_installation(self, installations, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Locations/{0}/installations/{1}".format(self._id, installations)
        self._session.call_api(api, attribs, 'put')

    def get_installations(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Locations/{0}/installations".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_installations(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Locations/{0}/installations".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_installations(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Locations/{0}/installations".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_installation(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Controllers/{0}/installation".format(self._id)
        self._session.call_api(api, attribs, 'get')

