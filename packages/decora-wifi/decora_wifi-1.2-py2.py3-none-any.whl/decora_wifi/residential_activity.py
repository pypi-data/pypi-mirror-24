# Leviton Cloud Services API model ResidentialActivity.
# Auto-generated by api_scraper.py.
#
# Copyright 2017 Tim Lyakhovetskiy <tlyakhov@gmail.com>
#
# This code is released under the terms of the MIT license. See the LICENSE
# file for more details.
from decora_wifi.base_model import BaseModel


class ResidentialActivity(BaseModel):
    def __init__(self, session):
        super(ResidentialActivity, self).__init__(session)

    def get_residential_activitie(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_residence(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residence".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_residential_action(self, residential_actions, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions/{1}".format(self._id, residential_actions)
        self._session.call_api(api, attribs, 'get')

    def delete_residential_action(self, residential_actions, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions/{1}".format(self._id, residential_actions)
        self._session.call_api(api, attribs, 'delete')

    def put_residential_action(self, residential_actions, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions/{1}".format(self._id, residential_actions)
        self._session.call_api(api, attribs, 'put')

    def get_residential_actions(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_residential_actions(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_residential_actions(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_count(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/residentialActions/count".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_residential_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def put_residential_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities".format(self._id)
        self._session.call_api(api, attribs, 'put')

    def post_replace_or_create(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/replaceOrCreate".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def post_upsert_with_where(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/upsertWithWhere".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def get_exists(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/exists".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_replace(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}/replace".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def get_residential_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_find_one(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/findOne".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def delete_residential_activitie(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def put_residential_activitie(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/{0}".format(self._id)
        self._session.call_api(api, attribs, 'put')

    def post_execute(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActivities/execute".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def get_residential_activitie(self, residential_activities, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Residences/{0}/residentialActivities/{1}".format(self._id, residential_activities)
        self._session.call_api(api, attribs, 'get')

    def delete_residential_activitie(self, residential_activities, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Residences/{0}/residentialActivities/{1}".format(self._id, residential_activities)
        self._session.call_api(api, attribs, 'delete')

    def put_residential_activitie(self, residential_activities, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Residences/{0}/residentialActivities/{1}".format(self._id, residential_activities)
        self._session.call_api(api, attribs, 'put')

    def delete_residential_activities(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Residences/{0}/residentialActivities".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_residential_activity(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/ResidentialActions/{0}/residentialActivity".format(self._id)
        self._session.call_api(api, attribs, 'get')

