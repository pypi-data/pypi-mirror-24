# Leviton Cloud Services API model OmniNotifierEmail.
# Auto-generated by api_scraper.py.
#
# Copyright 2017 Tim Lyakhovetskiy <tlyakhov@gmail.com>
#
# This code is released under the terms of the MIT license. See the LICENSE
# file for more details.
from decora_wifi.base_model import BaseModel


class OmniNotifierEmail(BaseModel):
    def __init__(self, session):
        super(OmniNotifierEmail, self).__init__(session)

    def get(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/{0}".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_omni_notifier(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/{0}/omniNotifier".format(self._id)
        self._session.call_api(api, attribs, 'get')

    @staticmethod
    def create(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails"
        session.call_api(api, attribs, 'post')

    @staticmethod
    def update(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails"
        session.call_api(api, attribs, 'put')

    @staticmethod
    def post_replace_or_create(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/replaceOrCreate"
        session.call_api(api, attribs, 'post')

    @staticmethod
    def post_upsert_with_where(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/upsertWithWhere"
        session.call_api(api, attribs, 'post')

    def get_exists(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/{0}/exists".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_replace(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/{0}/replace".format(self._id)
        self._session.call_api(api, attribs, 'post')

    @staticmethod
    def get(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails"
        session.call_api(api, attribs, 'get')

    @staticmethod
    def get_find_one(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/findOne"
        session.call_api(api, attribs, 'get')

    @staticmethod
    def post_update(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/update"
        session.call_api(api, attribs, 'post')

    def delete(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/{0}".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    @staticmethod
    def get_count(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/count"
        session.call_api(api, attribs, 'get')

    def update(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/{0}".format(self._id)
        self._session.call_api(api, attribs, 'put')

    @staticmethod
    def post_change_stream(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifierEmails/change-stream"
        session.call_api(api, attribs, 'post')

    def get_omni_notifier_email(self, omni_notifier_emails, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails/{1}".format(self._id, omni_notifier_emails)
        self._session.call_api(api, attribs, 'get')

    def delete_omni_notifier_email(self, omni_notifier_emails, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails/{1}".format(self._id, omni_notifier_emails)
        self._session.call_api(api, attribs, 'delete')

    def put_omni_notifier_email(self, omni_notifier_emails, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails/{1}".format(self._id, omni_notifier_emails)
        self._session.call_api(api, attribs, 'put')

    def get_omni_notifier_emails(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_omni_notifier_emails(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_omni_notifier_emails(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_count(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/OmniNotifiers/{0}/omniNotifierEmails/count".format(self._id)
        self._session.call_api(api, attribs, 'get')

