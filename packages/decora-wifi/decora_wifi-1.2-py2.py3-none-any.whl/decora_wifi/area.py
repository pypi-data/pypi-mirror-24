# Leviton Cloud Services API model Area.
# Auto-generated by api_scraper.py.
#
# Copyright 2017 Tim Lyakhovetskiy <tlyakhov@gmail.com>
#
# This code is released under the terms of the MIT license. See the LICENSE
# file for more details.
from decora_wifi.base_model import BaseModel


class Area(BaseModel):
    def __init__(self, session):
        super(Area, self).__init__(session)

    def get(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_installation(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/installation".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_thermostat(self, thermostats, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats/{1}".format(self._id, thermostats)
        self._session.call_api(api, attribs, 'get')

    def delete_thermostat(self, thermostats, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats/{1}".format(self._id, thermostats)
        self._session.call_api(api, attribs, 'delete')

    def put_thermostat(self, thermostats, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats/{1}".format(self._id, thermostats)
        self._session.call_api(api, attribs, 'put')

    def get_load(self, loads, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loads/{1}".format(self._id, loads)
        self._session.call_api(api, attribs, 'get')

    def delete_load(self, loads, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loads/{1}".format(self._id, loads)
        self._session.call_api(api, attribs, 'delete')

    def put_load(self, loads, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loads/{1}".format(self._id, loads)
        self._session.call_api(api, attribs, 'put')

    def get_shade(self, shades, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/shades/{1}".format(self._id, shades)
        self._session.call_api(api, attribs, 'get')

    def delete_shade(self, shades, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/shades/{1}".format(self._id, shades)
        self._session.call_api(api, attribs, 'delete')

    def put_shade(self, shades, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/shades/{1}".format(self._id, shades)
        self._session.call_api(api, attribs, 'put')

    def get_sensor(self, sensors, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/sensors/{1}".format(self._id, sensors)
        self._session.call_api(api, attribs, 'get')

    def delete_sensor(self, sensors, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/sensors/{1}".format(self._id, sensors)
        self._session.call_api(api, attribs, 'delete')

    def put_sensor(self, sensors, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/sensors/{1}".format(self._id, sensors)
        self._session.call_api(api, attribs, 'put')

    def get_activity_trigger(self, activity_triggers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/activityTriggers/{1}".format(self._id, activity_triggers)
        self._session.call_api(api, attribs, 'get')

    def delete_activity_trigger(self, activity_triggers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/activityTriggers/{1}".format(self._id, activity_triggers)
        self._session.call_api(api, attribs, 'delete')

    def put_activity_trigger(self, activity_triggers, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/activityTriggers/{1}".format(self._id, activity_triggers)
        self._session.call_api(api, attribs, 'put')

    def get_thermostat_snapshot(self, thermostat_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostatSnapshots/{1}".format(self._id, thermostat_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_thermostat_snapshot(self, thermostat_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostatSnapshots/{1}".format(self._id, thermostat_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_thermostat_snapshot(self, thermostat_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostatSnapshots/{1}".format(self._id, thermostat_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_load_snapshot(self, load_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loadSnapshots/{1}".format(self._id, load_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_load_snapshot(self, load_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loadSnapshots/{1}".format(self._id, load_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_load_snapshot(self, load_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loadSnapshots/{1}".format(self._id, load_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_area_snapshot(self, area_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/areaSnapshots/{1}".format(self._id, area_snapshots)
        self._session.call_api(api, attribs, 'get')

    def delete_area_snapshot(self, area_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/areaSnapshots/{1}".format(self._id, area_snapshots)
        self._session.call_api(api, attribs, 'delete')

    def put_area_snapshot(self, area_snapshots, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/areaSnapshots/{1}".format(self._id, area_snapshots)
        self._session.call_api(api, attribs, 'put')

    def get_thermostats(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_thermostats(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_thermostats(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_count(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostats/count".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def get_loads(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loads".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_loads(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loads".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_loads(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loads".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_shades(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/shades".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_shades(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/shades".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_shades(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/shades".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_sensors(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/sensors".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_sensors(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/sensors".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_sensors(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/sensors".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_activity_triggers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/activityTriggers".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_activity_triggers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/activityTriggers".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_activity_triggers(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/activityTriggers".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_thermostat_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostatSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_thermostat_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostatSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_thermostat_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/thermostatSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_load_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loadSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_load_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loadSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_load_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/loadSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_area_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/areaSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_area_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/areaSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_area_snapshots(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/areaSnapshots".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    @staticmethod
    def create(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas"
        session.call_api(api, attribs, 'post')

    @staticmethod
    def update(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas"
        session.call_api(api, attribs, 'put')

    @staticmethod
    def post_replace_or_create(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/replaceOrCreate"
        session.call_api(api, attribs, 'post')

    @staticmethod
    def post_upsert_with_where(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/upsertWithWhere"
        session.call_api(api, attribs, 'post')

    def get_exists(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/exists".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_replace(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}/replace".format(self._id)
        self._session.call_api(api, attribs, 'post')

    @staticmethod
    def get(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas"
        session.call_api(api, attribs, 'get')

    @staticmethod
    def get_find_one(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/findOne"
        session.call_api(api, attribs, 'get')

    def delete(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    @staticmethod
    def get_count(session, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/count"
        session.call_api(api, attribs, 'get')

    def update(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Areas/{0}".format(self._id)
        self._session.call_api(api, attribs, 'put')

    def get_area(self, areas, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas/{1}".format(self._id, areas)
        self._session.call_api(api, attribs, 'get')

    def delete_area(self, areas, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas/{1}".format(self._id, areas)
        self._session.call_api(api, attribs, 'delete')

    def put_area(self, areas, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas/{1}".format(self._id, areas)
        self._session.call_api(api, attribs, 'put')

    def get_areas(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas".format(self._id)
        self._session.call_api(api, attribs, 'get')

    def post_areas(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas".format(self._id)
        self._session.call_api(api, attribs, 'post')

    def delete_areas(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Installations/{0}/areas".format(self._id)
        self._session.call_api(api, attribs, 'delete')

    def get_area(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Thermostats/{0}/area".format(self._id)
        self._session.call_api(api, attribs, 'get')

