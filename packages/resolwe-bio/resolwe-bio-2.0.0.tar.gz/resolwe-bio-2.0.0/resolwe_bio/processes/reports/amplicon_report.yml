# ===================
# Generate PDF report
# ===================

- slug: amplicon-report
  name: Amplicon report
  requirements:
    expression-engine: jinja
  data_name: "Report ({{ coverage|sample_name|default('?') }})"
  version: 0.1.3
  type: data:report:amplicon
  category: analyses:variants
  flow_collection: sample
  persistence: CACHED
  description: >
    Create amplicon report.
  input:
    - name: pcr_metrics
      label: Picard TargetedPcrMetrics
      type: data:picard:coverage
    - name: coverage
      label: Coverage
      type: data:coverage
    - name: panel_name
      label: Amplicon panel name
      type: basic:string
    - name: template
      label: Report template
      type: data:file
    - name: logo
      label: Logo
      type: data:file
    - name: annot_vars
      label: Annotated variants (snpEff)
      type: list:data:snpeff
  output:
    - name: report
      label: Report
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      SAMPLE_NAME={{ coverage|sample_name }}
      SAMPLE_SLUG={{ coverage|sample_slug }}

      make_report.py --sample "${SAMPLE_NAME}" \
        --cov {{coverage.amplicon_cov.file}} \
        --covmetrics {{coverage.cov_metrics.file}} \
        --covplot {{coverage.covplot.file}} \
        --metrics {{pcr_metrics.target_pcr_metrics.file}} \
        --template {{template.file.file}} \
        --logo {{logo.file.file}} \
        --vcf {% for vars in annot_vars %}{{vars.annotation.file}} {% endfor %} \
        --panel {{panel_name}}

      re-checkrc

      mv report.pdf "${SAMPLE_SLUG}_report.pdf"

      re-save-file report "${SAMPLE_SLUG}_report.pdf"
