from ...tl.tlobject import TLObject


class DestroySessionOk(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    destroy_session_ok#e22045fc session_id:long = DestroySessionRes"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xe22045fc
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xaf0ce7bd

    def __init__(self, session_id):
        """
        :param session_id: Telegram type: "long".

        Constructor for DestroySessionRes: Instance of either DestroySessionOk, DestroySessionNone.
        """
        super().__init__()

        self.session_id = session_id

    def to_dict(self):
        return {
            'session_id': self.session_id,
        }

    def on_send(self, writer):
        writer.write_int(DestroySessionOk.constructor_id, signed=False)
        writer.write_long(self.session_id)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return DestroySessionOk(None)

    def on_response(self, reader):
        self.session_id = reader.read_long()

    def __repr__(self):
        return 'destroy_session_ok#e22045fc session_id:long = DestroySessionRes'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
