from ....tl.tlobject import TLObject


class Password(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    account.password#7c18141c current_salt:bytes new_salt:bytes hint:string has_recovery:Bool email_unconfirmed_pattern:string = account.Password"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x7c18141c
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x53a211a3

    def __init__(self, current_salt, new_salt, hint, has_recovery, email_unconfirmed_pattern):
        """
        :param current_salt: Telegram type: "bytes".
        :param new_salt: Telegram type: "bytes".
        :param hint: Telegram type: "string".
        :param has_recovery: Telegram type: "Bool".
        :param email_unconfirmed_pattern: Telegram type: "string".

        Constructor for account.Password: Instance of either NoPassword, Password.
        """
        super().__init__()

        self.current_salt = current_salt
        self.new_salt = new_salt
        self.hint = hint
        self.has_recovery = has_recovery
        self.email_unconfirmed_pattern = email_unconfirmed_pattern

    def to_dict(self):
        return {
            'current_salt': self.current_salt,
            'new_salt': self.new_salt,
            'hint': self.hint,
            'has_recovery': self.has_recovery,
            'email_unconfirmed_pattern': self.email_unconfirmed_pattern,
        }

    def on_send(self, writer):
        writer.write_int(Password.constructor_id, signed=False)
        writer.tgwrite_bytes(self.current_salt)
        writer.tgwrite_bytes(self.new_salt)
        writer.tgwrite_string(self.hint)
        writer.tgwrite_bool(self.has_recovery)
        writer.tgwrite_string(self.email_unconfirmed_pattern)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return Password(None, None, None, None, None)

    def on_response(self, reader):
        self.current_salt = reader.tgread_bytes()
        self.new_salt = reader.tgread_bytes()
        self.hint = reader.tgread_string()
        self.has_recovery = reader.tgread_bool()
        self.email_unconfirmed_pattern = reader.tgread_string()

    def __repr__(self):
        return 'account.password#7c18141c current_salt:bytes new_salt:bytes hint:string has_recovery:Bool email_unconfirmed_pattern:string = account.Password'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
