from ...tl.tlobject import TLObject


class TopPeerCategoryPeers(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    topPeerCategoryPeers#fb834291 category:TopPeerCategory count:int peers:Vector<TopPeer> = TopPeerCategoryPeers"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xfb834291
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x4aec930

    def __init__(self, category, count, peers):
        """
        :param category: Telegram type: "TopPeerCategory".
        :param count: Telegram type: "int".
        :param peers: Telegram type: "TopPeer". Must be a list.

        Constructor for TopPeerCategoryPeers: Instance of TopPeerCategoryPeers.
        """
        super().__init__()

        self.category = category
        self.count = count
        self.peers = peers

    def to_dict(self):
        return {
            'category': None if self.category is None else self.category.to_dict(),
            'count': self.count,
            'peers': [] if self.peers is None else [None if x is None else x.to_dict() for x in self.peers],
        }

    def on_send(self, writer):
        writer.write_int(TopPeerCategoryPeers.constructor_id, signed=False)
        self.category.on_send(writer)
        writer.write_int(self.count)
        writer.write_int(0x1cb5c415, signed=False)  # Vector's constructor ID
        writer.write_int(len(self.peers))
        for _x in self.peers:
            _x.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return TopPeerCategoryPeers(None, None, None)

    def on_response(self, reader):
        self.category = reader.tgread_object()
        self.count = reader.read_int()
        reader.read_int()  # Vector's constructor ID
        self.peers = []  # Initialize an empty list
        _len = reader.read_int()
        for _ in range(_len):
            _x = reader.tgread_object()
            self.peers.append(_x)

    def __repr__(self):
        return 'topPeerCategoryPeers#fb834291 category:TopPeerCategory count:int peers:Vector<TopPeer> = TopPeerCategoryPeers'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
