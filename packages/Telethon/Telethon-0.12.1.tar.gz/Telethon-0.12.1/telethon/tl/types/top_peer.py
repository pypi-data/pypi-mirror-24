from ...tl.tlobject import TLObject


class TopPeer(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    topPeer#edcdc05b peer:Peer rating:double = TopPeer"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xedcdc05b
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x6916c601

    def __init__(self, peer, rating):
        """
        :param peer: Telegram type: "Peer".
        :param rating: Telegram type: "double".

        Constructor for TopPeer: Instance of TopPeer.
        """
        super().__init__()

        self.peer = peer
        self.rating = rating

    def to_dict(self):
        return {
            'peer': None if self.peer is None else self.peer.to_dict(),
            'rating': self.rating,
        }

    def on_send(self, writer):
        writer.write_int(TopPeer.constructor_id, signed=False)
        self.peer.on_send(writer)
        writer.write_double(self.rating)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return TopPeer(None, None)

    def on_response(self, reader):
        self.peer = reader.tgread_object()
        self.rating = reader.read_double()

    def __repr__(self):
        return 'topPeer#edcdc05b peer:Peer rating:double = TopPeer'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
