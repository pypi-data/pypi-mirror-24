from ....tl.tlobject import TLObject
from ....utils import get_input_peer


class GetPeerSettingsRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x3672e09c
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xf6a79f84

    def __init__(self, peer):
        """
        :param peer: Telegram type: "InputPeer".

        :returns PeerSettings: Instance of PeerSettings.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.peer = get_input_peer(peer)

    def to_dict(self):
        return {
            'peer': None if self.peer is None else self.peer.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(GetPeerSettingsRequest.constructor_id, signed=False)
        self.peer.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return GetPeerSettingsRequest(None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
