from ....tl.tlobject import TLObject
from ....utils import get_input_channel


class ExportMessageLinkRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    channels.exportMessageLink#c846d22d channel:InputChannel id:int = ExportedMessageLink"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xc846d22d
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xdee644cc

    def __init__(self, channel, id):
        """
        :param channel: Telegram type: "InputChannel".
        :param id: Telegram type: "int".

        :returns ExportedMessageLink: Instance of ExportedMessageLink.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.channel = get_input_channel(channel)
        self.id = id

    def to_dict(self):
        return {
            'channel': None if self.channel is None else self.channel.to_dict(),
            'id': self.id,
        }

    def on_send(self, writer):
        writer.write_int(ExportMessageLinkRequest.constructor_id, signed=False)
        self.channel.on_send(writer)
        writer.write_int(self.id)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return ExportMessageLinkRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'channels.exportMessageLink#c846d22d channel:InputChannel id:int = ExportedMessageLink'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
