from ...tl.tlobject import TLObject


class Pong(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    pong#347773c5 msg_id:long ping_id:long = Pong"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x347773c5
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x816aee71

    def __init__(self, msg_id, ping_id):
        """
        :param msg_id: Telegram type: "long".
        :param ping_id: Telegram type: "long".

        Constructor for Pong: Instance of Pong.
        """
        super().__init__()

        self.msg_id = msg_id
        self.ping_id = ping_id

    def to_dict(self):
        return {
            'msg_id': self.msg_id,
            'ping_id': self.ping_id,
        }

    def on_send(self, writer):
        writer.write_int(Pong.constructor_id, signed=False)
        writer.write_long(self.msg_id)
        writer.write_long(self.ping_id)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return Pong(None, None)

    def on_response(self, reader):
        self.msg_id = reader.read_long()
        self.ping_id = reader.read_long()

    def __repr__(self):
        return 'pong#347773c5 msg_id:long ping_id:long = Pong'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
