from ...tl.tlobject import TLObject


class UpdateNewEncryptedMessage(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateNewEncryptedMessage#12bcbd9a message:EncryptedMessage qts:int = Update"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x12bcbd9a
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9f89304e

    def __init__(self, message, qts):
        """
        :param message: Telegram type: "EncryptedMessage".
        :param qts: Telegram type: "int".

        Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateContactRegistered, UpdateContactLink, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatAdmins, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack.
        """
        super().__init__()

        self.message = message
        self.qts = qts

    def to_dict(self):
        return {
            'message': None if self.message is None else self.message.to_dict(),
            'qts': self.qts,
        }

    def on_send(self, writer):
        writer.write_int(UpdateNewEncryptedMessage.constructor_id, signed=False)
        self.message.on_send(writer)
        writer.write_int(self.qts)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateNewEncryptedMessage(None, None)

    def on_response(self, reader):
        self.message = reader.tgread_object()
        self.qts = reader.read_int()

    def __repr__(self):
        return 'updateNewEncryptedMessage#12bcbd9a message:EncryptedMessage qts:int = Update'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
