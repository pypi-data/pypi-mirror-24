from ...tl.tlobject import TLObject


class UserStatusOffline(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    userStatusOffline#008c703f was_online:int = UserStatus"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x8c703f
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x5b0b743e

    def __init__(self, was_online):
        """
        :param was_online: Telegram type: "date".

        Constructor for UserStatus: Instance of either UserStatusEmpty, UserStatusOnline, UserStatusOffline, UserStatusRecently, UserStatusLastWeek, UserStatusLastMonth.
        """
        super().__init__()

        self.was_online = was_online

    def to_dict(self):
        return {
            'was_online': self.was_online,
        }

    def on_send(self, writer):
        writer.write_int(UserStatusOffline.constructor_id, signed=False)
        writer.tgwrite_date(self.was_online)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UserStatusOffline(None)

    def on_response(self, reader):
        self.was_online = reader.tgread_date()

    def __repr__(self):
        return 'userStatusOffline#008c703f was_online:int = UserStatus'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
