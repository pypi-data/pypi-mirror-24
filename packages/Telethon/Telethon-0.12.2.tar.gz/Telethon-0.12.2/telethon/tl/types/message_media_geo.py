from ...tl.tlobject import TLObject


class MessageMediaGeo(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messageMediaGeo#56e0d474 geo:GeoPoint = MessageMedia"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x56e0d474
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x476cbe32

    def __init__(self, geo):
        """
        :param geo: Telegram type: "GeoPoint".

        Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice.
        """
        super().__init__()

        self.geo = geo

    def to_dict(self):
        return {
            'geo': None if self.geo is None else self.geo.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(MessageMediaGeo.constructor_id, signed=False)
        self.geo.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return MessageMediaGeo(None)

    def on_response(self, reader):
        self.geo = reader.tgread_object()

    def __repr__(self):
        return 'messageMediaGeo#56e0d474 geo:GeoPoint = MessageMedia'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
