from ....tl.tlobject import TLObject


class SentEncryptedMessage(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.sentEncryptedMessage#560f8935 date:int = messages.SentEncryptedMessage"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x560f8935
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xc99e3e50

    def __init__(self, date):
        """
        :param date: Telegram type: "date".

        Constructor for messages.SentEncryptedMessage: Instance of either SentEncryptedMessage, SentEncryptedFile.
        """
        super().__init__()

        self.date = date

    def to_dict(self):
        return {
            'date': self.date,
        }

    def on_send(self, writer):
        writer.write_int(SentEncryptedMessage.constructor_id, signed=False)
        writer.tgwrite_date(self.date)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return SentEncryptedMessage(None)

    def on_response(self, reader):
        self.date = reader.tgread_date()

    def __repr__(self):
        return 'messages.sentEncryptedMessage#560f8935 date:int = messages.SentEncryptedMessage'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
