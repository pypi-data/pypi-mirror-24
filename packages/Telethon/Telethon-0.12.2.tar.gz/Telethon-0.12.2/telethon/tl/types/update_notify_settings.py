from ...tl.tlobject import TLObject


class UpdateNotifySettings(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateNotifySettings#bec268ef peer:NotifyPeer notify_settings:PeerNotifySettings = Update"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xbec268ef
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9f89304e

    def __init__(self, peer, notify_settings):
        """
        :param peer: Telegram type: "NotifyPeer".
        :param notify_settings: Telegram type: "PeerNotifySettings".

        Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateContactRegistered, UpdateContactLink, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatAdmins, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack.
        """
        super().__init__()

        self.peer = peer
        self.notify_settings = notify_settings

    def to_dict(self):
        return {
            'peer': None if self.peer is None else self.peer.to_dict(),
            'notify_settings': None if self.notify_settings is None else self.notify_settings.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(UpdateNotifySettings.constructor_id, signed=False)
        self.peer.on_send(writer)
        self.notify_settings.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateNotifySettings(None, None)

    def on_response(self, reader):
        self.peer = reader.tgread_object()
        self.notify_settings = reader.tgread_object()

    def __repr__(self):
        return 'updateNotifySettings#bec268ef peer:NotifyPeer notify_settings:PeerNotifySettings = Update'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
