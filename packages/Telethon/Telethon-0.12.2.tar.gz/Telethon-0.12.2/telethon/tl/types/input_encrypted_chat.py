from ...tl.tlobject import TLObject


class InputEncryptedChat(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    inputEncryptedChat#f141b5e1 chat_id:int access_hash:long = InputEncryptedChat"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xf141b5e1
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x6c7606c0

    def __init__(self, chat_id, access_hash):
        """
        :param chat_id: Telegram type: "int".
        :param access_hash: Telegram type: "long".

        Constructor for InputEncryptedChat: Instance of InputEncryptedChat.
        """
        super().__init__()

        self.chat_id = chat_id
        self.access_hash = access_hash

    def to_dict(self):
        return {
            'chat_id': self.chat_id,
            'access_hash': self.access_hash,
        }

    def on_send(self, writer):
        writer.write_int(InputEncryptedChat.constructor_id, signed=False)
        writer.write_int(self.chat_id)
        writer.write_long(self.access_hash)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return InputEncryptedChat(None, None)

    def on_response(self, reader):
        self.chat_id = reader.read_int()
        self.access_hash = reader.read_long()

    def __repr__(self):
        return 'inputEncryptedChat#f141b5e1 chat_id:int access_hash:long = InputEncryptedChat'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
