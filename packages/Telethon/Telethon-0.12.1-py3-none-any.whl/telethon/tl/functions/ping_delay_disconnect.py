from ...tl.tlobject import TLObject


class PingDelayDisconnectRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    ping_delay_disconnect#f3427b8c ping_id:long disconnect_delay:int = Pong"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xf3427b8c
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x816aee71

    def __init__(self, ping_id, disconnect_delay):
        """
        :param ping_id: Telegram type: "long".
        :param disconnect_delay: Telegram type: "int".

        :returns Pong: Instance of Pong.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.ping_id = ping_id
        self.disconnect_delay = disconnect_delay

    def to_dict(self):
        return {
            'ping_id': self.ping_id,
            'disconnect_delay': self.disconnect_delay,
        }

    def on_send(self, writer):
        writer.write_int(PingDelayDisconnectRequest.constructor_id, signed=False)
        writer.write_long(self.ping_id)
        writer.write_int(self.disconnect_delay)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return PingDelayDisconnectRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'ping_delay_disconnect#f3427b8c ping_id:long disconnect_delay:int = Pong'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
