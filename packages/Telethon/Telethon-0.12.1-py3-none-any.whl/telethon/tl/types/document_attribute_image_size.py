from ...tl.tlobject import TLObject


class DocumentAttributeImageSize(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    documentAttributeImageSize#6c37c15c w:int h:int = DocumentAttribute"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x6c37c15c
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xf729eb9b

    def __init__(self, w, h):
        """
        :param w: Telegram type: "int".
        :param h: Telegram type: "int".

        Constructor for DocumentAttribute: Instance of either DocumentAttributeImageSize, DocumentAttributeAnimated, DocumentAttributeSticker, DocumentAttributeVideo, DocumentAttributeAudio, DocumentAttributeFilename, DocumentAttributeHasStickers.
        """
        super().__init__()

        self.w = w
        self.h = h

    def to_dict(self):
        return {
            'w': self.w,
            'h': self.h,
        }

    def on_send(self, writer):
        writer.write_int(DocumentAttributeImageSize.constructor_id, signed=False)
        writer.write_int(self.w)
        writer.write_int(self.h)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return DocumentAttributeImageSize(None, None)

    def on_response(self, reader):
        self.w = reader.read_int()
        self.h = reader.read_int()

    def __repr__(self):
        return 'documentAttributeImageSize#6c37c15c w:int h:int = DocumentAttribute'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
