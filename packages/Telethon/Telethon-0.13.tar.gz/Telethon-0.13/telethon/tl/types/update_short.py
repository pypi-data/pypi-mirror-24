from ...tl.tlobject import TLObject


class UpdateShort(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateShort#78d4dec1 update:Update date:int = Updates"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x78d4dec1
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x8af52aac

    def __init__(self, update, date):
        """
        :param update: Telegram type: "Update".
        :param date: Telegram type: "date".

        Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, UpdatesTg, UpdateShortSentMessage.
        """
        super().__init__()

        self.update = update
        self.date = date

    def to_dict(self):
        return {
            'update': None if self.update is None else self.update.to_dict(),
            'date': self.date,
        }

    def on_send(self, writer):
        writer.write_int(UpdateShort.constructor_id, signed=False)
        self.update.on_send(writer)
        writer.tgwrite_date(self.date)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateShort(None, None)

    def on_response(self, reader):
        self.update = reader.tgread_object()
        self.date = reader.tgread_date()

    def __repr__(self):
        return 'updateShort#78d4dec1 update:Update date:int = Updates'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
