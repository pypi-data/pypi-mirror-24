from ....tl.tlobject import TLObject
from ....utils import get_input_peer


class ReportPeerRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xae189d5f
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xf5b399ac

    def __init__(self, peer, reason):
        """
        :param peer: Telegram type: "InputPeer".
        :param reason: Telegram type: "ReportReason".

        :returns Bool: This type has no constructors.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.peer = get_input_peer(peer)
        self.reason = reason

    def to_dict(self):
        return {
            'peer': None if self.peer is None else self.peer.to_dict(),
            'reason': None if self.reason is None else self.reason.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(ReportPeerRequest.constructor_id, signed=False)
        self.peer.on_send(writer)
        self.reason.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return ReportPeerRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
