from ....tl.tlobject import TLObject


class ChangeStickerPositionRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xffb6d4ca
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9b704a5a

    def __init__(self, sticker, position):
        """
        :param sticker: Telegram type: "InputDocument".
        :param position: Telegram type: "int".

        :returns messages.StickerSet: Instance of StickerSet.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.sticker = sticker
        self.position = position

    def to_dict(self):
        return {
            'sticker': None if self.sticker is None else self.sticker.to_dict(),
            'position': self.position,
        }

    def on_send(self, writer):
        writer.write_int(ChangeStickerPositionRequest.constructor_id, signed=False)
        self.sticker.on_send(writer)
        writer.write_int(self.position)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return ChangeStickerPositionRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
