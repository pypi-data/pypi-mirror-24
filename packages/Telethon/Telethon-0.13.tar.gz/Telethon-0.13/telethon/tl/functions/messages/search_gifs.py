from ....tl.tlobject import TLObject


class SearchGifsRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xbf9a776b
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xe799ea7

    def __init__(self, q, offset):
        """
        :param q: Telegram type: "string".
        :param offset: Telegram type: "int".

        :returns messages.FoundGifs: Instance of FoundGifs.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.q = q
        self.offset = offset

    def to_dict(self):
        return {
            'q': self.q,
            'offset': self.offset,
        }

    def on_send(self, writer):
        writer.write_int(SearchGifsRequest.constructor_id, signed=False)
        writer.tgwrite_string(self.q)
        writer.write_int(self.offset)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return SearchGifsRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
