from ....tl.tlobject import TLObject


class FaveStickerRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xb9ffc55b
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xf5b399ac

    def __init__(self, id, unfave):
        """
        :param id: Telegram type: "InputDocument".
        :param unfave: Telegram type: "Bool".

        :returns Bool: This type has no constructors.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.id = id
        self.unfave = unfave

    def to_dict(self):
        return {
            'id': None if self.id is None else self.id.to_dict(),
            'unfave': self.unfave,
        }

    def on_send(self, writer):
        writer.write_int(FaveStickerRequest.constructor_id, signed=False)
        self.id.on_send(writer)
        writer.tgwrite_bool(self.unfave)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return FaveStickerRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
