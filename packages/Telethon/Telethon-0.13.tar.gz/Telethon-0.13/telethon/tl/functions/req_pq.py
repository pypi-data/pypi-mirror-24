from ...tl.tlobject import TLObject


class ReqPqRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    req_pq#60469778 nonce:int128 = ResPQ"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x60469778
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x786986b8

    def __init__(self, nonce):
        """
        :param nonce: Telegram type: "int128".

        :returns ResPQ: Instance of ResPQ.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.nonce = nonce

    def to_dict(self):
        return {
            'nonce': self.nonce,
        }

    def on_send(self, writer):
        writer.write_int(ReqPqRequest.constructor_id, signed=False)
        writer.write_large_int(self.nonce, bits=128)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return ReqPqRequest(None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'req_pq#60469778 nonce:int128 = ResPQ'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
