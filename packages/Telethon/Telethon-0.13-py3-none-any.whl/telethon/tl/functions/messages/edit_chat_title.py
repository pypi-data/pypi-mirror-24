from ....tl.tlobject import TLObject


class EditChatTitleRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.editChatTitle#dc452855 chat_id:int title:string = Updates"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xdc452855
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x8af52aac

    def __init__(self, chat_id, title):
        """
        :param chat_id: Telegram type: "int".
        :param title: Telegram type: "string".

        :returns Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, UpdatesTg, UpdateShortSentMessage.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.chat_id = chat_id
        self.title = title

    def to_dict(self):
        return {
            'chat_id': self.chat_id,
            'title': self.title,
        }

    def on_send(self, writer):
        writer.write_int(EditChatTitleRequest.constructor_id, signed=False)
        writer.write_int(self.chat_id)
        writer.tgwrite_string(self.title)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return EditChatTitleRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.editChatTitle#dc452855 chat_id:int title:string = Updates'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
