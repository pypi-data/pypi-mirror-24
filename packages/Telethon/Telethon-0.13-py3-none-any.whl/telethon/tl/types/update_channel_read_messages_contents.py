from ...tl.tlobject import TLObject


class UpdateChannelReadMessagesContents(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateChannelReadMessagesContents#89893b45 channel_id:int messages:Vector<int> = Update"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x89893b45
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9f89304e

    def __init__(self, channel_id, messages):
        """
        :param channel_id: Telegram type: "int".
        :param messages: Telegram type: "int". Must be a list.

        Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateContactRegistered, UpdateContactLink, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatAdmins, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset.
        """
        super().__init__()

        self.channel_id = channel_id
        self.messages = messages

    def to_dict(self):
        return {
            'channel_id': self.channel_id,
            'messages': [] if self.messages is None else self.messages[:],
        }

    def on_send(self, writer):
        writer.write_int(UpdateChannelReadMessagesContents.constructor_id, signed=False)
        writer.write_int(self.channel_id)
        writer.write_int(0x1cb5c415, signed=False)  # Vector's constructor ID
        writer.write_int(len(self.messages))
        for _x in self.messages:
            writer.write_int(_x)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateChannelReadMessagesContents(None, None)

    def on_response(self, reader):
        self.channel_id = reader.read_int()
        reader.read_int()  # Vector's constructor ID
        self.messages = []  # Initialize an empty list
        _len = reader.read_int()
        for _ in range(_len):
            _x = reader.read_int()
            self.messages.append(_x)

    def __repr__(self):
        return 'updateChannelReadMessagesContents#89893b45 channel_id:int messages:Vector<int> = Update'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
