from ...tl.tlobject import TLObject


class InputPhoneContact(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    inputPhoneContact#f392b7f4 client_id:long phone:string first_name:string last_name:string = InputContact"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xf392b7f4
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xae696a82

    def __init__(self, client_id, phone, first_name, last_name):
        """
        :param client_id: Telegram type: "long".
        :param phone: Telegram type: "string".
        :param first_name: Telegram type: "string".
        :param last_name: Telegram type: "string".

        Constructor for InputContact: Instance of InputPhoneContact.
        """
        super().__init__()

        self.client_id = client_id
        self.phone = phone
        self.first_name = first_name
        self.last_name = last_name

    def to_dict(self):
        return {
            'client_id': self.client_id,
            'phone': self.phone,
            'first_name': self.first_name,
            'last_name': self.last_name,
        }

    def on_send(self, writer):
        writer.write_int(InputPhoneContact.constructor_id, signed=False)
        writer.write_long(self.client_id)
        writer.tgwrite_string(self.phone)
        writer.tgwrite_string(self.first_name)
        writer.tgwrite_string(self.last_name)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return InputPhoneContact(None, None, None, None)

    def on_response(self, reader):
        self.client_id = reader.read_long()
        self.phone = reader.tgread_string()
        self.first_name = reader.tgread_string()
        self.last_name = reader.tgread_string()

    def __repr__(self):
        return 'inputPhoneContact#f392b7f4 client_id:long phone:string first_name:string last_name:string = InputContact'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
