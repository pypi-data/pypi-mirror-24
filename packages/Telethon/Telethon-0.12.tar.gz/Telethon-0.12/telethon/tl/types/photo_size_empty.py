from ...tl.tlobject import TLObject


class PhotoSizeEmpty(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    photoSizeEmpty#0e17e23c type:string = PhotoSize"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xe17e23c
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x17cc29d9

    def __init__(self, type):
        """
        :param type: Telegram type: "string".

        Constructor for PhotoSize: Instance of either PhotoSizeEmpty, PhotoSize, PhotoCachedSize.
        """
        super().__init__()

        self.type = type

    def to_dict(self):
        return {
            'type': self.type,
        }

    def on_send(self, writer):
        writer.write_int(PhotoSizeEmpty.constructor_id, signed=False)
        writer.tgwrite_string(self.type)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return PhotoSizeEmpty(None)

    def on_response(self, reader):
        self.type = reader.tgread_string()

    def __repr__(self):
        return 'photoSizeEmpty#0e17e23c type:string = PhotoSize'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
