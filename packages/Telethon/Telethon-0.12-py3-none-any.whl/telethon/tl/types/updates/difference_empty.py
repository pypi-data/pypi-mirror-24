from ....tl.tlobject import TLObject


class DifferenceEmpty(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updates.differenceEmpty#5d75a138 date:int seq:int = updates.Difference"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x5d75a138
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x20482874

    def __init__(self, date, seq):
        """
        :param date: Telegram type: "date".
        :param seq: Telegram type: "int".

        Constructor for updates.Difference: Instance of either DifferenceEmpty, Difference, DifferenceSlice, DifferenceTooLong.
        """
        super().__init__()

        self.date = date
        self.seq = seq

    def to_dict(self):
        return {
            'date': self.date,
            'seq': self.seq,
        }

    def on_send(self, writer):
        writer.write_int(DifferenceEmpty.constructor_id, signed=False)
        writer.tgwrite_date(self.date)
        writer.write_int(self.seq)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return DifferenceEmpty(None, None)

    def on_response(self, reader):
        self.date = reader.tgread_date()
        self.seq = reader.read_int()

    def __repr__(self):
        return 'updates.differenceEmpty#5d75a138 date:int seq:int = updates.Difference'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
