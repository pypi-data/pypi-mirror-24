from ...tl.tlobject import TLObject


class UpdateDraftMessage(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateDraftMessage#ee2bb969 peer:Peer draft:DraftMessage = Update"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xee2bb969
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9f89304e

    def __init__(self, peer, draft):
        """
        :param peer: Telegram type: "Peer".
        :param draft: Telegram type: "DraftMessage".

        Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateContactRegistered, UpdateContactLink, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatAdmins, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack.
        """
        super().__init__()

        self.peer = peer
        self.draft = draft

    def to_dict(self):
        return {
            'peer': None if self.peer is None else self.peer.to_dict(),
            'draft': None if self.draft is None else self.draft.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(UpdateDraftMessage.constructor_id, signed=False)
        self.peer.on_send(writer)
        self.draft.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateDraftMessage(None, None)

    def on_response(self, reader):
        self.peer = reader.tgread_object()
        self.draft = reader.tgread_object()

    def __repr__(self):
        return 'updateDraftMessage#ee2bb969 peer:Peer draft:DraftMessage = Update'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
