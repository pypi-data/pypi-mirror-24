from ...tl.tlobject import TLObject


class KeyboardButtonSwitchInline(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    keyboardButtonSwitchInline#0568a748 flags:# same_peer:flags.0?true text:string query:string = KeyboardButton"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x568a748
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xbad74a3

    def __init__(self, text, query, same_peer=None):
        """
        :param same_peer: Telegram type: "true".
        :param text: Telegram type: "string".
        :param query: Telegram type: "string".

        Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy.
        """
        super().__init__()

        self.same_peer = same_peer
        self.text = text
        self.query = query

    def to_dict(self):
        return {
            'same_peer': self.same_peer,
            'text': self.text,
            'query': self.query,
        }

    def on_send(self, writer):
        writer.write_int(KeyboardButtonSwitchInline.constructor_id, signed=False)
        # Calculate the flags. This equals to those flag arguments which are NOT None
        flags = 0
        flags |= (1 << 0) if self.same_peer else 0
        writer.write_int(flags)

        writer.tgwrite_string(self.text)
        writer.tgwrite_string(self.query)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return KeyboardButtonSwitchInline(None, None, None)

    def on_response(self, reader):
        flags = reader.read_int()

        if (flags & (1 << 0)) != 0:
            self.same_peer = True  # Arbitrary not-None value, no need to read since it is a flag

        self.text = reader.tgread_string()
        self.query = reader.tgread_string()

    def __repr__(self):
        return 'keyboardButtonSwitchInline#0568a748 flags:# same_peer:flags.0?true text:string query:string = KeyboardButton'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
