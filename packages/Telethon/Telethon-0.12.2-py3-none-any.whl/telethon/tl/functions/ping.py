from ...tl.tlobject import TLObject


class PingRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    ping#7abe77ec ping_id:long = Pong"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x7abe77ec
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x816aee71

    def __init__(self, ping_id):
        """
        :param ping_id: Telegram type: "long".

        :returns Pong: Instance of Pong.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.ping_id = ping_id

    def to_dict(self):
        return {
            'ping_id': self.ping_id,
        }

    def on_send(self, writer):
        writer.write_int(PingRequest.constructor_id, signed=False)
        writer.write_long(self.ping_id)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return PingRequest(None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'ping#7abe77ec ping_id:long = Pong'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
