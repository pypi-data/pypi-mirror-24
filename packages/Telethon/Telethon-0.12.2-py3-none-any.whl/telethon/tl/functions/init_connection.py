from ...tl.tlobject import TLObject


class InitConnectionRequest(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    initConnection#c7481da6 {X:Type} api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string query:!X = X"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xc7481da6
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xb7b2364b

    def __init__(self, api_id, device_model, system_version, app_version, system_lang_code, lang_pack, lang_code, query):
        """
        :param api_id: Telegram type: "int".
        :param device_model: Telegram type: "string".
        :param system_version: Telegram type: "string".
        :param app_version: Telegram type: "string".
        :param system_lang_code: Telegram type: "string".
        :param lang_pack: Telegram type: "string".
        :param lang_code: Telegram type: "string".
        :param query: Telegram type: "X". Must be another TLObject request.

        :returns X: This type has no constructors.
        """
        super().__init__()
        self.result = None
        self.content_related = True

        self.api_id = api_id
        self.device_model = device_model
        self.system_version = system_version
        self.app_version = app_version
        self.system_lang_code = system_lang_code
        self.lang_pack = lang_pack
        self.lang_code = lang_code
        self.query = query

    def to_dict(self):
        return {
            'api_id': self.api_id,
            'device_model': self.device_model,
            'system_version': self.system_version,
            'app_version': self.app_version,
            'system_lang_code': self.system_lang_code,
            'lang_pack': self.lang_pack,
            'lang_code': self.lang_code,
            'query': None if self.query is None else self.query.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(InitConnectionRequest.constructor_id, signed=False)
        writer.write_int(self.api_id)
        writer.tgwrite_string(self.device_model)
        writer.tgwrite_string(self.system_version)
        writer.tgwrite_string(self.app_version)
        writer.tgwrite_string(self.system_lang_code)
        writer.tgwrite_string(self.lang_pack)
        writer.tgwrite_string(self.lang_code)
        self.query.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return InitConnectionRequest(None, None, None, None, None, None, None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'initConnection#c7481da6 {X:Type} api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string query:!X = X'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
