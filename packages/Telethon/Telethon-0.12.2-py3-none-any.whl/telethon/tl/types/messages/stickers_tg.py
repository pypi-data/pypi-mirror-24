from ....tl.tlobject import TLObject


class StickersTg(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.stickers_tg#8a8ecd32 hash:string stickers:Vector<Document> = messages.Stickers"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x8a8ecd32
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xd73bb9de

    def __init__(self, hash, stickers):
        """
        :param hash: Telegram type: "string".
        :param stickers: Telegram type: "Document". Must be a list.

        Constructor for messages.Stickers: Instance of either StickersNotModified, StickersTg.
        """
        super().__init__()

        self.hash = hash
        self.stickers = stickers

    def to_dict(self):
        return {
            'hash': self.hash,
            'stickers': [] if self.stickers is None else [None if x is None else x.to_dict() for x in self.stickers],
        }

    def on_send(self, writer):
        writer.write_int(StickersTg.constructor_id, signed=False)
        writer.tgwrite_string(self.hash)
        writer.write_int(0x1cb5c415, signed=False)  # Vector's constructor ID
        writer.write_int(len(self.stickers))
        for _x in self.stickers:
            _x.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return StickersTg(None, None)

    def on_response(self, reader):
        self.hash = reader.tgread_string()
        reader.read_int()  # Vector's constructor ID
        self.stickers = []  # Initialize an empty list
        _len = reader.read_int()
        for _ in range(_len):
            _x = reader.tgread_object()
            self.stickers.append(_x)

    def __repr__(self):
        return 'messages.stickers_tg#8a8ecd32 hash:string stickers:Vector<Document> = messages.Stickers'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
