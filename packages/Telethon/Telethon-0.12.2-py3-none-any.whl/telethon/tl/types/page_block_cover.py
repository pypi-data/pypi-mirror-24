from ...tl.tlobject import TLObject


class PageBlockCover(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    pageBlockCover#39f23300 cover:PageBlock = PageBlock"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x39f23300
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x1aca5644

    def __init__(self, cover):
        """
        :param cover: Telegram type: "PageBlock".

        Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio.
        """
        super().__init__()

        self.cover = cover

    def to_dict(self):
        return {
            'cover': None if self.cover is None else self.cover.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(PageBlockCover.constructor_id, signed=False)
        self.cover.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return PageBlockCover(None)

    def on_response(self, reader):
        self.cover = reader.tgread_object()

    def __repr__(self):
        return 'pageBlockCover#39f23300 cover:PageBlock = PageBlock'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
