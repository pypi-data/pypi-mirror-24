from ...tl.tlobject import TLObject


class UpdateUserBlocked(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateUserBlocked#80ece81a user_id:int blocked:Bool = Update"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x80ece81a
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9f89304e

    def __init__(self, user_id, blocked):
        """
        :param user_id: Telegram type: "int".
        :param blocked: Telegram type: "Bool".

        Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateContactRegistered, UpdateContactLink, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatAdmins, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack.
        """
        super().__init__()

        self.user_id = user_id
        self.blocked = blocked

    def to_dict(self):
        return {
            'user_id': self.user_id,
            'blocked': self.blocked,
        }

    def on_send(self, writer):
        writer.write_int(UpdateUserBlocked.constructor_id, signed=False)
        writer.write_int(self.user_id)
        writer.tgwrite_bool(self.blocked)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateUserBlocked(None, None)

    def on_response(self, reader):
        self.user_id = reader.read_int()
        self.blocked = reader.tgread_bool()

    def __repr__(self):
        return 'updateUserBlocked#80ece81a user_id:int blocked:Bool = Update'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
