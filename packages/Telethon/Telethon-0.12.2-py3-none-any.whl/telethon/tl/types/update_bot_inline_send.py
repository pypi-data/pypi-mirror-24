from ...tl.tlobject import TLObject


class UpdateBotInlineSend(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    updateBotInlineSend#0e48f964 flags:# user_id:int query:string geo:flags.0?GeoPoint id:string msg_id:flags.1?InputBotInlineMessageID = Update"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xe48f964
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x9f89304e

    def __init__(self, user_id, query, id, geo=None, msg_id=None):
        """
        :param user_id: Telegram type: "int".
        :param query: Telegram type: "string".
        :param geo: Telegram type: "GeoPoint".
        :param id: Telegram type: "string".
        :param msg_id: Telegram type: "InputBotInlineMessageID".

        Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateContactRegistered, UpdateContactLink, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatAdmins, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack.
        """
        super().__init__()

        self.user_id = user_id
        self.query = query
        self.geo = geo
        self.id = id
        self.msg_id = msg_id

    def to_dict(self):
        return {
            'user_id': self.user_id,
            'query': self.query,
            'geo': None if self.geo is None else self.geo.to_dict(),
            'id': self.id,
            'msg_id': None if self.msg_id is None else self.msg_id.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(UpdateBotInlineSend.constructor_id, signed=False)
        # Calculate the flags. This equals to those flag arguments which are NOT None
        flags = 0
        flags |= (1 << 0) if self.geo else 0
        flags |= (1 << 1) if self.msg_id else 0
        writer.write_int(flags)

        writer.write_int(self.user_id)
        writer.tgwrite_string(self.query)
        if self.geo:
            self.geo.on_send(writer)

        writer.tgwrite_string(self.id)
        if self.msg_id:
            self.msg_id.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return UpdateBotInlineSend(None, None, None, None, None)

    def on_response(self, reader):
        flags = reader.read_int()

        self.user_id = reader.read_int()
        self.query = reader.tgread_string()
        if (flags & (1 << 0)) != 0:
            self.geo = reader.tgread_object()

        self.id = reader.tgread_string()
        if (flags & (1 << 1)) != 0:
            self.msg_id = reader.tgread_object()

    def __repr__(self):
        return 'updateBotInlineSend#0e48f964 flags:# user_id:int query:string geo:flags.0?GeoPoint id:string msg_id:flags.1?InputBotInlineMessageID = Update'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
