from ....tl.tlobject import TLObject


class WebFile(TLObject):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    upload.webFile#21e753bc size:int mime_type:string file_type:storage.FileType mtime:int bytes:bytes = upload.WebFile"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x21e753bc
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x68f17f51

    def __init__(self, size, mime_type, file_type, mtime, bytes):
        """
        :param size: Telegram type: "int".
        :param mime_type: Telegram type: "string".
        :param file_type: Telegram type: "storage.FileType".
        :param mtime: Telegram type: "int".
        :param bytes: Telegram type: "bytes".

        Constructor for upload.WebFile: Instance of WebFile.
        """
        super().__init__()

        self.size = size
        self.mime_type = mime_type
        self.file_type = file_type
        self.mtime = mtime
        self.bytes = bytes

    def to_dict(self):
        return {
            'size': self.size,
            'mime_type': self.mime_type,
            'file_type': None if self.file_type is None else self.file_type.to_dict(),
            'mtime': self.mtime,
            'bytes': self.bytes,
        }

    def on_send(self, writer):
        writer.write_int(WebFile.constructor_id, signed=False)
        writer.write_int(self.size)
        writer.tgwrite_string(self.mime_type)
        self.file_type.on_send(writer)
        writer.write_int(self.mtime)
        writer.tgwrite_bytes(self.bytes)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return WebFile(None, None, None, None, None)

    def on_response(self, reader):
        self.size = reader.read_int()
        self.mime_type = reader.tgread_string()
        self.file_type = reader.tgread_object()
        self.mtime = reader.read_int()
        self.bytes = reader.tgread_bytes()

    def __repr__(self):
        return 'upload.webFile#21e753bc size:int mime_type:string file_type:storage.FileType mtime:int bytes:bytes = upload.WebFile'

    def __str__(self):
        return TLObject.pretty_format(self)

    def stringify(self):
        return TLObject.pretty_format(self, indent=0)
