# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from qtypes import qtypes_pb2 as qtypes_dot_qtypes__pb2
from ntypes import ntypes_pb2 as ntypes_dot_ntypes__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='permission.proto',
  package='charonrpc',
  syntax='proto3',
  serialized_pb=_b('\n\x10permission.proto\x12\tcharonrpc\x1a\x13qtypes/qtypes.proto\x1a\x13ntypes/ntypes.proto\"1\n\x1aRegisterPermissionsRequest\x12\x13\n\x0bpermissions\x18\x01 \x03(\t\"R\n\x1bRegisterPermissionsResponse\x12\x0f\n\x07\x63reated\x18\x01 \x01(\x03\x12\x0f\n\x07removed\x18\x02 \x01(\x03\x12\x11\n\tuntouched\x18\x03 \x01(\x03\"\xf0\x02\n\x16ListPermissionsRequest\x12!\n\tsubsystem\x18\x01 \x01(\x0b\x32\x0e.qtypes.String\x12\x1e\n\x06module\x18\x02 \x01(\x0b\x32\x0e.qtypes.String\x12\x1e\n\x06\x61\x63tion\x18\x03 \x01(\x0b\x32\x0e.qtypes.String\x12%\n\ncreated_at\x18\x04 \x01(\x0b\x32\x11.qtypes.Timestamp\x12!\n\ncreated_by\x18\x05 \x01(\x0b\x32\r.qtypes.Int64\x12\x1d\n\x06offset\x18\x64 \x01(\x0b\x32\r.ntypes.Int64\x12\x1c\n\x05limit\x18\x65 \x01(\x0b\x32\r.ntypes.Int64\x12\x39\n\x04sort\x18\x66 \x03(\x0b\x32+.charonrpc.ListPermissionsRequest.SortEntry\x1a+\n\tSortEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01J\x04\x08\x06\x10\x64\".\n\x17ListPermissionsResponse\x12\x13\n\x0bpermissions\x18\x01 \x03(\t\"\"\n\x14GetPermissionRequest\x12\n\n\x02id\x18\x01 \x01(\x03\"+\n\x15GetPermissionResponse\x12\x12\n\npermission\x18\x01 \x01(\t2\x8d\x02\n\x11PermissionManager\x12[\n\x08Register\x12%.charonrpc.RegisterPermissionsRequest\x1a&.charonrpc.RegisterPermissionsResponse\"\x00\x12O\n\x04List\x12!.charonrpc.ListPermissionsRequest\x1a\".charonrpc.ListPermissionsResponse\"\x00\x12J\n\x03Get\x12\x1f.charonrpc.GetPermissionRequest\x1a .charonrpc.GetPermissionResponse\"\x00\x42,Z*github.com/piotrkowalczuk/charon/charonrpcb\x06proto3')
  ,
  dependencies=[qtypes_dot_qtypes__pb2.DESCRIPTOR,ntypes_dot_ntypes__pb2.DESCRIPTOR,])




_REGISTERPERMISSIONSREQUEST = _descriptor.Descriptor(
  name='RegisterPermissionsRequest',
  full_name='charonrpc.RegisterPermissionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='permissions', full_name='charonrpc.RegisterPermissionsRequest.permissions', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=122,
)


_REGISTERPERMISSIONSRESPONSE = _descriptor.Descriptor(
  name='RegisterPermissionsResponse',
  full_name='charonrpc.RegisterPermissionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='created', full_name='charonrpc.RegisterPermissionsResponse.created', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='removed', full_name='charonrpc.RegisterPermissionsResponse.removed', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='untouched', full_name='charonrpc.RegisterPermissionsResponse.untouched', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=124,
  serialized_end=206,
)


_LISTPERMISSIONSREQUEST_SORTENTRY = _descriptor.Descriptor(
  name='SortEntry',
  full_name='charonrpc.ListPermissionsRequest.SortEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='charonrpc.ListPermissionsRequest.SortEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='charonrpc.ListPermissionsRequest.SortEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=528,
  serialized_end=571,
)

_LISTPERMISSIONSREQUEST = _descriptor.Descriptor(
  name='ListPermissionsRequest',
  full_name='charonrpc.ListPermissionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subsystem', full_name='charonrpc.ListPermissionsRequest.subsystem', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='module', full_name='charonrpc.ListPermissionsRequest.module', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action', full_name='charonrpc.ListPermissionsRequest.action', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created_at', full_name='charonrpc.ListPermissionsRequest.created_at', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created_by', full_name='charonrpc.ListPermissionsRequest.created_by', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='charonrpc.ListPermissionsRequest.offset', index=5,
      number=100, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='limit', full_name='charonrpc.ListPermissionsRequest.limit', index=6,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort', full_name='charonrpc.ListPermissionsRequest.sort', index=7,
      number=102, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTPERMISSIONSREQUEST_SORTENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=209,
  serialized_end=577,
)


_LISTPERMISSIONSRESPONSE = _descriptor.Descriptor(
  name='ListPermissionsResponse',
  full_name='charonrpc.ListPermissionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='permissions', full_name='charonrpc.ListPermissionsResponse.permissions', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=579,
  serialized_end=625,
)


_GETPERMISSIONREQUEST = _descriptor.Descriptor(
  name='GetPermissionRequest',
  full_name='charonrpc.GetPermissionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='charonrpc.GetPermissionRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=627,
  serialized_end=661,
)


_GETPERMISSIONRESPONSE = _descriptor.Descriptor(
  name='GetPermissionResponse',
  full_name='charonrpc.GetPermissionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='permission', full_name='charonrpc.GetPermissionResponse.permission', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=663,
  serialized_end=706,
)

_LISTPERMISSIONSREQUEST_SORTENTRY.containing_type = _LISTPERMISSIONSREQUEST
_LISTPERMISSIONSREQUEST.fields_by_name['subsystem'].message_type = qtypes_dot_qtypes__pb2._STRING
_LISTPERMISSIONSREQUEST.fields_by_name['module'].message_type = qtypes_dot_qtypes__pb2._STRING
_LISTPERMISSIONSREQUEST.fields_by_name['action'].message_type = qtypes_dot_qtypes__pb2._STRING
_LISTPERMISSIONSREQUEST.fields_by_name['created_at'].message_type = qtypes_dot_qtypes__pb2._TIMESTAMP
_LISTPERMISSIONSREQUEST.fields_by_name['created_by'].message_type = qtypes_dot_qtypes__pb2._INT64
_LISTPERMISSIONSREQUEST.fields_by_name['offset'].message_type = ntypes_dot_ntypes__pb2._INT64
_LISTPERMISSIONSREQUEST.fields_by_name['limit'].message_type = ntypes_dot_ntypes__pb2._INT64
_LISTPERMISSIONSREQUEST.fields_by_name['sort'].message_type = _LISTPERMISSIONSREQUEST_SORTENTRY
DESCRIPTOR.message_types_by_name['RegisterPermissionsRequest'] = _REGISTERPERMISSIONSREQUEST
DESCRIPTOR.message_types_by_name['RegisterPermissionsResponse'] = _REGISTERPERMISSIONSRESPONSE
DESCRIPTOR.message_types_by_name['ListPermissionsRequest'] = _LISTPERMISSIONSREQUEST
DESCRIPTOR.message_types_by_name['ListPermissionsResponse'] = _LISTPERMISSIONSRESPONSE
DESCRIPTOR.message_types_by_name['GetPermissionRequest'] = _GETPERMISSIONREQUEST
DESCRIPTOR.message_types_by_name['GetPermissionResponse'] = _GETPERMISSIONRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RegisterPermissionsRequest = _reflection.GeneratedProtocolMessageType('RegisterPermissionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERPERMISSIONSREQUEST,
  __module__ = 'permission_pb2'
  # @@protoc_insertion_point(class_scope:charonrpc.RegisterPermissionsRequest)
  ))
_sym_db.RegisterMessage(RegisterPermissionsRequest)

RegisterPermissionsResponse = _reflection.GeneratedProtocolMessageType('RegisterPermissionsResponse', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERPERMISSIONSRESPONSE,
  __module__ = 'permission_pb2'
  # @@protoc_insertion_point(class_scope:charonrpc.RegisterPermissionsResponse)
  ))
_sym_db.RegisterMessage(RegisterPermissionsResponse)

ListPermissionsRequest = _reflection.GeneratedProtocolMessageType('ListPermissionsRequest', (_message.Message,), dict(

  SortEntry = _reflection.GeneratedProtocolMessageType('SortEntry', (_message.Message,), dict(
    DESCRIPTOR = _LISTPERMISSIONSREQUEST_SORTENTRY,
    __module__ = 'permission_pb2'
    # @@protoc_insertion_point(class_scope:charonrpc.ListPermissionsRequest.SortEntry)
    ))
  ,
  DESCRIPTOR = _LISTPERMISSIONSREQUEST,
  __module__ = 'permission_pb2'
  # @@protoc_insertion_point(class_scope:charonrpc.ListPermissionsRequest)
  ))
_sym_db.RegisterMessage(ListPermissionsRequest)
_sym_db.RegisterMessage(ListPermissionsRequest.SortEntry)

ListPermissionsResponse = _reflection.GeneratedProtocolMessageType('ListPermissionsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTPERMISSIONSRESPONSE,
  __module__ = 'permission_pb2'
  # @@protoc_insertion_point(class_scope:charonrpc.ListPermissionsResponse)
  ))
_sym_db.RegisterMessage(ListPermissionsResponse)

GetPermissionRequest = _reflection.GeneratedProtocolMessageType('GetPermissionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPERMISSIONREQUEST,
  __module__ = 'permission_pb2'
  # @@protoc_insertion_point(class_scope:charonrpc.GetPermissionRequest)
  ))
_sym_db.RegisterMessage(GetPermissionRequest)

GetPermissionResponse = _reflection.GeneratedProtocolMessageType('GetPermissionResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETPERMISSIONRESPONSE,
  __module__ = 'permission_pb2'
  # @@protoc_insertion_point(class_scope:charonrpc.GetPermissionResponse)
  ))
_sym_db.RegisterMessage(GetPermissionResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z*github.com/piotrkowalczuk/charon/charonrpc'))
_LISTPERMISSIONSREQUEST_SORTENTRY.has_options = True
_LISTPERMISSIONSREQUEST_SORTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class PermissionManagerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Register = channel.unary_unary(
          '/charonrpc.PermissionManager/Register',
          request_serializer=RegisterPermissionsRequest.SerializeToString,
          response_deserializer=RegisterPermissionsResponse.FromString,
          )
      self.List = channel.unary_unary(
          '/charonrpc.PermissionManager/List',
          request_serializer=ListPermissionsRequest.SerializeToString,
          response_deserializer=ListPermissionsResponse.FromString,
          )
      self.Get = channel.unary_unary(
          '/charonrpc.PermissionManager/Get',
          request_serializer=GetPermissionRequest.SerializeToString,
          response_deserializer=GetPermissionResponse.FromString,
          )


  class PermissionManagerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Register(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_PermissionManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Register': grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=RegisterPermissionsRequest.FromString,
            response_serializer=RegisterPermissionsResponse.SerializeToString,
        ),
        'List': grpc.unary_unary_rpc_method_handler(
            servicer.List,
            request_deserializer=ListPermissionsRequest.FromString,
            response_serializer=ListPermissionsResponse.SerializeToString,
        ),
        'Get': grpc.unary_unary_rpc_method_handler(
            servicer.Get,
            request_deserializer=GetPermissionRequest.FromString,
            response_serializer=GetPermissionResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'charonrpc.PermissionManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaPermissionManagerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Register(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def List(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Get(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaPermissionManagerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Register(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Register.future = None
    def List(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    List.future = None
    def Get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Get.future = None


  def beta_create_PermissionManager_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('charonrpc.PermissionManager', 'Get'): GetPermissionRequest.FromString,
      ('charonrpc.PermissionManager', 'List'): ListPermissionsRequest.FromString,
      ('charonrpc.PermissionManager', 'Register'): RegisterPermissionsRequest.FromString,
    }
    response_serializers = {
      ('charonrpc.PermissionManager', 'Get'): GetPermissionResponse.SerializeToString,
      ('charonrpc.PermissionManager', 'List'): ListPermissionsResponse.SerializeToString,
      ('charonrpc.PermissionManager', 'Register'): RegisterPermissionsResponse.SerializeToString,
    }
    method_implementations = {
      ('charonrpc.PermissionManager', 'Get'): face_utilities.unary_unary_inline(servicer.Get),
      ('charonrpc.PermissionManager', 'List'): face_utilities.unary_unary_inline(servicer.List),
      ('charonrpc.PermissionManager', 'Register'): face_utilities.unary_unary_inline(servicer.Register),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_PermissionManager_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('charonrpc.PermissionManager', 'Get'): GetPermissionRequest.SerializeToString,
      ('charonrpc.PermissionManager', 'List'): ListPermissionsRequest.SerializeToString,
      ('charonrpc.PermissionManager', 'Register'): RegisterPermissionsRequest.SerializeToString,
    }
    response_deserializers = {
      ('charonrpc.PermissionManager', 'Get'): GetPermissionResponse.FromString,
      ('charonrpc.PermissionManager', 'List'): ListPermissionsResponse.FromString,
      ('charonrpc.PermissionManager', 'Register'): RegisterPermissionsResponse.FromString,
    }
    cardinalities = {
      'Get': cardinality.Cardinality.UNARY_UNARY,
      'List': cardinality.Cardinality.UNARY_UNARY,
      'Register': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'charonrpc.PermissionManager', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
