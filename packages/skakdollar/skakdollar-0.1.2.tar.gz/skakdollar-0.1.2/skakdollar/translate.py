#!/usr/bin/env python
# -*- coding: utf-8 -*-

import random


class Tokenizer(object):
    def __init__(self):
        pass

    def split_blocks(self, line):
        return [ line ]

    def split_tokens(self, line):
        return list(line)


class Dictionary(object):
    def __init__(self):
        self.d = {
            '#again': [
                    u'снова ',
                    u'опять ',
                  ],
            '#capital': [
                    u'большая',
                    u'заглавная',
                  ],
            u'.': [
                    u'точечка',
                  ],
            u' ': [
                    u'пробел',
                  ],
            u'@': [
                    u'собачка',
                    u'ухо',
                    u'обезьяна',
                    u'улитка',
                    u'суши',
                    u'а в кружочке',
                  ],
            u'#': [
                    u'решеточка',
                    u'тюрьма',
                  ],
            u'$': [
                    u'доллар как доллар',
                  ],
            u'%': [
                    u'процент',
                  ],
            u'^': [
                    u'крышка от домика',
                  ],
            u'&': [
                    u'восьмерка с хвостиком',
                  ],
            u'*': [
                    u'звездочка',
                    u'снежинка',
                  ],
            u'(': [
                    u'левая скобочка',
                  ],
            u')': [
                    u'правая скобочка',
                  ],
            u'<': [
                    u'левая треугольная скобочка',
                    u'меньше',
                  ],
            u'>': [
                    u'правая треугольная скобочка',
                    u'больше',
                  ],
            u'/': [
                    u'палочка падающая вправо',
                    u'дробь',
                  ],
            u'\\': [
                    u'палочка падающая влево',
                  ],
            u'+': [
                    u'плюсик',
                    u'крестик',
                  ],
            u'~': [
                    u'линия такая волнистая',
                    u'консоль',
                  ],
            u'-': [
                    u'минус',
                    u'дефис',
                  ],
            u'–': [
                    u'тире',
                  ],
            u'—': [
                    u'тире',
                  ],
            u'_': [
                    u'нижнее подчёркивание',
                    u'нижний дефис',
                    u'нижний пробел',
                    u'упавший минус',
                  ],
            u',': [
                    u'запятая',
                  ],
            u'\'': [
                    u'такая запятая сверху над буквами',
                  ],
            u'"': [
                    u'двойная кавычка',
                    u'обычная кавычка',
                    u'кавычка как знак дюйма',
                  ],
            u'«': [
                    u'левые кавычки как два меньше',
                  ],
            u'»': [
                    u'правые кавычки как два меньше',
                  ],
            u'a': [
                    u'a как русская',
                  ],
            u'b': [
                    u'бэ как палочка такая, и животик как бы вправо смотрит',
                    u'бэ как пудреница, влево открытая',
                    u'бэ как мягкий знак',
                    u'бэ как русская вэ',
                    u'бэ как русская эр вверх тормашками',
                  ],
            u'c': [
                    u'эс как русская эс',
                    u'эс как евро без палочки',
                    u'эс к английская',
                  ],
            u'd': [
                    u'дэ как пудреница, вправо открытая',
                    u'дэ как бэ в другую сторону',
                  ],
            u'e': [
                    u'е как русская е',
                  ],
            u'f': [
                    u'эф английская',
                    u'эф как гэ с палочкой',
                    u'эф жирафиком',
                    u'эф как флажок',
                  ],
            u'g': [
                    u'гэ как русская дэ',
                    u'джи как русская дэ',
                    u'гэ как Германия',
                    u'гэ там где русская п на клавиатуре',
                    u'гэ как конь',
                    u'джи как гугл',
                  ],
            u'h': [
                    u'аш как стульчик такой',
                    u'эйч как стульчик такой',
                    u'аш как постоянная Планка',
                    u'аш как русская н когда заглавная',
                    u'аш как водород',
                  ],
            u'H': [
                    u'большая аш как русская н',
                  ],
            u'i': [
                    u'и как палочка с точечкой',
                    u'и латинская с точечкой',
                    u'и как перевернутый восклицательный знак',
                  ],
            u'j': [
                    u'жи как поварешка',
                    u'джей как поварешка',
                    u'жи как крючок с точечкой',
                    u'джей как крючок с точечкой',
                    u'жи как ручка у зонтика',
                    u'джей как сок джей севен',
                    u'жи как сок джей севен',
                    u'жи как клюшка',
                    u'джей как кочерга',
                  ],
            u'k': [
                    u'ка русская',
                    u'ка с палочкой',
                    u'ка как наша',
                  ],
            u'l': [
                    u'эль длинная палочка',
                    u'эль как перевернутая г когда заглавная',
                  ],
            u'L': [
                    u'большая эль как перевернутая г русская',
                  ],
            u'm': [
                    u'эм как расчёска',
                    u'эм как макдональдс',
                    u'эм как русская тэ',
                  ],
            u'n': [
                    u'эн как русская пэ',
                    u'эн как номер',
                    u'эн как русска и наоборот',
                  ],
            u'o': [
                    u'о как зеркальце',
                    u'о кружочком',
                  ],
            u'p': [
                    u'пэ как русская эр',
                    u'пэ как флажочек вправо',
                  ],
            u'q': [
                    u'ку как флажочек влево',
                    u'ку как русская эр наоборот',
                  ],
            u'Q': [
                    u'большая ку как о с палочкой',
                  ],
            u'r': [
                    u'эр как русская гэ',
                    u'эр как тросточка',
                  ],
            u'R': [
                    u'большая эр как русская я наоборот',
                  ],
            u's': [
                    u'эс как доллар',
                    u'эс как змейка',
                    u'эс как сумермен',
                    u'эс как интеграл',
                  ],
            u't': [
                    u'тэ как зонтик сломанный',
                    u'тэ как могильный крестик',
                  ],
            u'T': [
                    u'большая тэ как русская',
                  ],
            u'u': [
                    u'у как русская и',
                    u'у как русская пэ вверх ногами',
                    u'у как подковка',
                  ],
            u'v': [
                    u'вэ как галочка',
                    u'вэ как букетик',
                    u'вэ как победа',
                  ],
            u'w': [
                    u'дубльвэ как две галочки',
                    u'дубльвэ как перевернутая эм',
                  ],
            u'x': [
                    u'икс',
                    u'хэ русская',
                  ],
            u'y': [
                    u'игрек как у русская',
                    u'игрек как рогатка',
                  ],
            u'z': [
                    u'зэд как зорро',
                    u'зэд как знак опеля',
                  ],
        }

    def translate(self, token):
        if token in self.d:
            return random.choice(self.d[token])
        if token.lower() in self.d:
            return self.translate('#capital') + u' ' + random.choice(self.d[token.lower()])
        return token


class Translator(object):
    def __init__(self, tokenizer, dictionary):
       self.tokenizer = tokenizer
       self.dictionary = dictionary

    def translate(self, line):
        translated = dict()
        for block in self.tokenizer.split_blocks(line):
            for token in self.tokenizer.split_tokens(block):
                if token in translated:
                    yield self.dictionary.translate('#again') + translated[token]
                else:
                    translated[token] = self.dictionary.translate(token)
                    yield translated[token]


class DefaultTranslator(Translator):
    def __init__(self):
        tokenizer = Tokenizer()
        dictionary = Dictionary()
        super(DefaultTranslator, self).__init__(tokenizer, dictionary)


def main():
    s = Tokenizer()
    d = Dictionary()
    t = Translator(s, d)
    import sys
    for line in sys.stdin:
        line = line.strip()
        print (', '.join(list(t.translate(line))))


if __name__ == '__main__':
    main()
