CHANGES
=======

1.2.0
-----

* Add a new base mixin for Floating IP
* Add missing location to mixins
* Removes listing of inaccessible subnets
* Render default values that are not None
* Add occi.compute.ephemeral\_storage.size attribute
* Add default values to resource templates
* Add applies to compute mixins
* Add VM resize support

1.1.2
-----

* Remove unused logging import
* Fixed order of arguments in assertEqual
* Replace six.iteritems() with .items()
* Removed the older version of python and added 3.5
* Drop MANIFEST.in - it's not needed by pbr
* Use same environment for Neutron calls

1.1.1
-----

* Publish and accept OCCI/1.1 as a valid version

1.1.0
-----

* Use the correct OCCI version
* Fix block\_device\_mapping on compute creation

1.0.0
-----

* Included OCCI IPReservation support
* Check if project id is None from headers
* doc: Add upgrade instructions and references to OCCI 1.2
* Include OCCI1.2 save action
* Documentation for ooi\_secure\_proxy\_ssl\_header
* Change Python 3.3 support to 3.4
* docs: fix network.py docstring
* docs: fix underline for section
* docs: update pipelines for Mitaka and Newton
* Add option to handle SSL termination proxies
* Security Group support for Nova and Neutron
* Include OCCI Security Group infrastructure
* Do not crash on volume attachments without device
* docs: clean up environment before building
* Add categories to resource links
* Check if router exists on network creation
* OCCI 1.2 Contextualization
* Update link handling in parser
* OCCI 1.2 JSON parser
* JSON serializer
* Return collections instead of object lists
* Improve Collection rendering
* OCCI 1.2 json rendering
* Increase attribute types
* Parse attributes according to their types
* Removes unnecessary utf-8 encoding
* Add shields.io PyPI badge
* add bandit security linter
* utils: remove use of assert
* Create compute: split in separate headers
* Refactoring of parser tests
* Isolation of rendering tests
* Adapt attributes definition to OCCI 1.2
* Adapt Mixin to OCCI 1.2
* Adapt Kind to OCCI 1.2
* fix functional testing

0.3.2
-----

* Handle 500 errors coming from nova
* Check for the correct HTTP return code when deleting a volume
* Remove discover from test-requirements

0.3.1
-----

* Modify structure of test to separe functional tests
* Move neutron\_ooi\_endpoint to nova.conf
* gitbook: point to online documentation
* doc: link to usage instructions in index
* doc: include packages information
* Include storage documentation in usage
* Update documentation and gitbook
* Delete extra parameter in network link creation
* Solved OCCI validation using osnetwork mixin
* tests: separate between functional and unit
* Add copyright as required in INDIGO-DataCloud
* Add functional tests for network

0.3.0
-----

* Fix network allocation parameter
* Add mixin to indicate that neutron is being used
* Do not use occi.compute for OpenStack attributes
* Solved list network links
* Allow to specify network ids on VM creation
* Included neutron configuration in documentation
* NetworkLink and Compute adapted to the new networks
* Create OCCI and Controller network for neutron
* Include helper methods for managing networks

0.2.0
-----

* Replace assertEqual(None, \*) with assertIsNone in tests
* update mailmap entries
* fix documentation typo
* Release floating IPs on server deletion

0.1.1
-----

* Documentation minor fix
* Add Mitaka pipeline to documentation
* version from pbr is a method, not an attribute
* remove version information from file
* generate configuration via oslo
* add pipeline config samples
* update pipeline configuration

0.1.0rc3
--------

* do not set max and min values in port

0.1.0rc2
--------

* Add listen addr, port and number of workers options
* Adapt to support Juno
* do not access token info to obtain tenant
* Support linking storage on compute creation
* Render links as entities if shown independently
* remove pbr version dependency
* Network refactoring
* wsgi: log exception instead of warning
* Adapt to support Juno
* Remove oslo.middleware from requirements
* Create temporary SSH key name if key data is received
* wsgi: log invalid Accept instead of Content-type
* templates: set up proper locations
* rendering: render location for categories
* Catch exception if image is not found when showing a server
* Resolve identifiers when linking objects
* Kind locations must be relative
* Handle multiple content-types into one header field
* rename stackforge -> openstack namespace
* Update .gitreview for new namespace
* Change ignore-errors to ignore\_errors
* Refactor of network
* Add support for SSH key injection
* Ignore cover directory
* actions: fix state transitions for OCCI actions
* fix nova <-> OCCI state mapping
* documentation improvements
* documentation cleanup
* move ooi version into its own module
* Fix default value for server name
* Switch to using oslo\_\* instead of oslo.\*
* rename NetworkController to just Controller
* controllers: remove unused methods from base controller
* Use our own exceptions
* refactor network\_link controller
* helpers: add network links related methods
* refactor storage\_link controller
* refactor storage controller
* helpers: add volume related methods
* refactor network controller
* refactor query controller
* refactor 'create' method from compute controller
* refactor 'show' method from compute controller
* refactor 'run\_action' method from compute controller
* refactor 'index' method for compute controller
* Remove blank lines from requirements
* refactor 'delete' method for compute controller
* make base controller an abstract class
* helpers: added a base class and openstack API helper
* move exception\_from\_response to helpers module
* Update README to include documentation
* occi: add equality operator to resources
* doc: add draft installation instructions
* Update readme with links to launchpad bug tracker
* Add .gitreview file
* Add correct copyright and contact info
* Improved test coverage
* Improved the string splitting for parsing OCCI
* Fix rendering of actions
* text/uri-list rendering
* Extend rendering of caegories
* Use ids instead of names for flavors
* Create and delete methods for storage
* POST must be allowed also on resource/
* Improve coverage of unit tests
* Manual creation of the routes to resources
* Network links
* New network stuff
* Use the proper dict for getting attributes
* Adapt to new parser/validator schema
* Better coverage for storage links
* Fix tests
* Add storage link controller
* Use os-volume\_attachments nova extension
* Controller for storage\_link
* Fixed some issues with link rendering
* actions: implement restart action
* actions: implement stop and start for compute resources
* validator: add unit tests
* Catch exception if we got an unknown response from OpenStack
* parsing: check for categories instead of kinds
* Move the OCCI validator into its own module
* Stop using decorators for parse and validate
* catch unexpected exceptions in handler
* readme: add a bit of information
* Change readme to markdown and add badges
* Operations on paths that are not resources must end with /
* Comply with RFC5785
* Check OCCI version in user agent
* Advertise supported OCCI version
* Basic tests for the parser
* Added TextParser
* Improved parsers and validators
* Introduced support for user\_data contextualization
* Moved parsers to wsgi module
* Renamed and updated OCCI exceptions
* Just a TODO message
* First parser attempt
* Introducing contextualization tests
* Added tests for volume linked to compute
* Improved link rendering
* Improve testing
* Added Storage to query
* Storage controller implementation (index and show)
* Return 204 if there is no content
* Handle trailing slash for delete all operation
* Check for other valid return codes
* Add negative test fot compute controller
* Fix typo in raised exception
* Improve content-type handling
* Action 'delete' for compute controller
* Improve and fix locations and URLs
* Preserve original request when calling OpenStack
* Move helper functions into more coherent locations
* Cleaner join\_url helper method
* Refactor action rendering
* Handle OpenStack API faults
* Separate rendering from objects
* Fix tests for query interface
* Query update
* New OpenStack mixins
* Start the work on the query
* Refactor unit testing using a fake application
* Add some unit tests to compute controller create
* Ensure that the Request.body has the correct type
* Add create() method to Compute controller
* Added headers rendering
* Do not take into account order in rendered results
* Update and adapt compute controller tests
* Move query controller tests into its own test module
* Reorganize test layout
* Refactor the OCCI middleware tests
* Improve OCCI WSGI middleware tests
* Added compute mixins
* Moved part of the rendering to entity
* compute\_controller: show
* compute controller: list servers in OCCI
* Add a location property to the entities
* Add an initial OCCI collection object
* Pass down the openstack version to the controllers
* Reorganize controllers
* Pass and call the application from the controllers
* Do not use req.path but req.path\_info for the mapper
* An invalid Content-Type must return on a 406 Not Acceptable
* headers rendering and serializer for OCCI categories
* Add Compute actions to OCCI query
* Add OCCI query route and controller
* text rendering and serializer for OCCI categories
* Get tenant ID through token\_auth header
* HeaderNotFound exception must inherit from exception.Invalid
* index() method for Compute controller
* Do not compare dict keys with list
* Deal with Content-Type, Accept and body
* Fix code to work on Py3
* Add OpenStack Resource Template
* Add OpenStack OS Template
* build\_schema should be build\_scheme
* Add OCCI resource and OS templates
* Add relations according to OCCI specification
* initial implementation of OCCI Compute resource
* occi.core.id should be settable for some OCCI entities
* Reimplement attributes in the OCCI core model
* Implementation of the OCCI v1.1 Core Model
* Add travis-ci.org and coverals configuration file
* Create initial WSGI infrastructure
* Change metadata and remove support for Py26
* Add initial exception module
* initial commit from cookiecutter
