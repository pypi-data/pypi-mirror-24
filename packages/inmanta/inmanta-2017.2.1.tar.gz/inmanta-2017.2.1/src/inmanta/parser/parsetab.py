
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSINT FLOAT ID CID SEP STRING MLS CMP_OP REGEX REL AND AS DEFINED DICT END ENTITY EXTENDS FALSE FOR IMPLEMENT IMPLEMENTATION IMPORT IN INDEX IS MATCHING NOT OR TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls \n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | forstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandfor : FOR ID IN operand implementationentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr : ns_ref IDattr : ns_ref ID \'=\' constantattr : ns_ref ID \'=\' UNDEFattr : ns_ref \'[\' \']\' IDattr : ns_ref \'[\' \']\' ID \'=\' constant_listattr : ns_ref \'[\' \']\' ID \'=\' UNDEFattr : DICT IDattr : DICT ID \'=\' map_defimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls stmt_list ENDimplementation : \':\' stmt_list ENDimplementation : \':\' ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation : class_ref \'.\' ID multi REL class_refrelation : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup constructor : class_ref \'(\' param_list \')\'  constructor : class_ref \'(\' \')\'  function_call : ns_ref \'(\' \')\' function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\' list_def : \'[\' \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operand map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' constant : INT\n    | FLOAT\n    | mls\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' \']\'  constant_list : \'[\' constants \']\' constants : constantconstants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandoperand_list : operand \',\' operand_listoperand_list : operandns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : var_ref \'.\' IDvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : class_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLSmls : MLS mls'
    
_lr_action_items = {'SEP':([2,22,34,44,48,49,100,109,117,162,171,212,],[29,-112,29,85,-111,88,85,85,85,29,-112,85,]),'USING':([6,38,47,],[-107,76,-108,]),'=':([2,3,22,48,70,79,129,133,162,187,],[-106,32,-112,-111,-105,114,155,158,-106,206,]),')':([11,22,30,36,40,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,80,81,90,93,96,106,107,115,122,124,125,146,152,159,166,167,168,171,172,195,199,202,208,209,210,211,212,213,214,215,216,228,],[-115,-112,53,-116,80,-111,-106,-75,-71,-102,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,96,-105,-78,115,-86,-82,-80,-114,137,-77,-101,-85,-81,-100,-87,-113,-68,-64,-63,-112,-69,213,-65,-99,-105,-58,-59,-60,-106,-57,-67,-61,-62,-66,]),'REL':([77,116,143,176,178,201,],[111,147,-49,-50,-52,-51,]),'CID':([0,1,4,5,6,7,8,9,10,11,13,14,15,16,18,19,22,24,25,26,27,28,29,30,32,36,44,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,70,71,72,75,80,84,87,88,89,90,93,96,99,103,109,110,114,115,116,118,120,122,123,124,125,128,131,134,137,138,139,141,142,143,147,148,149,150,152,153,157,160,163,164,165,166,167,168,170,171,172,173,174,176,178,180,181,182,183,190,193,197,198,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[6,-4,-16,-3,-107,-17,33,6,-7,-115,6,-8,-6,-15,43,-5,-112,-11,-14,-9,6,-10,47,6,6,-116,-12,-108,-111,-106,-75,-71,-102,-79,-88,-91,-93,-94,-73,-70,6,-90,-72,-76,-89,-74,-92,-105,-20,6,6,-78,6,6,47,6,-86,-82,-80,-22,-26,-104,-38,6,-77,6,-55,-13,-101,6,-85,-81,6,-27,-25,-56,-40,6,6,6,-49,6,6,6,-21,-87,-23,-24,6,-43,6,-103,-68,-64,-63,6,-112,-69,-39,6,-50,-52,-46,-48,-53,-54,-42,6,6,6,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'IS':([171,208,],[196,222,]),'ENTITY':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[8,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,8,-10,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'INDEX':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[9,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,9,-10,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'}':([11,22,36,48,49,50,51,53,54,55,56,57,58,59,60,63,64,65,66,67,68,70,80,90,92,93,96,115,124,125,151,152,205,],[-115,-112,-116,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,90,-90,-72,-76,-89,-74,-92,-105,-78,-86,124,-82,-80,-77,-85,-81,-84,-87,-83,]),'REGEX':([30,32,61,87,89,114,116,123,141,143,149,155,170,174,176,178,193,197,198,201,221,229,],[55,55,55,55,55,55,55,55,55,-49,182,55,55,55,-50,-52,55,55,55,-51,55,55,]),'MLS':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,30,32,36,44,47,48,49,50,51,53,54,55,56,57,58,59,61,63,64,65,66,67,68,70,71,73,80,87,89,90,93,96,99,103,109,110,114,115,116,118,120,123,124,125,127,131,134,137,138,139,141,143,149,150,152,153,155,157,163,165,166,167,168,170,171,172,173,174,176,178,180,181,182,183,190,193,197,198,199,200,201,207,208,209,210,211,212,213,214,215,216,221,223,224,228,229,],[11,-4,-16,-3,-107,-17,-7,11,-8,-6,-15,-5,-112,-11,-14,-9,11,-10,11,11,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,11,-90,-72,-76,-89,-74,-92,-105,-20,11,-78,11,11,-86,-82,-80,-22,-26,-104,-38,11,-77,11,-55,-13,11,-85,-81,11,-27,-25,-56,-40,11,11,-49,11,-21,-87,-23,11,-24,-43,-103,-68,-64,-63,11,-112,-69,-39,11,-50,-52,-46,-48,-53,-54,-42,11,11,11,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,11,-45,-47,-66,11,]),'IMPLEMENTATION':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[12,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,12,-10,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'IMPLEMENT':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[13,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,13,-10,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),',':([6,11,22,36,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,70,80,90,93,96,98,106,109,115,124,125,146,151,152,226,],[-107,-115,-112,-116,-108,-111,-106,-75,-71,89,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-78,-86,-82,-80,128,136,140,-77,-85,-81,179,184,-87,229,]),'FALSE':([30,32,61,87,89,114,116,123,141,143,149,155,170,174,176,178,193,197,198,201,221,229,],[56,56,56,56,56,56,56,56,172,-49,172,56,172,172,-50,-52,56,172,172,-51,56,56,]),'WHEN':([22,48,109,110,165,],[-112,-111,-104,141,-103,]),'TYPEDEF':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[18,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,18,-10,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'NOT':([141,149,170,174,197,198,],[174,174,174,174,174,174,]),'AS':([22,42,43,44,48,],[-112,83,84,86,-111,]),'IMPORT':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[21,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,21,-10,-116,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'DEFINED':([196,222,],[214,228,]),'AND':([11,22,36,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,80,90,93,96,115,124,125,152,166,167,168,171,172,173,183,195,199,208,209,210,211,212,213,214,215,216,228,],[-115,-112,-116,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-78,-86,-82,-80,-77,-85,-81,-87,-68,-64,-63,-112,-69,197,197,197,-65,-105,-58,-59,-60,-106,-57,-67,-61,197,-66,]),'DICT':([11,36,54,55,56,57,63,66,68,73,90,101,104,105,124,127,129,132,133,135,185,186,187,188,219,220,225,230,],[-115,-116,-88,-91,-93,-94,-90,-89,-92,102,-86,102,102,-29,-85,102,-30,102,-36,-28,-32,-31,-33,-37,-35,-34,-95,-96,]),'(':([2,6,17,22,35,47,48,49,62,119,141,149,162,170,171,174,197,198,],[30,-107,40,-112,74,-108,-111,30,40,40,170,170,30,170,-112,170,170,170,]),'ID':([0,1,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,36,40,41,44,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,70,71,72,73,74,75,76,80,83,84,85,86,87,88,89,90,93,95,96,99,100,101,102,103,104,105,109,110,114,115,116,118,120,122,123,124,125,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,147,148,149,150,152,153,156,157,160,163,164,165,166,167,168,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,190,192,193,194,197,198,199,200,201,203,204,207,208,209,210,211,212,213,214,215,216,219,220,223,224,225,228,230,],[22,-4,-16,-3,-107,-17,22,-7,-115,37,22,-8,-6,-15,39,42,-5,22,-112,45,-11,-14,-9,22,-10,48,22,70,22,-116,79,82,-12,-108,-111,-106,-75,-71,-102,-79,-88,-91,-93,-94,-73,-70,22,-90,-72,-76,-89,-74,-92,-105,-20,22,22,106,22,22,-78,22,22,48,120,22,48,22,-86,-82,79,-80,-22,129,22,133,-26,22,-29,-104,-38,22,-77,22,-55,-13,-101,22,-85,-81,22,22,-30,-27,22,-36,-25,-28,106,-56,-40,22,22,171,22,-49,22,22,171,-21,-87,-23,187,-24,22,-43,22,-103,-68,-64,-63,171,-112,-69,-39,171,200,-50,-52,79,-46,-48,-53,-54,-32,-31,-33,-37,-42,208,22,22,171,171,-65,-44,-51,217,218,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-35,-34,-45,-47,-95,-66,-96,]),'CMP_OP':([11,36,48,49,53,54,55,57,58,59,63,64,65,66,67,80,90,93,96,115,124,125,152,166,167,168,169,171,172,182,208,],[-115,-116,-111,-106,-79,-88,-91,-94,-73,-70,-90,-72,-76,-89,-74,-78,-86,-82,-80,-77,-85,-81,-87,-92,-75,-71,193,-112,-93,-91,-105,]),'INT':([30,32,61,78,87,89,113,114,116,123,141,143,144,149,155,170,174,176,178,193,197,198,201,221,229,],[54,54,54,112,54,54,145,54,54,54,54,-49,177,54,54,54,54,-50,-52,54,54,54,-51,54,54,]),']':([11,22,36,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,70,80,90,93,94,96,112,115,122,124,125,126,130,144,145,146,152,177,202,221,226,227,231,],[-115,-112,-116,-111,-106,-75,-71,-102,-79,-88,-91,-93,-94,-73,-70,93,-90,-72,-76,-89,-74,-92,-105,-78,-86,-82,125,-80,143,-77,-101,-85,-81,152,156,176,178,-100,-87,201,-99,225,-97,230,-98,]),'FOR':([0,1,4,5,6,7,10,11,14,15,16,19,22,24,25,26,27,28,36,37,44,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,139,143,150,152,153,157,160,163,164,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[23,-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,-112,-11,-14,-9,23,-10,-116,75,-12,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,23,-49,-21,-87,-23,-24,23,-43,23,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'STRING':([30,32,60,61,87,89,114,116,123,141,143,149,155,170,174,176,178,184,193,197,198,201,221,229,],[57,57,91,57,57,57,57,57,57,57,-49,57,57,57,57,-50,-52,91,57,57,57,-51,57,57,]),'END':([4,7,11,16,22,25,36,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,73,80,90,93,96,101,104,105,115,124,125,127,129,132,133,135,139,150,152,161,163,164,185,186,187,188,189,190,191,207,219,220,225,230,],[-16,-17,-115,-15,-112,-14,-116,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,103,-78,-86,-82,-80,131,134,-29,-77,-85,-81,103,-30,157,-36,-28,163,-21,-87,190,-43,-19,-32,-31,-33,-37,207,-42,-18,-41,-35,-34,-95,-96,]),'$end':([1,4,5,6,7,10,11,14,15,16,19,20,22,24,25,26,27,28,36,44,46,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,80,90,93,96,99,103,109,110,115,118,120,124,125,131,134,137,138,143,150,152,153,157,163,165,166,167,168,171,172,173,176,178,180,181,182,183,190,199,200,201,207,208,209,210,211,212,213,214,215,216,223,224,228,],[-4,-16,-3,-107,-17,-7,-115,-8,-6,-15,-5,0,-112,-11,-14,-9,-2,-10,-116,-12,-1,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-20,-78,-86,-82,-80,-22,-26,-104,-38,-77,-55,-13,-85,-81,-27,-25,-56,-40,-49,-21,-87,-23,-24,-43,-103,-68,-64,-63,-112,-69,-39,-50,-52,-46,-48,-53,-54,-42,-65,-44,-51,-41,-105,-58,-59,-60,-106,-57,-67,-61,-62,-45,-47,-66,]),'OR':([11,22,36,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,80,90,93,96,115,124,125,152,166,167,168,171,172,173,183,195,199,208,209,210,211,212,213,214,215,216,228,],[-115,-112,-116,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,-78,-86,-82,-80,-77,-85,-81,-87,-68,-64,-63,-112,-69,198,198,198,-65,-105,-58,-59,-60,-106,-57,-67,-61,-62,-66,]),'UNDEF':([155,206,],[185,219,]),'{':([30,32,61,87,89,114,116,123,141,143,149,158,170,174,176,178,193,197,198,201,],[60,60,60,60,60,60,60,60,60,-49,60,60,60,60,-50,-52,60,60,60,-51,]),'[':([6,22,30,32,39,47,48,61,62,82,87,89,100,111,114,116,123,141,143,149,170,174,176,178,193,194,197,198,201,206,217,218,],[-107,-112,61,61,78,-108,-111,61,95,78,61,61,130,78,61,61,61,61,-49,61,61,61,-50,-52,61,61,61,61,-51,221,78,78,]),'MATCHING':([22,48,117,],[-112,-111,149,]),'TRUE':([30,32,61,87,89,114,116,123,141,143,149,155,170,174,176,178,193,197,198,201,221,229,],[68,68,68,68,68,68,68,68,166,-49,166,68,166,166,-50,-52,68,166,166,-51,68,68,]),'EXTENDS':([33,],[72,]),'FLOAT':([30,32,61,87,89,114,116,123,141,143,149,155,170,174,176,178,193,197,198,201,221,229,],[66,66,66,66,66,66,66,66,66,-49,66,66,66,66,-50,-52,66,66,66,-51,66,66,]),':':([6,11,22,33,36,47,48,49,50,51,53,54,55,56,57,58,59,63,64,65,66,67,68,70,78,80,90,91,93,96,97,98,108,112,115,121,124,125,152,154,],[-107,-115,-112,73,-116,-108,-111,-106,-75,-71,-79,-88,-91,-93,-94,-73,-70,-90,-72,-76,-89,-74,-92,-105,113,-78,-86,123,-82,-80,127,-110,139,144,-77,139,-85,-81,-87,-109,]),'IN':([11,36,45,48,49,53,54,55,57,58,59,63,64,65,66,67,80,90,93,96,115,124,125,152,166,167,168,169,171,172,182,208,],[-115,-116,87,-111,-106,-79,-88,-91,-94,-73,-70,-90,-72,-76,-89,-74,-78,-86,-82,-80,-77,-85,-81,-87,-92,-75,-71,194,-112,-93,-91,-105,]),'.':([2,3,6,17,22,47,48,49,50,70,162,167,171,180,181,208,211,212,],[-106,31,-107,41,-112,-108,-111,-106,31,-105,-106,192,-112,203,204,-105,31,-106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'implement_def':([0,27,],[19,19,]),'entity_def':([0,27,],[1,1,]),'for':([0,27,139,160,164,],[7,7,7,7,7,]),'ns_ref':([0,9,13,21,27,30,32,61,72,73,75,76,83,84,87,89,101,104,114,116,123,127,128,132,139,140,141,142,147,148,149,160,164,170,174,193,194,197,198,],[2,34,34,44,2,49,49,49,34,100,34,109,117,34,49,49,100,100,49,49,49,100,34,100,162,109,49,34,34,34,49,162,162,49,49,49,212,49,49,]),'var_ref':([0,27,30,32,61,87,89,114,116,123,139,141,149,160,164,170,174,193,194,197,198,],[3,3,50,50,50,50,50,50,50,50,3,167,167,3,3,167,167,50,211,167,167,]),'function_call':([0,27,30,32,61,87,89,114,116,123,139,141,149,160,164,170,174,193,197,198,],[4,4,51,51,51,51,51,51,51,51,4,168,168,4,4,168,168,51,168,168,]),'mls':([0,11,27,30,32,61,73,87,89,114,116,123,127,139,141,149,155,170,174,193,197,198,221,229,],[5,36,5,63,63,63,101,63,63,63,63,63,101,160,63,63,63,63,63,63,63,63,63,63,]),'constants':([221,229,],[227,231,]),'main':([0,27,],[20,46,]),'list_def':([30,32,61,87,89,114,116,123,141,149,170,174,193,194,197,198,],[58,58,58,58,58,58,58,58,58,58,58,58,58,210,58,58,]),'index_lookup':([30,32,61,87,89,114,116,123,141,149,170,174,193,197,198,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'entity_body_outer':([73,127,],[99,153,]),'id_list':([74,136,],[107,159,]),'implementation':([108,121,],[138,150,]),'relation':([0,27,],[10,10,]),'class_ref_list':([72,128,],[97,154,]),'entity_body':([73,101,127,],[104,132,104,]),'stmt_list':([139,160,164,],[161,189,191,]),'attr':([73,101,104,127,132,],[105,105,135,105,135,]),'param_list':([40,95,179,],[81,126,202,]),'import':([0,27,],[24,24,]),'constant':([30,32,61,87,89,114,116,123,141,149,155,170,174,193,197,198,221,229,],[59,59,59,59,59,59,59,59,59,59,186,59,59,59,59,59,226,226,]),'statement':([0,27,139,160,164,],[14,14,164,164,164,]),'assign':([0,27,139,160,164,],[25,25,25,25,25,]),'ns_list':([76,140,],[110,165,]),'index':([0,27,],[28,28,]),'operand':([30,32,61,87,89,114,116,123,141,149,170,174,193,197,198,],[52,71,52,121,52,146,52,151,169,169,169,169,209,169,169,]),'multi':([39,82,111,217,218,],[77,116,142,223,224,]),'map_def':([30,32,61,87,89,114,116,123,141,149,158,170,174,193,197,198,],[67,67,67,67,67,67,67,67,67,67,188,67,67,67,67,67,]),'constant_list':([206,],[220,]),'constructor':([0,27,30,32,61,84,87,89,114,116,123,139,141,149,160,164,170,174,193,197,198,],[16,16,64,64,64,118,64,64,64,64,64,16,64,64,16,16,64,64,64,64,64,]),'class_ref':([0,9,13,27,30,32,61,72,75,84,87,89,114,116,123,128,139,141,142,147,148,149,160,164,170,174,193,197,198,],[17,35,38,17,62,62,62,98,108,119,62,62,62,62,62,98,119,62,175,180,181,62,119,119,62,62,62,62,62,]),'top_stmt':([0,27,],[27,27,]),'condition':([141,149,170,174,197,198,],[173,183,195,199,215,216,]),'pair_list':([60,184,],[92,205,]),'typedef':([0,27,],[26,26,]),'implementation_def':([0,27,],[15,15,]),'operand_list':([30,61,89,116,],[69,94,122,148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',66),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',73),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',78),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',79),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',80),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',81),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',82),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',83),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',84),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',85),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',86),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',95),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',101),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',110),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',111),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',112),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',113),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',118),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',125),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',130),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',136),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',145),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',151),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',157),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',162),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',167),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',172),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',177),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',183),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',188),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',194),
  ('attr -> ns_ref ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',200),
  ('attr -> ns_ref [ ] ID','attr',4,'p_attr_list','plyInmantaParser.py',206),
  ('attr -> ns_ref [ ] ID = constant_list','attr',6,'p_attr_list_cte','plyInmantaParser.py',212),
  ('attr -> ns_ref [ ] ID = UNDEF','attr',6,'p_attr_list_undef','plyInmantaParser.py',218),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',224),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',230),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',238),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',244),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',252),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',264),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',269),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',274),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',281),
  ('relation -> class_ref . ID multi REL class_ref . ID multi','relation',9,'p_relation_new','plyInmantaParser.py',290),
  ('relation -> class_ref . ID multi REL class_ref','relation',6,'p_relation_new_unidir','plyInmantaParser.py',296),
  ('relation -> class_ref . ID multi operand_list class_ref . ID multi','relation',9,'p_relation_new_annotated','plyInmantaParser.py',302),
  ('relation -> class_ref . ID multi operand_list class_ref','relation',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',308),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',314),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',319),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',324),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',329),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',336),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',337),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',343),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',350),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',359),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',364),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',365),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',366),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',367),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',368),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',375),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',376),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',381),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',387),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',393),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',399),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',400),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',410),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',411),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',412),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',413),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',414),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',415),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',416),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',421),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',426),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',431),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',437),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',443),
  ('list_def -> [ ]','list_def',2,'p_list_def_empty','plyInmantaParser.py',449),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',455),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',461),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',466),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',472),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',478),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',486),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',487),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',488),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',495),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',502),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',509),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',519),
  ('constant_list -> [ ]','constant_list',2,'p_constant_list_empty','plyInmantaParser.py',554),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',560),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',566),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',571),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',577),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',583),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',588),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',594),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',599),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',605),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',610),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',616),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',622),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',627),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',632),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',638),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',643),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',649),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',655),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',661),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',666),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',672),
]
