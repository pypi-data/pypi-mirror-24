# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_picosat', [dirname(__file__)])
        except ImportError:
            import _picosat
            return _picosat
        if fp is not None:
            try:
                _mod = imp.load_module('_picosat', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _picosat = swig_import_helper()
    del swig_import_helper
else:
    import _picosat
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


PICOSAT_API_VERSION = _picosat.PICOSAT_API_VERSION
PICOSAT_UNKNOWN = _picosat.PICOSAT_UNKNOWN
PICOSAT_SATISFIABLE = _picosat.PICOSAT_SATISFIABLE
PICOSAT_UNSATISFIABLE = _picosat.PICOSAT_UNSATISFIABLE

def picosat_version():
  return _picosat.picosat_version()
picosat_version = _picosat.picosat_version

def picosat_config():
  return _picosat.picosat_config()
picosat_config = _picosat.picosat_config

def picosat_copyright():
  return _picosat.picosat_copyright()
picosat_copyright = _picosat.picosat_copyright

def picosat_init():
  return _picosat.picosat_init()
picosat_init = _picosat.picosat_init

def picosat_minit(*args):
  return _picosat.picosat_minit(*args)
picosat_minit = _picosat.picosat_minit

def picosat_reset(*args):
  return _picosat.picosat_reset(*args)
picosat_reset = _picosat.picosat_reset

def picosat_measure_all_calls(*args):
  return _picosat.picosat_measure_all_calls(*args)
picosat_measure_all_calls = _picosat.picosat_measure_all_calls

def picosat_set_prefix(*args):
  return _picosat.picosat_set_prefix(*args)
picosat_set_prefix = _picosat.picosat_set_prefix

def picosat_set_verbosity(*args):
  return _picosat.picosat_set_verbosity(*args)
picosat_set_verbosity = _picosat.picosat_set_verbosity

def picosat_set_plain(*args):
  return _picosat.picosat_set_plain(*args)
picosat_set_plain = _picosat.picosat_set_plain

def picosat_set_global_default_phase(*args):
  return _picosat.picosat_set_global_default_phase(*args)
picosat_set_global_default_phase = _picosat.picosat_set_global_default_phase

def picosat_set_default_phase_lit(*args):
  return _picosat.picosat_set_default_phase_lit(*args)
picosat_set_default_phase_lit = _picosat.picosat_set_default_phase_lit

def picosat_reset_phases(*args):
  return _picosat.picosat_reset_phases(*args)
picosat_reset_phases = _picosat.picosat_reset_phases

def picosat_reset_scores(*args):
  return _picosat.picosat_reset_scores(*args)
picosat_reset_scores = _picosat.picosat_reset_scores

def picosat_remove_learned(*args):
  return _picosat.picosat_remove_learned(*args)
picosat_remove_learned = _picosat.picosat_remove_learned

def picosat_set_more_important_lit(*args):
  return _picosat.picosat_set_more_important_lit(*args)
picosat_set_more_important_lit = _picosat.picosat_set_more_important_lit

def picosat_set_less_important_lit(*args):
  return _picosat.picosat_set_less_important_lit(*args)
picosat_set_less_important_lit = _picosat.picosat_set_less_important_lit

def picosat_message(*args):
  return _picosat.picosat_message(*args)
picosat_message = _picosat.picosat_message

def picosat_set_seed(*args):
  return _picosat.picosat_set_seed(*args)
picosat_set_seed = _picosat.picosat_set_seed

def picosat_enable_trace_generation(*args):
  return _picosat.picosat_enable_trace_generation(*args)
picosat_enable_trace_generation = _picosat.picosat_enable_trace_generation

def picosat_set_incremental_rup_file(*args):
  return _picosat.picosat_set_incremental_rup_file(*args)
picosat_set_incremental_rup_file = _picosat.picosat_set_incremental_rup_file

def picosat_save_original_clauses(*args):
  return _picosat.picosat_save_original_clauses(*args)
picosat_save_original_clauses = _picosat.picosat_save_original_clauses

def picosat_inc_max_var(*args):
  return _picosat.picosat_inc_max_var(*args)
picosat_inc_max_var = _picosat.picosat_inc_max_var

def picosat_push(*args):
  return _picosat.picosat_push(*args)
picosat_push = _picosat.picosat_push

def picosat_failed_context(*args):
  return _picosat.picosat_failed_context(*args)
picosat_failed_context = _picosat.picosat_failed_context

def picosat_context(*args):
  return _picosat.picosat_context(*args)
picosat_context = _picosat.picosat_context

def picosat_pop(*args):
  return _picosat.picosat_pop(*args)
picosat_pop = _picosat.picosat_pop

def picosat_simplify(*args):
  return _picosat.picosat_simplify(*args)
picosat_simplify = _picosat.picosat_simplify

def picosat_adjust(*args):
  return _picosat.picosat_adjust(*args)
picosat_adjust = _picosat.picosat_adjust

def picosat_variables(*args):
  return _picosat.picosat_variables(*args)
picosat_variables = _picosat.picosat_variables

def picosat_added_original_clauses(*args):
  return _picosat.picosat_added_original_clauses(*args)
picosat_added_original_clauses = _picosat.picosat_added_original_clauses

def picosat_max_bytes_allocated(*args):
  return _picosat.picosat_max_bytes_allocated(*args)
picosat_max_bytes_allocated = _picosat.picosat_max_bytes_allocated

def picosat_time_stamp():
  return _picosat.picosat_time_stamp()
picosat_time_stamp = _picosat.picosat_time_stamp

def picosat_stats(*args):
  return _picosat.picosat_stats(*args)
picosat_stats = _picosat.picosat_stats

def picosat_propagations(*args):
  return _picosat.picosat_propagations(*args)
picosat_propagations = _picosat.picosat_propagations

def picosat_decisions(*args):
  return _picosat.picosat_decisions(*args)
picosat_decisions = _picosat.picosat_decisions

def picosat_visits(*args):
  return _picosat.picosat_visits(*args)
picosat_visits = _picosat.picosat_visits

def picosat_seconds(*args):
  return _picosat.picosat_seconds(*args)
picosat_seconds = _picosat.picosat_seconds

def picosat_add(*args):
  return _picosat.picosat_add(*args)
picosat_add = _picosat.picosat_add

def picosat_add_arg(*args):
  return _picosat.picosat_add_arg(*args)
picosat_add_arg = _picosat.picosat_add_arg

def picosat_add_lits(*args):
  return _picosat.picosat_add_lits(*args)
picosat_add_lits = _picosat.picosat_add_lits

def picosat_print(*args):
  return _picosat.picosat_print(*args)
picosat_print = _picosat.picosat_print

def picosat_assume(*args):
  return _picosat.picosat_assume(*args)
picosat_assume = _picosat.picosat_assume

def picosat_add_ado_lit(*args):
  return _picosat.picosat_add_ado_lit(*args)
picosat_add_ado_lit = _picosat.picosat_add_ado_lit

def picosat_sat(*args):
  return _picosat.picosat_sat(*args)
picosat_sat = _picosat.picosat_sat

def picosat_set_propagation_limit(*args):
  return _picosat.picosat_set_propagation_limit(*args)
picosat_set_propagation_limit = _picosat.picosat_set_propagation_limit

def picosat_res(*args):
  return _picosat.picosat_res(*args)
picosat_res = _picosat.picosat_res

def picosat_deref(*args):
  return _picosat.picosat_deref(*args)
picosat_deref = _picosat.picosat_deref

def picosat_deref_toplevel(*args):
  return _picosat.picosat_deref_toplevel(*args)
picosat_deref_toplevel = _picosat.picosat_deref_toplevel

def picosat_deref_partial(*args):
  return _picosat.picosat_deref_partial(*args)
picosat_deref_partial = _picosat.picosat_deref_partial

def picosat_inconsistent(*args):
  return _picosat.picosat_inconsistent(*args)
picosat_inconsistent = _picosat.picosat_inconsistent

def picosat_failed_assumption(*args):
  return _picosat.picosat_failed_assumption(*args)
picosat_failed_assumption = _picosat.picosat_failed_assumption

def picosat_failed_assumptions(*args):
  return _picosat.picosat_failed_assumptions(*args)
picosat_failed_assumptions = _picosat.picosat_failed_assumptions

def picosat_mus_assumptions(*args):
  return _picosat.picosat_mus_assumptions(*args)
picosat_mus_assumptions = _picosat.picosat_mus_assumptions

def picosat_maximal_satisfiable_subset_of_assumptions(*args):
  return _picosat.picosat_maximal_satisfiable_subset_of_assumptions(*args)
picosat_maximal_satisfiable_subset_of_assumptions = _picosat.picosat_maximal_satisfiable_subset_of_assumptions

def picosat_next_maximal_satisfiable_subset_of_assumptions(*args):
  return _picosat.picosat_next_maximal_satisfiable_subset_of_assumptions(*args)
picosat_next_maximal_satisfiable_subset_of_assumptions = _picosat.picosat_next_maximal_satisfiable_subset_of_assumptions

def picosat_next_minimal_correcting_subset_of_assumptions(*args):
  return _picosat.picosat_next_minimal_correcting_subset_of_assumptions(*args)
picosat_next_minimal_correcting_subset_of_assumptions = _picosat.picosat_next_minimal_correcting_subset_of_assumptions

def picosat_humus(*args):
  return _picosat.picosat_humus(*args)
picosat_humus = _picosat.picosat_humus

def picosat_changed(*args):
  return _picosat.picosat_changed(*args)
picosat_changed = _picosat.picosat_changed

def picosat_coreclause(*args):
  return _picosat.picosat_coreclause(*args)
picosat_coreclause = _picosat.picosat_coreclause

def picosat_corelit(*args):
  return _picosat.picosat_corelit(*args)
picosat_corelit = _picosat.picosat_corelit

def picosat_write_clausal_core(*args):
  return _picosat.picosat_write_clausal_core(*args)
picosat_write_clausal_core = _picosat.picosat_write_clausal_core

def picosat_write_compact_trace(*args):
  return _picosat.picosat_write_compact_trace(*args)
picosat_write_compact_trace = _picosat.picosat_write_compact_trace

def picosat_write_extended_trace(*args):
  return _picosat.picosat_write_extended_trace(*args)
picosat_write_extended_trace = _picosat.picosat_write_extended_trace

def picosat_write_rup_trace(*args):
  return _picosat.picosat_write_rup_trace(*args)
picosat_write_rup_trace = _picosat.picosat_write_rup_trace

def picosat_usedlit(*args):
  return _picosat.picosat_usedlit(*args)
picosat_usedlit = _picosat.picosat_usedlit

def picosat_set_output_fd(*args):
  return _picosat.picosat_set_output_fd(*args)
picosat_set_output_fd = _picosat.picosat_set_output_fd

def picosat_flushout(*args):
  return _picosat.picosat_flushout(*args)
picosat_flushout = _picosat.picosat_flushout
## EXTRA_PYTHON_CODE_TAG
def picosat_set_output(picosat, fileout):
    picosat_set_output_fd(picosat, fileout.fileno())


# This file is compatible with both classic and new-style classes.


