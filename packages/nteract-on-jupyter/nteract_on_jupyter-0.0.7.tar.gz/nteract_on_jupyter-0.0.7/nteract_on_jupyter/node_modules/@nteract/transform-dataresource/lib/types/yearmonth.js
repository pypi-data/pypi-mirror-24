"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isString2 = require("lodash/isString");

var _isString3 = _interopRequireDefault(_isString2);

var _isArray2 = require("lodash/isArray");

var _isArray3 = _interopRequireDefault(_isArray2);

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.castYearmonth = castYearmonth;

var _config = require("../config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Module API

function castYearmonth(format, value) {
  if ((0, _isArray3.default)(value)) {
    if (value.length !== 2) {
      return _config.ERROR;
    }
  } else if ((0, _isString3.default)(value)) {
    try {
      var _value$split = value.split("-"),
          _value$split2 = _slicedToArray(_value$split, 2),
          year = _value$split2[0],
          month = _value$split2[1];

      year = parseInt(year, 10);
      month = parseInt(month, 10);
      if (!year || !month) {
        return _config.ERROR;
      }
      if (month < 1 || month > 12) {
        return _config.ERROR;
      }
      value = [year, month];
    } catch (error) {
      return _config.ERROR;
    }
  } else {
    return _config.ERROR;
  }
  return value;
}