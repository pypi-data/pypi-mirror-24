
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftEQEQUALSNEGTLTLEGELIKEleftPLUSMINUSleftTIMESDIVIDEIDIVIDEMODrightUMINUSLPAREN RPAREN LBRACKET RBRACKET DOT PLUS MINUS TIMES DIVIDE IDIVIDE MOD LT GT GE GE2 LE LE2 EQ NE NE2 NE3 COMMA SEMI EQUALS COLON DOLLAR ID LARROW STRING_LITERAL INTEGER_LITERAL FLOAT_LITERAL BLOB_LITERAL LBRACE RBRACE WHILE DO DEF APPLY CASE WHEN THEN ELSE END CONST LOAD DUMP CSV SCHEMA OPP TIPSY UDA TRUE FALSE HASH BROADCAST ROUND_ROBIN UNTIL CONVERGENCE SYNC ASYNC ALTERNATE PULL_IDB PULL_EDB BUILD_EDB INT STRING FLOAT BOOLEAN SELECT AS EMIT FROM WHERE AND OR NOT EMPTY WORKER_ID SCAN COUNTALL COUNT STORE DIFF CROSS JOIN UNION UNIONALL INTERSECT DISTINCT LIMIT SINK SAMPLESCAN LIKEtranslation_unit_list : translation_unit_list translation_unit\n                                 | translation_unittranslation_unit : statement\n                            | constant\n                            | udf\n                            | apply\n                            | uda\n                            | decomposable_udaunreserved_id : IDunreserved_id_list : unreserved_id_list COMMA unreserved_id\n                              | unreserved_idudf : DEF unreserved_id LPAREN optional_arg_list RPAREN COLON sexpr SEMIudf : DEF unreserved_id LPAREN optional_arg_list RPAREN COLON table_literal SEMIconstant : CONST unreserved_id COLON sexpr SEMIoptional_arg_list : function_arg_list\n                             | emptyrecursion_mode : SYNC\n                          | ASYNC\n                          | emptypull_order_policy : ALTERNATE\n                             | PULL_IDB\n                             | PULL_EDB\n                             | BUILD_EDB\n                             | emptyfunction_arg_list : function_arg_list COMMA unreserved_id\n                             | unreserved_idstatefunc_emit_list : LBRACKET sexpr_list RBRACKET SEMI\n                               | sexpr SEMI\n                               | emptydecomposable_uda : UDA TIMES unreserved_id LBRACE unreserved_id COMMA unreserved_id RBRACE SEMIuda : UDA unreserved_id LPAREN optional_arg_list RPAREN LBRACE         table_literal SEMI LBRACKET sexpr_list RBRACKET SEMI statefunc_emit_list RBRACE SEMIapply : APPLY unreserved_id LPAREN optional_arg_list RPAREN LBRACE         table_literal SEMI LBRACKET sexpr_list RBRACKET SEMI statefunc_emit_list RBRACE SEMIstatement : unreserved_id EQUALS rvalue SEMIidbassign : unreserved_id EQUALS LBRACKET emit_arg_list             RBRACKET LARROW rvalue SEMIstatement : SEMIrvalue : expression\n                  | select_from_whereidbassign_list : idbassign_list idbassign\n                          | idbassignstatement_list : statement_list statement\n                          | statementstatement : DO statement_list WHILE expression SEMIstatement : DO idbassign_list UNTIL CONVERGENCE recursion_mode pull_order_policy SEMIstatement : STORE LPAREN unreserved_id COMMA relation_key optional_part_info RPAREN SEMIstatement : SINK LPAREN unreserved_id RPAREN SEMIstatement : DUMP LPAREN unreserved_id RPAREN SEMIoptional_part_info : COMMA LBRACKET column_ref_list RBRACKET\n                              | COMMA HASH LPAREN column_ref_list RPAREN\n                              | COMMA BROADCAST LPAREN RPAREN\n                              | COMMA ROUND_ROBIN LPAREN RPAREN\n                              | emptyexpression : unreserved_idsexpr_list : sexpr_list COMMA sexpr\n                      | sexprexpression : table_literaltable_literal : LBRACKET emit_arg_list RBRACKETexpression : EMPTY LPAREN column_def_list RPARENexpression : SCAN LPAREN relation_key RPARENexpression : SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL RPAREN\n                      | SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL MOD RPAREN\n                      | SAMPLESCAN LPAREN relation_key COMMA FLOAT_LITERAL MOD RPAREN\n                      | SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL COMMA string_arg RPAREN\n                      | SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL MOD COMMA string_arg RPAREN\n                      | SAMPLESCAN LPAREN relation_key COMMA FLOAT_LITERAL MOD COMMA string_arg RPARENexpression : LOAD LPAREN STRING_LITERAL COMMA file_parser_fun RPARENrelation_key : string_arg\n                        | string_arg COLON string_arg\n                        | string_arg COLON string_arg COLON string_argcolumn_def_list : column_def_list COMMA column_def\n                           | column_defcolumn_def : unreserved_id COLON type_nameschema_fun : SCHEMA LPAREN column_def_list RPARENfile_parser_fun : CSV LPAREN    schema_fun COMMA option_list RPAREN\n | CSV LPAREN schema_fun RPAREN\n | OPP LPAREN RPAREN\n | TIPSY LPAREN implicit_tipsy_schema empty option_list RPAREN\n | TIPSY LPAREN implicit_tipsy_schema RPARENimplicit_tipsy_schema : emptyoption_list : option_list COMMA option\n                           | optionoption : unreserved_id EQUALS literal_argliteral_arg : STRING_LITERAL\n                       | INTEGER_LITERAL\n                       | FLOAT_LITERAL\n                       | BLOB_LITERAL\n                       | TRUE\n                       | FALSEtype_name : STRING\n                     | INT\n                     | BOOLEAN\n                     | FLOATstring_arg : unreserved_id\n                      | STRING_LITERALexpression : LBRACKET FROM from_arg_list opt_where_clause         EMIT emit_arg_list RBRACKETfrom_arg_list : from_arg_list COMMA from_arg\n                         | from_argfrom_arg : expression optional_as unreserved_id\n                    | unreserved_idoptional_as : AS\n                       | emptyopt_where_clause : WHERE sexpr\n                            | emptyemit_arg_list : emit_arg_list COMMA emit_arg\n                         | emit_argemit_arg : sexpr AS LBRACKET unreserved_id_list RBRACKET\n                    | sexpr AS unreserved_id\n                    | sexpremit_arg : unreserved_id DOT TIMESemit_arg : TIMESexpression : LPAREN select_from_where RPARENselect_from_where : SELECT opt_distinct emit_arg_list FROM from_arg_list opt_where_clause opt_limitopt_distinct : DISTINCT\n                        | emptyopt_limit : LIMIT INTEGER_LITERAL\n                     | emptyexpression : LIMIT LPAREN expression COMMA INTEGER_LITERAL RPARENexpression : DISTINCT LPAREN expression RPARENexpression : COUNTALL LPAREN expression RPARENexpression : setop LPAREN expression COMMA expression RPARENexpression : UNIONALL LPAREN expression_list RPARENexpression_list : expression COMMA expression_list\n                           | expressionsetop : INTERSECT\n                 | DIFF\n                 | UNIONexpression : expression PLUS expressionexpression : CROSS LPAREN expression COMMA expression RPARENexpression : JOIN LPAREN join_argument COMMA join_argument RPARENjoin_argument : expression COMMA LPAREN column_ref_list RPARENjoin_argument : expression COMMA column_refcolumn_ref_list : column_ref_list COMMA column_ref\n                           | column_refcolumn_ref : unreserved_idcolumn_ref : DOLLAR INTEGER_LITERALsexpr : INTEGER_LITERALsexpr : STRING_LITERALsexpr : BLOB_LITERALsexpr : FLOAT_LITERALsexpr : TRUE\n                 | FALSEsexpr : unreserved_idsexpr : DOLLAR INTEGER_LITERALsexpr : unreserved_id DOT column_refsexpr : LPAREN sexpr RPARENsexpr : MINUS sexpr %prec UMINUSsexpr : WORKER_ID LPAREN RPARENsexpr : sexpr PLUS sexpr\n                   | sexpr MINUS sexpr\n                   | sexpr TIMES sexpr\n                   | sexpr DIVIDE sexpr\n                   | sexpr IDIVIDE sexpr\n                   | sexpr MOD sexpr\n                   | sexpr GT sexpr\n                   | sexpr LT sexpr\n                   | sexpr GE sexpr\n                   | sexpr GE2 sexpr\n                   | sexpr LE sexpr\n                   | sexpr LE2 sexpr\n                   | sexpr NE sexpr\n                   | sexpr NE2 sexpr\n                   | sexpr NE3 sexpr\n                   | sexpr EQ sexpr\n                   | sexpr EQUALS sexpr\n                   | sexpr AND sexpr\n                   | sexpr OR sexpr\n                   | sexpr LIKE sexprsexpr : NOT sexprsexpr : ID LPAREN function_param_list RPARENsexpr : ID LPAREN RPARENfunction_param_list : function_param_list COMMA sexpr\n                               | sexprsexpr : COUNTALL LPAREN RPARENsexpr : COUNT LPAREN count_arg RPARENsexpr : type_name LPAREN sexpr RPARENcount_arg : TIMES\n                     | sexprsexpr : TIMES unreserved_id optional_column_refwhen_expr : WHEN sexpr THEN sexprwhen_expr_list : when_expr_list when_expr\n                          | when_expr\n        sexpr : CASE when_expr_list ELSE sexpr ENDoptional_column_ref : DOT column_ref\n                               | emptyempty :'
    
_lr_action_items = {'LBRACKET':([32,38,39,71,107,112,114,116,120,122,126,127,128,186,257,259,260,265,269,282,285,289,290,291,295,344,369,422,428,],[51,73,51,131,51,51,51,51,51,51,51,51,51,268,306,306,310,51,51,51,51,51,51,306,51,372,395,431,431,]),'INTEGER_LITERAL':([42,51,56,73,78,86,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,255,257,270,277,284,297,302,306,319,372,382,395,411,422,423,428,431,],[91,91,-184,91,91,167,91,91,-112,-113,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,303,91,91,321,326,91,91,91,91,91,401,91,91,91,438,91,91,]),'LIMIT':([15,32,38,39,77,82,83,90,91,92,93,96,107,112,114,116,120,122,126,127,128,160,167,168,173,188,189,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,265,269,271,282,285,289,290,295,298,299,300,301,303,317,318,320,324,339,357,],[-9,52,52,52,-139,-138,-137,-9,-135,-140,-136,-141,52,52,52,52,52,52,52,52,52,-145,-142,-184,-167,-96,-98,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,52,52,-102,52,52,52,52,52,-174,-173,-182,-168,-134,-95,-101,-97,-184,-181,382,]),'TRUE':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,423,428,431,],[77,77,-184,77,77,77,77,-112,-113,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,437,77,77,]),'MINUS':([15,42,51,56,73,76,77,78,82,83,89,90,91,92,93,96,98,109,113,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,166,167,168,170,171,173,185,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,246,248,249,250,251,253,254,256,257,270,296,297,298,299,300,301,302,303,305,306,318,319,339,340,341,372,395,397,411,421,422,428,430,431,],[-9,78,78,-184,78,140,-139,78,-138,-137,78,-9,-135,-140,-136,-141,78,140,-141,-112,-113,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-145,78,78,78,-142,-184,140,78,140,78,140,-148,-151,140,140,140,-147,140,140,-150,140,-149,140,140,140,140,140,140,140,-152,78,140,140,-172,140,-177,-183,-146,-144,140,-169,-143,-133,78,78,140,78,-174,-173,-182,-168,78,-134,140,78,140,78,-181,140,140,78,78,140,78,140,78,78,140,78,]),'RPAREN':([15,41,43,44,45,48,67,69,77,79,82,83,90,91,92,93,94,95,96,97,100,101,102,103,104,125,129,160,165,167,168,169,170,171,173,178,179,180,181,182,184,188,189,194,195,196,198,200,201,203,206,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,243,244,245,246,248,249,250,251,252,253,254,256,258,261,262,264,271,279,281,283,286,298,299,300,301,303,313,314,317,318,320,321,322,323,324,326,327,329,332,334,335,339,341,345,347,349,352,356,357,358,359,361,362,363,364,366,367,368,373,374,375,377,378,380,381,383,385,386,388,389,390,391,392,394,399,400,401,402,403,404,405,407,413,414,415,417,418,419,424,426,427,433,434,435,436,437,438,439,440,],[-9,75,99,-184,-184,-55,-52,-184,-139,-88,-138,-137,-9,-135,-140,-136,-89,-91,-141,-90,175,-26,-15,-16,177,203,208,-145,242,-142,-184,249,250,253,-167,-184,-93,-92,-66,264,-56,-96,-98,-70,279,281,283,-122,286,-110,-126,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,298,-172,-176,299,-175,-177,-183,-146,-144,-171,301,-169,-143,-133,-25,-51,312,-58,-102,-57,-117,-118,-120,-174,-173,-182,-168,-134,-67,352,-95,-101,-97,356,-71,-69,-184,359,-121,363,-130,367,368,-181,-170,373,-132,377,-127,-116,-184,385,-59,388,-184,-65,391,394,-128,-119,-49,399,-47,-50,-68,-94,-111,-115,-61,403,-60,405,-78,-75,407,-129,-48,-131,-114,413,-62,414,-77,-74,-64,-63,-80,424,426,427,-76,-73,-72,-87,-82,-84,-85,-86,-83,-81,-79,]),'BROADCAST':([260,],[308,]),'PLUS':([15,48,66,67,74,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,183,184,189,190,192,196,198,200,203,204,206,207,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,264,279,281,283,286,296,298,299,300,301,303,305,314,318,335,339,340,341,352,356,359,363,367,368,380,385,388,397,403,413,414,421,430,],[-9,-55,127,-52,127,146,-139,-138,-137,-9,-135,-140,-136,-141,146,-141,-145,-142,-184,146,146,127,-56,-52,127,127,127,127,127,-110,127,-126,127,-56,146,-148,-151,146,146,146,-147,146,146,-150,146,-149,146,146,146,146,146,146,146,-152,146,146,-172,146,-177,-183,-146,-144,146,-169,-143,-133,-58,-57,-117,-118,-120,146,-174,-173,-182,-168,-134,146,127,146,127,-181,146,146,-127,-116,-59,-65,-128,-119,-94,-61,-60,146,-62,-64,-63,146,146,]),'PULL_EDB':([72,132,133,134,135,],[-184,214,-17,-18,-19,]),'GT':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,148,-139,-138,-137,-9,-135,-140,-136,-141,148,-141,-145,-142,-184,148,148,148,-148,-151,-157,-159,-154,-147,148,-153,-150,-163,-149,-155,-162,148,-166,148,148,148,-152,148,148,-172,148,-177,-183,-146,-144,148,-169,-143,-133,148,-174,-173,-182,-168,-134,148,148,-181,148,148,148,148,148,]),'RBRACE':([15,337,422,428,429,432,441,443,449,],[-9,370,-184,-184,442,-29,445,-28,-27,]),'GE':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,152,-139,-138,-137,-9,-135,-140,-136,-141,152,-141,-145,-142,-184,152,152,152,-148,-151,-157,-159,-154,-147,152,-153,-150,-163,-149,-155,-162,152,-166,152,152,152,-152,152,152,-172,152,-177,-183,-146,-144,152,-169,-143,-133,152,-174,-173,-182,-168,-134,152,152,-181,152,152,152,152,152,]),'JOIN':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'WHERE':([15,187,188,189,317,320,324,],[-9,270,-96,-98,-95,-97,270,]),'PULL_IDB':([72,132,133,134,135,],[-184,213,-17,-18,-19,]),'WHILE':([8,21,24,40,124,137,138,174,294,350,],[-35,-41,39,-40,-33,-42,-46,-45,-43,-44,]),'OR':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,156,-139,-138,-137,-9,-135,-140,-136,-141,156,-141,-145,-142,-184,156,-167,156,-148,-151,-157,-159,-154,-147,156,-153,-150,-163,-149,-155,-162,-164,-166,-165,156,156,-152,156,156,-172,156,-177,-183,-146,-144,156,-169,-143,-133,156,-174,-173,-182,-168,-134,156,156,-181,156,156,156,156,156,]),'LOAD':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'SYNC':([72,],[133,]),'ROUND_ROBIN':([260,],[311,]),'DIFF':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'DEF':([0,5,6,8,9,10,11,12,13,19,29,124,137,138,143,174,294,342,343,350,396,446,448,],[7,-6,-4,-35,7,-3,-2,-7,-5,-8,-1,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'DISTINCT':([32,38,39,56,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[55,55,55,117,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LARROW':([217,293,],[295,295,]),'COLON':([15,26,175,179,180,181,193,313,],[-9,42,257,-93,-92,263,278,351,]),'BLOB_LITERAL':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,423,428,431,],[83,83,-184,83,83,83,83,-112,-113,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,436,83,83,]),'CONVERGENCE':([37,],[72,]),'$end':([5,6,8,9,10,11,12,13,19,29,124,137,138,143,174,294,342,343,350,396,446,448,],[-6,-4,-35,0,-3,-2,-7,-5,-8,-1,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'COUNT':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,428,431,],[85,85,-184,85,85,85,85,-112,-113,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'GE2':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,147,-139,-138,-137,-9,-135,-140,-136,-141,147,-141,-145,-142,-184,147,-167,147,-148,-151,-157,-159,-154,-147,147,-153,-150,-163,-149,-155,-162,-164,-166,-165,147,147,-152,147,147,-172,147,-177,-183,-146,-144,147,-169,-143,-133,147,-174,-173,-182,-168,-134,147,147,-181,147,147,147,147,147,]),'END':([15,77,82,83,90,91,92,93,96,160,167,168,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,296,298,299,300,301,303,339,],[-9,-139,-138,-137,-9,-135,-140,-136,-141,-145,-142,-184,-167,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,339,-174,-173,-182,-168,-134,-181,]),'DIVIDE':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,149,-139,-138,-137,-9,-135,-140,-136,-141,149,-141,-145,-142,-184,149,149,149,149,-151,149,149,149,149,149,149,-150,149,-149,149,149,149,149,149,149,149,-152,149,149,-172,149,-177,-183,-146,-144,149,-169,-143,-133,149,-174,-173,-182,-168,-134,149,149,-181,149,149,149,149,149,]),'UNION':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ALTERNATE':([72,132,133,134,135,],[-184,212,-17,-18,-19,]),'EQUALS':([15,17,23,36,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,416,421,430,],[-9,32,38,71,150,-139,-138,-137,-9,-135,-140,-136,-141,150,-141,-145,-142,-184,150,150,150,-148,-151,-157,-159,-154,-147,150,-153,-150,-163,-149,-155,-162,150,-166,150,150,150,-152,150,150,-172,150,-177,-183,-146,-144,150,-169,-143,-133,150,-174,-173,-182,-168,-134,150,150,-181,150,150,150,423,150,150,]),'ELSE':([15,77,82,83,90,91,92,93,96,160,161,162,167,168,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,242,246,248,249,250,253,254,256,298,299,300,301,303,339,340,],[-9,-139,-138,-137,-9,-135,-140,-136,-141,-145,-180,239,-142,-184,-167,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-179,-172,-177,-183,-146,-144,-169,-143,-133,-174,-173,-182,-168,-134,-181,-178,]),'WORKER_ID':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,428,431,],[88,88,-184,88,88,88,88,-112,-113,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'CSV':([287,],[331,]),'EQ':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,153,-139,-138,-137,-9,-135,-140,-136,-141,153,-141,-145,-142,-184,153,153,153,-148,-151,-157,-159,-154,-147,153,-153,-150,-163,-149,-155,-162,153,-166,153,153,153,-152,153,153,-172,153,-177,-183,-146,-144,153,-169,-143,-133,153,-174,-173,-182,-168,-134,153,153,-181,153,153,153,153,153,]),'UNTIL':([20,22,35,371,],[37,-39,-38,-34,]),'AND':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,154,-139,-138,-137,-9,-135,-140,-136,-141,154,-141,-145,-142,-184,154,-167,154,-148,-151,-157,-159,-154,-147,154,-153,-150,-163,-149,-155,-162,-164,-166,154,154,154,-152,154,154,-172,154,-177,-183,-146,-144,154,-169,-143,-133,154,-174,-173,-182,-168,-134,154,154,-181,154,154,154,154,154,]),'LBRACE':([15,70,177,208,],[-9,130,259,291,]),'OPP':([287,],[330,]),'TIPSY':([287,],[328,]),'INT':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,278,297,302,306,319,372,395,411,422,428,431,],[94,94,-184,94,94,94,94,-112,-113,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'NOT':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,428,431,],[98,98,-184,98,98,98,98,-112,-113,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'MOD':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,325,326,339,340,341,397,421,430,],[-9,159,-139,-138,-137,-9,-135,-140,-136,-141,159,-141,-145,-142,-184,159,159,159,159,-151,159,159,159,159,159,159,-150,159,-149,159,159,159,159,159,159,159,-152,159,159,-172,159,-177,-183,-146,-144,159,-169,-143,-133,159,-174,-173,-182,-168,-134,159,159,358,361,-181,159,159,159,159,159,]),'THEN':([15,77,82,83,90,91,92,93,96,160,167,168,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,242,246,248,249,250,253,254,256,298,299,300,301,303,339,],[-9,-139,-138,-137,-9,-135,-140,-136,-141,-145,-142,-184,-167,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,297,-172,-177,-183,-146,-144,-169,-143,-133,-174,-173,-182,-168,-134,-181,]),'LPAREN':([2,4,15,16,28,30,32,33,38,39,42,47,49,50,51,52,53,54,55,56,57,58,59,60,61,65,68,73,78,79,81,84,85,88,89,90,94,95,97,98,107,112,114,116,117,118,119,120,122,126,127,128,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,265,269,270,282,285,288,289,290,295,297,302,306,308,309,311,319,328,330,331,372,393,395,411,422,428,431,],[25,27,-9,31,44,45,64,69,64,64,89,-123,106,107,89,114,-124,115,116,-184,120,121,122,123,-125,126,128,89,89,-88,164,165,166,169,89,171,-89,-91,-90,89,64,64,64,64,-112,-113,89,64,64,64,64,64,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,64,64,89,64,64,333,64,64,64,89,89,89,345,346,349,89,362,364,365,89,409,89,89,89,89,89,]),'DUMP':([0,1,5,6,8,9,10,11,12,13,19,21,24,29,40,124,137,138,143,174,294,342,343,350,396,446,448,],[2,2,-6,-4,-35,2,-3,-2,-7,-5,-8,-41,2,-1,-40,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'CROSS':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'LE2':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,139,-139,-138,-137,-9,-135,-140,-136,-141,139,-141,-145,-142,-184,139,-167,139,-148,-151,-157,-159,-154,-147,139,-153,-150,-163,-149,-155,-162,-164,-166,-165,139,139,-152,139,139,-172,139,-177,-183,-146,-144,139,-169,-143,-133,139,-174,-173,-182,-168,-134,139,139,-181,139,139,139,139,139,]),'DOT':([15,90,96,113,168,],[-9,-9,172,191,247,]),'CASE':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,428,431,],[80,80,-184,80,80,80,80,-112,-113,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'NE':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,144,-139,-138,-137,-9,-135,-140,-136,-141,144,-141,-145,-142,-184,144,144,144,-148,-151,-157,-159,-154,-147,144,-153,-150,-163,-149,-155,-162,144,-166,144,144,144,-152,144,144,-172,144,-177,-183,-146,-144,144,-169,-143,-133,144,-174,-173,-182,-168,-134,144,144,-181,144,144,144,144,144,]),'FLOAT_LITERAL':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,284,297,302,306,319,372,395,411,422,423,428,431,],[82,82,-184,82,82,82,82,-112,-113,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,325,82,82,82,82,82,82,82,82,435,82,82,]),'COUNTALL':([32,38,39,42,51,56,73,78,89,98,107,112,114,116,117,118,119,120,122,126,127,128,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,265,269,270,282,285,289,290,295,297,302,306,319,372,395,411,422,428,431,],[57,57,57,84,84,-184,84,84,84,84,57,57,57,57,-112,-113,84,57,57,57,57,57,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,57,57,84,57,57,57,57,57,84,84,84,84,84,84,84,84,84,84,]),'APPLY':([0,5,6,8,9,10,11,12,13,19,29,124,137,138,143,174,294,342,343,350,396,446,448,],[14,-6,-4,-35,14,-3,-2,-7,-5,-8,-1,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'EMIT':([15,77,82,83,90,91,92,93,96,160,167,168,173,187,188,189,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,271,272,298,299,300,301,303,317,318,320,339,],[-9,-139,-138,-137,-9,-135,-140,-136,-141,-145,-142,-184,-167,-184,-96,-98,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,-102,319,-174,-173,-182,-168,-134,-95,-101,-97,-181,]),'SCHEMA':([365,],[393,]),'HASH':([260,],[309,]),'SELECT':([32,38,64,295,],[56,56,56,56,]),'ASYNC':([72,],[134,]),'FALSE':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,423,428,431,],[92,92,-184,92,92,92,92,-112,-113,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,433,92,92,]),'LIKE':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,155,-139,-138,-137,-9,-135,-140,-136,-141,155,-141,-145,-142,-184,155,155,155,-148,-151,-157,-159,-154,-147,155,-153,-150,-163,-149,-155,-162,155,-166,155,155,155,-152,155,155,-172,155,-177,-183,-146,-144,155,-169,-143,-133,155,-174,-173,-182,-168,-134,155,155,-181,155,155,155,155,155,]),'BOOLEAN':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,278,297,302,306,319,372,395,411,422,428,431,],[97,97,-184,97,97,97,97,-112,-113,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'NE2':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,157,-139,-138,-137,-9,-135,-140,-136,-141,157,-141,-145,-142,-184,157,-167,157,-148,-151,-157,-159,-154,-147,157,-153,-150,-163,-149,-155,-162,-164,-166,-165,157,157,-152,157,157,-172,157,-177,-183,-146,-144,157,-169,-143,-133,157,-174,-173,-182,-168,-134,157,157,-181,157,157,157,157,157,]),'NE3':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,158,-139,-138,-137,-9,-135,-140,-136,-141,158,-141,-145,-142,-184,158,-167,158,-148,-151,-157,-159,-154,-147,158,-153,-150,-163,-149,-155,-162,-164,-166,-165,158,158,-152,158,158,-172,158,-177,-183,-146,-144,158,-169,-143,-133,158,-174,-173,-182,-168,-134,158,158,-181,158,158,158,158,158,]),'DO':([0,1,5,6,8,9,10,11,12,13,19,21,24,29,40,124,137,138,143,174,294,342,343,350,396,446,448,],[1,1,-6,-4,-35,1,-3,-2,-7,-5,-8,-41,1,-1,-40,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'CONST':([0,5,6,8,9,10,11,12,13,19,29,124,137,138,143,174,294,342,343,350,396,446,448,],[3,-6,-4,-35,3,-3,-2,-7,-5,-8,-1,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'SCAN':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'SINK':([0,1,5,6,8,9,10,11,12,13,19,21,24,29,40,124,137,138,143,174,294,342,343,350,396,446,448,],[4,4,-6,-4,-35,4,-3,-2,-7,-5,-8,-41,4,-1,-40,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'IDIVIDE':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,141,-139,-138,-137,-9,-135,-140,-136,-141,141,-141,-145,-142,-184,141,141,141,141,-151,141,141,141,141,141,141,-150,141,-149,141,141,141,141,141,141,141,-152,141,141,-172,141,-177,-183,-146,-144,141,-169,-143,-133,141,-174,-173,-182,-168,-134,141,141,-181,141,141,141,141,141,]),'LE':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,142,-139,-138,-137,-9,-135,-140,-136,-141,142,-141,-145,-142,-184,142,142,142,-148,-151,-157,-159,-154,-147,142,-153,-150,-163,-149,-155,-162,142,-166,142,142,142,-152,142,142,-172,142,-177,-183,-146,-144,142,-169,-143,-133,142,-174,-173,-182,-168,-134,142,142,-181,142,142,142,142,142,]),'SEMI':([0,1,5,6,8,9,10,11,12,13,15,19,21,24,29,40,48,62,63,66,67,72,74,75,76,77,82,83,90,91,92,93,96,99,124,132,133,134,135,137,138,143,160,167,168,173,174,184,188,189,203,206,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,264,271,279,281,283,286,294,298,299,300,301,303,304,305,307,312,317,318,320,324,336,338,339,342,343,350,352,356,357,359,363,367,368,370,380,381,383,385,388,396,401,403,412,413,414,420,430,442,445,446,447,448,],[8,8,-6,-4,-35,8,-3,-2,-7,-5,-9,-8,-41,8,-1,-40,-55,124,-37,-36,-52,-184,137,138,143,-139,-138,-137,-9,-135,-140,-136,-141,174,-33,-184,-17,-18,-19,-42,-46,-14,-145,-142,-184,-167,-45,-56,-96,-98,-110,-126,294,-20,-21,-22,-24,-23,-56,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,-58,-102,-57,-117,-118,-120,-43,-174,-173,-182,-168,-134,342,343,344,350,-95,-101,-97,-184,369,371,-181,-13,-12,-44,-127,-116,-184,-59,-65,-128,-119,396,-94,-111,-115,-61,-60,-30,-114,-62,422,-64,-63,428,443,446,448,-32,449,-31,]),'WHEN':([15,77,80,82,83,90,91,92,93,96,160,161,162,167,168,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,242,246,248,249,250,253,254,256,298,299,300,301,303,339,340,],[-9,-139,163,-138,-137,-9,-135,-140,-136,-141,-145,-180,163,-142,-184,-167,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-179,-172,-177,-183,-146,-144,-169,-143,-133,-174,-173,-182,-168,-134,-181,-178,]),'LT':([15,76,77,82,83,90,91,92,93,96,109,113,160,167,168,170,173,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,246,248,249,250,251,253,254,256,296,298,299,300,301,303,305,318,339,340,341,397,421,430,],[-9,145,-139,-138,-137,-9,-135,-140,-136,-141,145,-141,-145,-142,-184,145,145,145,-148,-151,-157,-159,-154,-147,145,-153,-150,-163,-149,-155,-162,145,-166,145,145,145,-152,145,145,-172,145,-177,-183,-146,-144,145,-169,-143,-133,145,-174,-173,-182,-168,-134,145,145,-181,145,145,145,145,145,]),'COMMA':([15,46,48,67,77,79,82,83,90,91,92,93,94,95,96,97,101,102,108,109,110,111,113,136,160,167,168,173,178,179,180,181,183,184,187,188,189,192,194,195,197,199,200,202,203,204,205,206,207,209,210,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,251,252,253,254,256,258,264,266,267,276,279,281,283,286,298,299,300,301,303,313,315,316,317,320,322,323,324,326,332,339,341,347,348,352,354,355,356,358,359,361,363,366,367,368,374,378,379,380,385,388,392,394,397,398,400,403,410,413,414,415,417,418,419,421,427,433,434,435,436,437,438,439,440,444,],[-9,105,-55,-52,-139,-88,-138,-137,-9,-135,-140,-136,-89,-91,-141,-90,-26,176,185,-107,-104,-109,-141,185,-145,-142,-184,-167,260,-93,-92,-66,265,-56,269,-96,-98,277,-70,280,185,284,285,287,-110,288,289,-126,290,292,185,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-171,302,-169,-143,-133,-25,-58,-103,-106,-108,-57,-117,-118,-120,-174,-173,-182,-168,-134,-67,353,-11,-95,-97,-71,-69,269,360,-130,-181,-170,-132,376,-127,-105,185,-116,384,-59,387,-65,376,-128,-119,376,-68,-10,-94,-61,-60,408,-129,-54,411,-131,-62,411,-64,-63,-80,425,425,280,-53,-72,-87,-82,-84,-85,-86,-83,-81,-79,411,]),'EMPTY':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'SAMPLESCAN':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'UNIONALL':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'STRING':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,278,297,302,306,319,372,395,411,422,428,431,],[79,79,-184,79,79,79,79,-112,-113,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'DOLLAR':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,172,185,191,239,247,257,270,288,297,302,306,310,319,333,346,372,376,395,411,422,428,431,],[86,86,-184,86,86,86,86,-112,-113,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,255,86,255,86,255,86,86,255,86,86,86,255,86,255,255,86,255,86,86,86,86,86,]),'TIMES':([15,18,42,51,56,73,76,77,78,82,83,89,90,91,92,93,96,98,109,113,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,166,167,168,170,171,173,185,191,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,246,248,249,250,251,253,254,256,257,270,296,297,298,299,300,301,302,303,305,306,318,319,339,340,341,372,395,397,411,421,422,428,430,431,],[-9,34,87,111,-184,111,151,-139,87,-138,-137,87,-9,-135,-140,-136,-141,87,151,-141,-112,-113,111,111,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-145,87,87,245,-142,-184,151,87,151,111,276,151,151,-151,151,151,151,151,151,151,-150,151,-149,151,151,151,151,151,151,151,-152,87,151,151,-172,151,-177,-183,-146,-144,151,-169,-143,-133,87,87,151,87,-174,-173,-182,-168,87,-134,151,111,151,111,-181,151,151,87,87,151,87,151,87,87,151,87,]),'AS':([15,48,67,77,82,83,90,91,92,93,96,109,113,160,167,168,173,184,189,190,203,206,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,264,279,281,283,286,298,299,300,301,303,339,352,356,359,363,367,368,380,385,388,403,413,414,],[-9,-55,-52,-139,-138,-137,-9,-135,-140,-136,-141,186,-141,-145,-142,-184,-167,-56,-52,274,-110,-126,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,-58,-57,-117,-118,-120,-174,-173,-182,-168,-134,-181,-127,-116,-59,-65,-128,-119,-94,-61,-60,-62,-64,-63,]),'INTERSECT':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ID':([0,1,3,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,24,25,27,29,31,32,34,35,38,39,40,42,44,45,48,51,56,67,69,73,78,87,89,98,105,106,107,111,112,114,115,116,117,118,119,120,121,122,124,126,127,128,130,131,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,172,174,176,184,185,186,189,190,191,203,206,239,245,247,257,263,264,265,268,269,270,273,274,275,279,280,281,282,283,285,286,288,289,290,292,294,295,297,302,306,310,319,333,342,343,346,350,351,352,353,356,359,360,362,363,367,368,371,372,376,380,384,385,387,388,389,390,395,396,403,406,408,409,411,413,414,422,425,428,431,446,448,],[15,15,15,-6,-4,15,-35,15,-3,-2,-7,-5,15,-9,15,-8,15,-41,-39,15,15,15,-1,15,15,15,-38,15,15,-40,90,15,15,-55,90,-184,-52,15,90,90,15,90,90,15,15,15,15,15,15,15,15,-112,-113,90,15,15,15,-33,15,15,15,15,90,-42,-46,90,90,90,90,-14,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,15,-45,15,-56,90,15,-52,-184,15,-110,-126,90,15,15,90,15,-58,15,15,15,90,15,-99,-100,-57,15,-117,15,-118,15,-120,15,15,15,15,-43,15,90,90,90,15,90,15,-13,-12,15,-44,15,-127,15,-116,-59,15,-184,-65,-128,-119,-34,90,15,-94,15,-61,15,-60,-184,-78,90,-30,-62,15,15,15,90,-64,-63,90,15,90,90,-32,-31,]),'STORE':([0,1,5,6,8,9,10,11,12,13,19,21,24,29,40,124,137,138,143,174,294,342,343,350,396,446,448,],[16,16,-6,-4,-35,16,-3,-2,-7,-5,-8,-41,16,-1,-40,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'BUILD_EDB':([72,132,133,134,135,],[-184,216,-17,-18,-19,]),'FROM':([15,51,73,77,82,83,90,91,92,93,96,109,110,111,113,160,167,168,173,197,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,266,267,276,298,299,300,301,303,339,354,],[-9,112,112,-139,-138,-137,-9,-135,-140,-136,-141,-107,-104,-109,-141,-145,-142,-184,-167,282,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,-103,-106,-108,-174,-173,-182,-168,-134,-181,-105,]),'STRING_LITERAL':([42,51,56,73,78,89,98,105,106,117,118,119,121,123,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,263,270,297,302,306,319,351,360,372,384,387,395,411,422,423,428,431,],[93,93,-184,93,93,93,93,179,179,-112,-113,93,179,202,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,179,93,93,93,93,93,179,179,93,179,179,93,93,93,434,93,93,]),'FLOAT':([42,51,56,73,78,89,98,117,118,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,278,297,302,306,319,372,395,411,422,428,431,],[95,95,-184,95,95,95,95,-112,-113,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'UDA':([0,5,6,8,9,10,11,12,13,19,29,124,137,138,143,174,294,342,343,350,396,446,448,],[18,-6,-4,-35,18,-3,-2,-7,-5,-8,-1,-33,-42,-46,-14,-45,-43,-13,-12,-44,-30,-32,-31,]),'RBRACKET':([15,77,82,83,90,91,92,93,96,108,109,110,111,113,136,160,167,168,173,210,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,246,248,249,250,253,254,256,266,267,276,298,299,300,301,303,315,316,339,347,348,354,355,379,397,398,400,410,421,444,],[-9,-139,-138,-137,-9,-135,-140,-136,-141,184,-107,-104,-109,-141,217,-145,-142,-184,-167,293,-158,-148,-151,-157,-159,-154,-147,-156,-153,-150,-163,-149,-155,-162,-164,-166,-165,-160,-161,-152,-172,-177,-183,-146,-144,-169,-143,-133,-103,-106,-108,-174,-173,-182,-168,-134,354,-11,-181,-132,375,-105,380,-10,-54,412,-131,420,-53,447,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'recursion_mode':([72,],[132,]),'idbassign_list':([1,],[20,]),'constant':([0,9,],[6,6,]),'table_literal':([32,38,39,107,112,114,116,120,122,126,127,128,257,259,265,269,282,285,289,290,291,295,],[48,48,48,48,48,48,48,48,48,48,48,48,304,307,48,48,48,48,48,48,336,48,]),'emit_arg_list':([51,73,119,131,306,319,],[108,136,197,210,108,355,]),'statefunc_emit_list':([422,428,],[429,441,]),'opt_where_clause':([187,324,],[272,357,]),'sexpr':([42,51,73,78,89,98,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,297,302,306,319,372,395,411,422,428,431,],[76,109,109,160,170,173,109,109,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,243,251,109,296,305,318,340,341,109,109,397,397,421,430,430,397,]),'count_arg':([166,],[244,]),'column_def_list':([115,409,],[195,419,]),'apply':([0,9,],[5,5,]),'from_arg':([112,269,282,],[188,317,188,]),'from_arg_list':([112,282,],[187,324,]),'emit_arg':([51,73,119,131,185,306,319,],[110,110,110,110,266,110,110,]),'pull_order_policy':([132,],[211,]),'column_ref':([172,191,247,288,310,333,346,376,],[254,254,300,332,347,347,347,400,]),'translation_unit_list':([0,],[9,]),'type_name':([42,51,73,78,89,98,119,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,185,239,257,270,278,297,302,306,319,372,395,411,422,428,431,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,322,81,81,81,81,81,81,81,81,81,81,]),'column_def':([115,280,409,],[194,323,194,]),'statement':([0,1,9,24,],[10,21,10,40,]),'literal_arg':([423,],[439,]),'empty':([44,45,56,69,72,132,168,178,187,190,324,357,362,389,422,428,],[103,103,118,103,135,215,248,261,271,275,271,383,390,406,432,432,]),'schema_fun':([365,],[392,]),'optional_column_ref':([168,],[246,]),'optional_as':([190,],[273,]),'when_expr':([80,162,],[161,238,]),'relation_key':([105,106,121,],[178,182,199,]),'option':([406,408,425,],[415,415,440,]),'function_param_list':([171,],[252,]),'unreserved_id_list':([268,],[315,]),'implicit_tipsy_schema':([362,],[389,]),'rvalue':([32,38,295,],[62,62,338,]),'column_ref_list':([310,333,346,],[348,366,374,]),'optional_arg_list':([44,45,69,],[100,104,129,]),'function_arg_list':([44,45,69,],[102,102,102,]),'opt_limit':([357,],[381,]),'uda':([0,9,],[12,12,]),'udf':([0,9,],[13,13,]),'select_from_where':([32,38,64,295,],[63,63,125,63,]),'sexpr_list':([372,395,431,],[398,410,444,]),'optional_part_info':([178,],[262,]),'opt_distinct':([56,],[119,]),'idbassign':([1,20,],[22,35,]),'when_expr_list':([80,],[162,]),'string_arg':([105,106,121,263,351,360,384,387,],[181,181,181,313,378,386,402,404,]),'expression_list':([122,285,],[201,327,]),'unreserved_id':([0,1,3,7,9,14,18,20,24,25,27,31,32,34,38,39,42,44,45,51,69,73,78,87,89,98,105,106,107,111,112,114,115,116,119,120,121,122,126,127,128,130,131,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,166,171,172,176,185,186,191,239,245,247,257,263,265,268,269,270,273,280,282,285,288,289,290,292,295,297,302,306,310,319,333,346,351,353,360,372,376,384,387,395,406,408,409,411,422,425,428,431,],[17,23,26,28,17,30,33,36,17,41,43,46,67,70,67,67,96,101,101,113,101,113,96,168,96,96,180,180,67,168,189,67,193,67,113,67,180,67,67,67,67,209,113,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,256,258,113,267,256,96,168,256,96,180,67,316,189,96,320,193,189,67,256,67,67,337,67,96,96,113,256,113,256,256,180,379,180,96,256,180,180,96,416,416,193,96,96,416,96,96,]),'option_list':([406,408,],[417,418,]),'file_parser_fun':([287,],[329,]),'translation_unit':([0,9,],[11,29,]),'join_argument':([126,289,],[205,334,]),'setop':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'decomposable_uda':([0,9,],[19,19,]),'expression':([32,38,39,107,112,114,116,120,122,126,127,128,265,269,282,285,289,290,295,],[66,66,74,183,190,192,196,198,200,204,206,207,314,190,190,200,204,335,66,]),'statement_list':([1,],[24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_list","S'",1,None,None,None),
  ('translation_unit_list -> translation_unit_list translation_unit','translation_unit_list',2,'p_translation_unit_list','parser.py',167),
  ('translation_unit_list -> translation_unit','translation_unit_list',1,'p_translation_unit_list','parser.py',168),
  ('translation_unit -> statement','translation_unit',1,'p_translation_unit','parser.py',176),
  ('translation_unit -> constant','translation_unit',1,'p_translation_unit','parser.py',177),
  ('translation_unit -> udf','translation_unit',1,'p_translation_unit','parser.py',178),
  ('translation_unit -> apply','translation_unit',1,'p_translation_unit','parser.py',179),
  ('translation_unit -> uda','translation_unit',1,'p_translation_unit','parser.py',180),
  ('translation_unit -> decomposable_uda','translation_unit',1,'p_translation_unit','parser.py',181),
  ('unreserved_id -> ID','unreserved_id',1,'p_unreserved_id','parser.py',390),
  ('unreserved_id_list -> unreserved_id_list COMMA unreserved_id','unreserved_id_list',3,'p_unreserved_id_list','parser.py',396),
  ('unreserved_id_list -> unreserved_id','unreserved_id_list',1,'p_unreserved_id_list','parser.py',397),
  ('udf -> DEF unreserved_id LPAREN optional_arg_list RPAREN COLON sexpr SEMI','udf',8,'p_udf','parser.py',405),
  ('udf -> DEF unreserved_id LPAREN optional_arg_list RPAREN COLON table_literal SEMI','udf',8,'p_nary_udf','parser.py',411),
  ('constant -> CONST unreserved_id COLON sexpr SEMI','constant',5,'p_constant','parser.py',417),
  ('optional_arg_list -> function_arg_list','optional_arg_list',1,'p_optional_arg_list','parser.py',423),
  ('optional_arg_list -> empty','optional_arg_list',1,'p_optional_arg_list','parser.py',424),
  ('recursion_mode -> SYNC','recursion_mode',1,'p_recursion_mode','parser.py',429),
  ('recursion_mode -> ASYNC','recursion_mode',1,'p_recursion_mode','parser.py',430),
  ('recursion_mode -> empty','recursion_mode',1,'p_recursion_mode','parser.py',431),
  ('pull_order_policy -> ALTERNATE','pull_order_policy',1,'p_pull_order_policy','parser.py',436),
  ('pull_order_policy -> PULL_IDB','pull_order_policy',1,'p_pull_order_policy','parser.py',437),
  ('pull_order_policy -> PULL_EDB','pull_order_policy',1,'p_pull_order_policy','parser.py',438),
  ('pull_order_policy -> BUILD_EDB','pull_order_policy',1,'p_pull_order_policy','parser.py',439),
  ('pull_order_policy -> empty','pull_order_policy',1,'p_pull_order_policy','parser.py',440),
  ('function_arg_list -> function_arg_list COMMA unreserved_id','function_arg_list',3,'p_function_arg_list','parser.py',445),
  ('function_arg_list -> unreserved_id','function_arg_list',1,'p_function_arg_list','parser.py',446),
  ('statefunc_emit_list -> LBRACKET sexpr_list RBRACKET SEMI','statefunc_emit_list',4,'p_statefunc_emit_list','parser.py',454),
  ('statefunc_emit_list -> sexpr SEMI','statefunc_emit_list',2,'p_statefunc_emit_list','parser.py',455),
  ('statefunc_emit_list -> empty','statefunc_emit_list',1,'p_statefunc_emit_list','parser.py',456),
  ('decomposable_uda -> UDA TIMES unreserved_id LBRACE unreserved_id COMMA unreserved_id RBRACE SEMI','decomposable_uda',9,'p_decomposable_uda','parser.py',466),
  ('uda -> UDA unreserved_id LPAREN optional_arg_list RPAREN LBRACE table_literal SEMI LBRACKET sexpr_list RBRACKET SEMI statefunc_emit_list RBRACE SEMI','uda',15,'p_uda','parser.py',475),
  ('apply -> APPLY unreserved_id LPAREN optional_arg_list RPAREN LBRACE table_literal SEMI LBRACKET sexpr_list RBRACKET SEMI statefunc_emit_list RBRACE SEMI','apply',15,'p_apply','parser.py',488),
  ('statement -> unreserved_id EQUALS rvalue SEMI','statement',4,'p_statement_assign','parser.py',501),
  ('idbassign -> unreserved_id EQUALS LBRACKET emit_arg_list RBRACKET LARROW rvalue SEMI','idbassign',8,'p_idbassign','parser.py',506),
  ('statement -> SEMI','statement',1,'p_statement_empty','parser.py',512),
  ('rvalue -> expression','rvalue',1,'p_rvalue','parser.py',519),
  ('rvalue -> select_from_where','rvalue',1,'p_rvalue','parser.py',520),
  ('idbassign_list -> idbassign_list idbassign','idbassign_list',2,'p_idbassign_list','parser.py',525),
  ('idbassign_list -> idbassign','idbassign_list',1,'p_idbassign_list','parser.py',526),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',534),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',535),
  ('statement -> DO statement_list WHILE expression SEMI','statement',5,'p_statement_dowhile','parser.py',543),
  ('statement -> DO idbassign_list UNTIL CONVERGENCE recursion_mode pull_order_policy SEMI','statement',7,'p_statement_dountilconvergence','parser.py',548),
  ('statement -> STORE LPAREN unreserved_id COMMA relation_key optional_part_info RPAREN SEMI','statement',8,'p_statement_store','parser.py',554),
  ('statement -> SINK LPAREN unreserved_id RPAREN SEMI','statement',5,'p_statement_sink','parser.py',559),
  ('statement -> DUMP LPAREN unreserved_id RPAREN SEMI','statement',5,'p_statement_dump','parser.py',564),
  ('optional_part_info -> COMMA LBRACKET column_ref_list RBRACKET','optional_part_info',4,'p_optional_part_info','parser.py',569),
  ('optional_part_info -> COMMA HASH LPAREN column_ref_list RPAREN','optional_part_info',5,'p_optional_part_info','parser.py',570),
  ('optional_part_info -> COMMA BROADCAST LPAREN RPAREN','optional_part_info',4,'p_optional_part_info','parser.py',571),
  ('optional_part_info -> COMMA ROUND_ROBIN LPAREN RPAREN','optional_part_info',4,'p_optional_part_info','parser.py',572),
  ('optional_part_info -> empty','optional_part_info',1,'p_optional_part_info','parser.py',573),
  ('expression -> unreserved_id','expression',1,'p_expression_id','parser.py',586),
  ('sexpr_list -> sexpr_list COMMA sexpr','sexpr_list',3,'p_sexpr_list','parser.py',591),
  ('sexpr_list -> sexpr','sexpr_list',1,'p_sexpr_list','parser.py',592),
  ('expression -> table_literal','expression',1,'p_expression_table_literal','parser.py',600),
  ('table_literal -> LBRACKET emit_arg_list RBRACKET','table_literal',3,'p_table_literal','parser.py',605),
  ('expression -> EMPTY LPAREN column_def_list RPAREN','expression',4,'p_expression_empty','parser.py',610),
  ('expression -> SCAN LPAREN relation_key RPAREN','expression',4,'p_expression_scan','parser.py',615),
  ('expression -> SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL RPAREN','expression',6,'p_expression_samplescan','parser.py',620),
  ('expression -> SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL MOD RPAREN','expression',7,'p_expression_samplescan','parser.py',621),
  ('expression -> SAMPLESCAN LPAREN relation_key COMMA FLOAT_LITERAL MOD RPAREN','expression',7,'p_expression_samplescan','parser.py',622),
  ('expression -> SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL COMMA string_arg RPAREN','expression',8,'p_expression_samplescan','parser.py',623),
  ('expression -> SAMPLESCAN LPAREN relation_key COMMA INTEGER_LITERAL MOD COMMA string_arg RPAREN','expression',9,'p_expression_samplescan','parser.py',624),
  ('expression -> SAMPLESCAN LPAREN relation_key COMMA FLOAT_LITERAL MOD COMMA string_arg RPAREN','expression',9,'p_expression_samplescan','parser.py',625),
  ('expression -> LOAD LPAREN STRING_LITERAL COMMA file_parser_fun RPAREN','expression',6,'p_expression_load','parser.py',638),
  ('relation_key -> string_arg','relation_key',1,'p_relation_key','parser.py',644),
  ('relation_key -> string_arg COLON string_arg','relation_key',3,'p_relation_key','parser.py',645),
  ('relation_key -> string_arg COLON string_arg COLON string_arg','relation_key',5,'p_relation_key','parser.py',646),
  ('column_def_list -> column_def_list COMMA column_def','column_def_list',3,'p_column_def_list','parser.py',652),
  ('column_def_list -> column_def','column_def_list',1,'p_column_def_list','parser.py',653),
  ('column_def -> unreserved_id COLON type_name','column_def',3,'p_column_def','parser.py',662),
  ('schema_fun -> SCHEMA LPAREN column_def_list RPAREN','schema_fun',4,'p_schema_fun','parser.py',667),
  ('file_parser_fun -> CSV LPAREN schema_fun COMMA option_list RPAREN','file_parser_fun',6,'p_file_parser_fun','parser.py',672),
  ('file_parser_fun -> CSV LPAREN schema_fun RPAREN','file_parser_fun',4,'p_file_parser_fun','parser.py',673),
  ('file_parser_fun -> OPP LPAREN RPAREN','file_parser_fun',3,'p_file_parser_fun','parser.py',674),
  ('file_parser_fun -> TIPSY LPAREN implicit_tipsy_schema empty option_list RPAREN','file_parser_fun',6,'p_file_parser_fun','parser.py',675),
  ('file_parser_fun -> TIPSY LPAREN implicit_tipsy_schema RPAREN','file_parser_fun',4,'p_file_parser_fun','parser.py',676),
  ('implicit_tipsy_schema -> empty','implicit_tipsy_schema',1,'p_tipsy_schema','parser.py',688),
  ('option_list -> option_list COMMA option','option_list',3,'p_option_list','parser.py',709),
  ('option_list -> option','option_list',1,'p_option_list','parser.py',710),
  ('option -> unreserved_id EQUALS literal_arg','option',3,'p_option','parser.py',719),
  ('literal_arg -> STRING_LITERAL','literal_arg',1,'p_literal_arg','parser.py',724),
  ('literal_arg -> INTEGER_LITERAL','literal_arg',1,'p_literal_arg','parser.py',725),
  ('literal_arg -> FLOAT_LITERAL','literal_arg',1,'p_literal_arg','parser.py',726),
  ('literal_arg -> BLOB_LITERAL','literal_arg',1,'p_literal_arg','parser.py',727),
  ('literal_arg -> TRUE','literal_arg',1,'p_literal_arg','parser.py',728),
  ('literal_arg -> FALSE','literal_arg',1,'p_literal_arg','parser.py',729),
  ('type_name -> STRING','type_name',1,'p_type_name','parser.py',734),
  ('type_name -> INT','type_name',1,'p_type_name','parser.py',735),
  ('type_name -> BOOLEAN','type_name',1,'p_type_name','parser.py',736),
  ('type_name -> FLOAT','type_name',1,'p_type_name','parser.py',737),
  ('string_arg -> unreserved_id','string_arg',1,'p_string_arg','parser.py',742),
  ('string_arg -> STRING_LITERAL','string_arg',1,'p_string_arg','parser.py',743),
  ('expression -> LBRACKET FROM from_arg_list opt_where_clause EMIT emit_arg_list RBRACKET','expression',7,'p_expression_bagcomp','parser.py',748),
  ('from_arg_list -> from_arg_list COMMA from_arg','from_arg_list',3,'p_from_arg_list','parser.py',754),
  ('from_arg_list -> from_arg','from_arg_list',1,'p_from_arg_list','parser.py',755),
  ('from_arg -> expression optional_as unreserved_id','from_arg',3,'p_from_arg','parser.py',763),
  ('from_arg -> unreserved_id','from_arg',1,'p_from_arg','parser.py',764),
  ('optional_as -> AS','optional_as',1,'p_optional_as','parser.py',775),
  ('optional_as -> empty','optional_as',1,'p_optional_as','parser.py',776),
  ('opt_where_clause -> WHERE sexpr','opt_where_clause',2,'p_opt_where_clause','parser.py',781),
  ('opt_where_clause -> empty','opt_where_clause',1,'p_opt_where_clause','parser.py',782),
  ('emit_arg_list -> emit_arg_list COMMA emit_arg','emit_arg_list',3,'p_emit_arg_list','parser.py',790),
  ('emit_arg_list -> emit_arg','emit_arg_list',1,'p_emit_arg_list','parser.py',791),
  ('emit_arg -> sexpr AS LBRACKET unreserved_id_list RBRACKET','emit_arg',5,'p_emit_arg_explicit','parser.py',799),
  ('emit_arg -> sexpr AS unreserved_id','emit_arg',3,'p_emit_arg_explicit','parser.py',800),
  ('emit_arg -> sexpr','emit_arg',1,'p_emit_arg_explicit','parser.py',801),
  ('emit_arg -> unreserved_id DOT TIMES','emit_arg',3,'p_emit_arg_table_wildcard','parser.py',827),
  ('emit_arg -> TIMES','emit_arg',1,'p_emit_arg_full_wildcard','parser.py',832),
  ('expression -> LPAREN select_from_where RPAREN','expression',3,'p_expression_select_from_where','parser.py',837),
  ('select_from_where -> SELECT opt_distinct emit_arg_list FROM from_arg_list opt_where_clause opt_limit','select_from_where',7,'p_select_from_where','parser.py',842),
  ('opt_distinct -> DISTINCT','opt_distinct',1,'p_opt_distinct','parser.py',848),
  ('opt_distinct -> empty','opt_distinct',1,'p_opt_distinct','parser.py',849),
  ('opt_limit -> LIMIT INTEGER_LITERAL','opt_limit',2,'p_opt_limit','parser.py',855),
  ('opt_limit -> empty','opt_limit',1,'p_opt_limit','parser.py',856),
  ('expression -> LIMIT LPAREN expression COMMA INTEGER_LITERAL RPAREN','expression',6,'p_expression_limit','parser.py',864),
  ('expression -> DISTINCT LPAREN expression RPAREN','expression',4,'p_expression_distinct','parser.py',869),
  ('expression -> COUNTALL LPAREN expression RPAREN','expression',4,'p_expression_countall','parser.py',874),
  ('expression -> setop LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_binary_set_operation','parser.py',879),
  ('expression -> UNIONALL LPAREN expression_list RPAREN','expression',4,'p_expression_unionall','parser.py',884),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parser.py',889),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',890),
  ('setop -> INTERSECT','setop',1,'p_setop','parser.py',898),
  ('setop -> DIFF','setop',1,'p_setop','parser.py',899),
  ('setop -> UNION','setop',1,'p_setop','parser.py',900),
  ('expression -> expression PLUS expression','expression',3,'p_expression_unionall_plus_inline','parser.py',905),
  ('expression -> CROSS LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_cross','parser.py',910),
  ('expression -> JOIN LPAREN join_argument COMMA join_argument RPAREN','expression',6,'p_expression_join','parser.py',915),
  ('join_argument -> expression COMMA LPAREN column_ref_list RPAREN','join_argument',5,'p_join_argument_list','parser.py',922),
  ('join_argument -> expression COMMA column_ref','join_argument',3,'p_join_argument_single','parser.py',927),
  ('column_ref_list -> column_ref_list COMMA column_ref','column_ref_list',3,'p_column_ref_list','parser.py',934),
  ('column_ref_list -> column_ref','column_ref_list',1,'p_column_ref_list','parser.py',935),
  ('column_ref -> unreserved_id','column_ref',1,'p_column_ref_string','parser.py',943),
  ('column_ref -> DOLLAR INTEGER_LITERAL','column_ref',2,'p_column_ref_index','parser.py',948),
  ('sexpr -> INTEGER_LITERAL','sexpr',1,'p_sexpr_integer_literal','parser.py',956),
  ('sexpr -> STRING_LITERAL','sexpr',1,'p_sexpr_string_literal','parser.py',961),
  ('sexpr -> BLOB_LITERAL','sexpr',1,'p_sexpr_blob_literal','parser.py',966),
  ('sexpr -> FLOAT_LITERAL','sexpr',1,'p_sexpr_float_literal','parser.py',971),
  ('sexpr -> TRUE','sexpr',1,'p_sexpr_boolean_literal','parser.py',976),
  ('sexpr -> FALSE','sexpr',1,'p_sexpr_boolean_literal','parser.py',977),
  ('sexpr -> unreserved_id','sexpr',1,'p_sexpr_id','parser.py',983),
  ('sexpr -> DOLLAR INTEGER_LITERAL','sexpr',2,'p_sexpr_index','parser.py',993),
  ('sexpr -> unreserved_id DOT column_ref','sexpr',3,'p_sexpr_id_dot_ref','parser.py',998),
  ('sexpr -> LPAREN sexpr RPAREN','sexpr',3,'p_sexpr_group','parser.py',1003),
  ('sexpr -> MINUS sexpr','sexpr',2,'p_sexpr_uminus','parser.py',1008),
  ('sexpr -> WORKER_ID LPAREN RPAREN','sexpr',3,'p_sexpr_worker_id','parser.py',1013),
  ('sexpr -> sexpr PLUS sexpr','sexpr',3,'p_sexpr_binop','parser.py',1018),
  ('sexpr -> sexpr MINUS sexpr','sexpr',3,'p_sexpr_binop','parser.py',1019),
  ('sexpr -> sexpr TIMES sexpr','sexpr',3,'p_sexpr_binop','parser.py',1020),
  ('sexpr -> sexpr DIVIDE sexpr','sexpr',3,'p_sexpr_binop','parser.py',1021),
  ('sexpr -> sexpr IDIVIDE sexpr','sexpr',3,'p_sexpr_binop','parser.py',1022),
  ('sexpr -> sexpr MOD sexpr','sexpr',3,'p_sexpr_binop','parser.py',1023),
  ('sexpr -> sexpr GT sexpr','sexpr',3,'p_sexpr_binop','parser.py',1024),
  ('sexpr -> sexpr LT sexpr','sexpr',3,'p_sexpr_binop','parser.py',1025),
  ('sexpr -> sexpr GE sexpr','sexpr',3,'p_sexpr_binop','parser.py',1026),
  ('sexpr -> sexpr GE2 sexpr','sexpr',3,'p_sexpr_binop','parser.py',1027),
  ('sexpr -> sexpr LE sexpr','sexpr',3,'p_sexpr_binop','parser.py',1028),
  ('sexpr -> sexpr LE2 sexpr','sexpr',3,'p_sexpr_binop','parser.py',1029),
  ('sexpr -> sexpr NE sexpr','sexpr',3,'p_sexpr_binop','parser.py',1030),
  ('sexpr -> sexpr NE2 sexpr','sexpr',3,'p_sexpr_binop','parser.py',1031),
  ('sexpr -> sexpr NE3 sexpr','sexpr',3,'p_sexpr_binop','parser.py',1032),
  ('sexpr -> sexpr EQ sexpr','sexpr',3,'p_sexpr_binop','parser.py',1033),
  ('sexpr -> sexpr EQUALS sexpr','sexpr',3,'p_sexpr_binop','parser.py',1034),
  ('sexpr -> sexpr AND sexpr','sexpr',3,'p_sexpr_binop','parser.py',1035),
  ('sexpr -> sexpr OR sexpr','sexpr',3,'p_sexpr_binop','parser.py',1036),
  ('sexpr -> sexpr LIKE sexpr','sexpr',3,'p_sexpr_binop','parser.py',1037),
  ('sexpr -> NOT sexpr','sexpr',2,'p_sexpr_not','parser.py',1042),
  ('sexpr -> ID LPAREN function_param_list RPAREN','sexpr',4,'p_sexpr_function_k_args','parser.py',1147),
  ('sexpr -> ID LPAREN RPAREN','sexpr',3,'p_sexpr_function_zero_args','parser.py',1152),
  ('function_param_list -> function_param_list COMMA sexpr','function_param_list',3,'p_function_param_list','parser.py',1157),
  ('function_param_list -> sexpr','function_param_list',1,'p_function_param_list','parser.py',1158),
  ('sexpr -> COUNTALL LPAREN RPAREN','sexpr',3,'p_sexpr_countall','parser.py',1166),
  ('sexpr -> COUNT LPAREN count_arg RPAREN','sexpr',4,'p_sexpr_count','parser.py',1171),
  ('sexpr -> type_name LPAREN sexpr RPAREN','sexpr',4,'p_sexpr_cast','parser.py',1179),
  ('count_arg -> TIMES','count_arg',1,'p_count_arg','parser.py',1184),
  ('count_arg -> sexpr','count_arg',1,'p_count_arg','parser.py',1185),
  ('sexpr -> TIMES unreserved_id optional_column_ref','sexpr',3,'p_sexpr_unbox','parser.py',1190),
  ('when_expr -> WHEN sexpr THEN sexpr','when_expr',4,'p_when_expr','parser.py',1195),
  ('when_expr_list -> when_expr_list when_expr','when_expr_list',2,'p_when_expr_list','parser.py',1200),
  ('when_expr_list -> when_expr','when_expr_list',1,'p_when_expr_list','parser.py',1201),
  ('sexpr -> CASE when_expr_list ELSE sexpr END','sexpr',5,'p_sexpr_case','parser.py',1210),
  ('optional_column_ref -> DOT column_ref','optional_column_ref',2,'p_optional_column_ref','parser.py',1215),
  ('optional_column_ref -> empty','optional_column_ref',1,'p_optional_column_ref','parser.py',1216),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1224),
]
